Archive member included to satisfy reference by file (symbol)

app/libapp.a(main.c.obj)      (--whole-archive)
zephyr/libzephyr.a(cbprintf.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(crc32c_sw.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(crc32_sw.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(crc16_sw.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(crc8_sw.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(crc7_sw.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(dec.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(fdtable.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(hex.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(notify.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(printk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(onoff.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rb.c.obj)  (--whole-archive)
zephyr/libzephyr.a(sem.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(thread_entry.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(timeutil.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(heap.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(heap-validate.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bitarray.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(multi_heap.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cbprintf_complete.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(configs.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(soc.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp32-mp.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(loader.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(tracing_none.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(pinmux_esp32.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(windowspill_asm.S.obj)
                              (--whole-archive)
zephyr/libzephyr.a(i2c_hal_iram.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(i2c_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(uart_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(uart_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(uart_hal_iram.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(gpio_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_io_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_clk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_time.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_clk_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(clk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(ets_timer_legacy.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_timer.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(periph_ctrl.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log_noos.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_system_api.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(dport_access.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(stubs.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(heap_caps.c.obj)
                              (--whole-archive)
zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
                              (--whole-archive)
zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
                              (--whole-archive)
zephyr/lib/posix/liblib__posix.a(pthread_common.c.obj)
                              (--whole-archive)
zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
                              (--whole-archive)
zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
                              (--whole-archive)
zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                              (--whole-archive)
zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
                              (--whole-archive)
zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
                              (--whole-archive)
zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                              (--whole-archive)
zephyr/kernel/libkernel.a(device.c.obj)
                              app/libapp.a(main.c.obj) (z_device_is_ready)
zephyr/kernel/libkernel.a(errno.c.obj)
                              zephyr/libzephyr.a(fdtable.c.obj) (z_impl_z_errno)
zephyr/kernel/libkernel.a(fatal.c.obj)
                              zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj) (z_fatal_error)
zephyr/kernel/libkernel.a(init.c.obj)
                              zephyr/libzephyr.a(soc.c.obj) (_kernel)
zephyr/kernel/libkernel.a(kheap.c.obj)
                              zephyr/libzephyr.a(heap_caps.c.obj) (k_heap_aligned_alloc)
zephyr/kernel/libkernel.a(thread.c.obj)
                              zephyr/libzephyr.a(esp_timer.c.obj) (z_impl_k_thread_name_set)
zephyr/kernel/libkernel.a(idle.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (idle)
zephyr/kernel/libkernel.a(mutex.c.obj)
                              zephyr/libzephyr.a(fdtable.c.obj) (z_impl_k_mutex_init)
zephyr/kernel/libkernel.a(sem.c.obj)
                              zephyr/libzephyr.a(sem.c.obj) (z_impl_k_sem_init)
zephyr/kernel/libkernel.a(sched.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (z_reset_time_slice)
zephyr/kernel/libkernel.a(timeout.c.obj)
                              zephyr/kernel/libkernel.a(thread.c.obj) (z_add_timeout)
zephyr/kernel/libkernel.a(mempool.c.obj)
                              zephyr/libzephyr.a(esp_timer.c.obj) (k_free)
zephyr/kernel/libkernel.a(banner.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (boot_banner)
/home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_addsubdf3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__subdf3)
/home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_muldf3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__muldf3)
/home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdf3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__divdf3)
/home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_fixdfdi.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__fixdfdi)
/home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatsidf.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__floatunsidf)
/home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatdidf.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__floatundidf)
/home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_truncdfsf2.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__truncdfsf2)
/home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_extendsfdf2.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__extendsfdf2)
/home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__divdi3)
/home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
                              zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj) (__moddi3)
/home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (__udivdi3)
/home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (__umoddi3)
zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                              zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj) (_sw_isr_table)

Discarded input sections

 .text          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre1.dir/misc/empty_file.c.obj
 .data          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre1.dir/misc/empty_file.c.obj
 .bss           0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre1.dir/misc/empty_file.c.obj
 .debug_line    0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre1.dir/misc/empty_file.c.obj
 .debug_str     0x0000000000000000      0x11a zephyr/CMakeFiles/zephyr_pre1.dir/misc/empty_file.c.obj
 .comment       0x0000000000000000       0x26 zephyr/CMakeFiles/zephyr_pre1.dir/misc/empty_file.c.obj
 .text          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre1.dir/dev_handles.c.obj
 .data          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre1.dir/dev_handles.c.obj
 .bss           0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre1.dir/dev_handles.c.obj
 .xt.prop       0x0000000000000000       0x48 zephyr/CMakeFiles/zephyr_pre1.dir/dev_handles.c.obj
 .text          0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .data          0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .bss           0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .xt.prop       0x0000000000000000       0x24 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .text          0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .data          0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .bss           0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .xt.lit        0x0000000000000000        0x8 app/libapp.a(main.c.obj)
 .xt.prop       0x0000000000000000       0x30 app/libapp.a(main.c.obj)
 .literal.cbprintf
                0x0000000000000000        0x4 zephyr/libzephyr.a(cbprintf.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf.c.obj)
 .text.cbprintf
                0x0000000000000000       0x28 zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_info    0x0000000000000000      0x184 zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_abbrev  0x0000000000000000      0x11f zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_loc     0x0000000000000000       0x3a zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_line    0x0000000000000000      0x17e zephyr/libzephyr.a(cbprintf.c.obj)
 .debug_str     0x0000000000000000      0x215 zephyr/libzephyr.a(cbprintf.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(cbprintf.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/libzephyr.a(cbprintf.c.obj)
 .xt.prop       0x0000000000000000       0x30 zephyr/libzephyr.a(cbprintf.c.obj)
 .literal.cbvprintf_package
                0x0000000000000000       0x18 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbprintf_package
                0x0000000000000000        0x4 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbpprintf_external
                0x0000000000000000        0x4 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbprintf_package_copy
                0x0000000000000000       0x30 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbvprintf_package
                0x0000000000000000      0x363 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .rodata.cbvprintf_package
                0x0000000000000000      0x16c zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbprintf_package
                0x0000000000000000       0x2d zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbpprintf_external
                0x0000000000000000       0x59 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbprintf_package_copy
                0x0000000000000000      0x2bc zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_info    0x0000000000000000     0x10d5 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_abbrev  0x0000000000000000      0x438 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_loc     0x0000000000000000     0x17ca zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_ranges  0x0000000000000000      0x278 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_line    0x0000000000000000     0x1a0e zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_str     0x0000000000000000      0x493 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .xt.lit        0x0000000000000000       0x20 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .xt.prop       0x0000000000000000      0x648 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.crc32_c
                0x0000000000000000        0x4 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .text.crc32_c  0x0000000000000000       0x52 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .rodata.crc32c_table
                0x0000000000000000       0x40 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .debug_info    0x0000000000000000      0x164 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .debug_abbrev  0x0000000000000000       0xf1 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .debug_loc     0x0000000000000000       0xc7 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .debug_line    0x0000000000000000      0x260 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .debug_str     0x0000000000000000      0x1f6 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .xt.prop       0x0000000000000000       0x60 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .literal.crc32_ieee_update
                0x0000000000000000        0x4 zephyr/libzephyr.a(crc32_sw.c.obj)
 .literal.crc32_ieee
                0x0000000000000000        0x4 zephyr/libzephyr.a(crc32_sw.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(crc32_sw.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(crc32_sw.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(crc32_sw.c.obj)
 .text.crc32_ieee_update
                0x0000000000000000       0x4a zephyr/libzephyr.a(crc32_sw.c.obj)
 .text.crc32_ieee
                0x0000000000000000       0x14 zephyr/libzephyr.a(crc32_sw.c.obj)
 .rodata.table$1025
                0x0000000000000000       0x40 zephyr/libzephyr.a(crc32_sw.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(crc32_sw.c.obj)
 .debug_info    0x0000000000000000      0x1a9 zephyr/libzephyr.a(crc32_sw.c.obj)
 .debug_abbrev  0x0000000000000000      0x12e zephyr/libzephyr.a(crc32_sw.c.obj)
 .debug_loc     0x0000000000000000       0xc2 zephyr/libzephyr.a(crc32_sw.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(crc32_sw.c.obj)
 .debug_ranges  0x0000000000000000       0x30 zephyr/libzephyr.a(crc32_sw.c.obj)
 .debug_line    0x0000000000000000      0x2b6 zephyr/libzephyr.a(crc32_sw.c.obj)
 .debug_str     0x0000000000000000      0x1ef zephyr/libzephyr.a(crc32_sw.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(crc32_sw.c.obj)
 .xt.lit        0x0000000000000000       0x10 zephyr/libzephyr.a(crc32_sw.c.obj)
 .xt.prop       0x0000000000000000       0x84 zephyr/libzephyr.a(crc32_sw.c.obj)
 .literal.crc16_itu_t
                0x0000000000000000        0x4 zephyr/libzephyr.a(crc16_sw.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(crc16_sw.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(crc16_sw.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(crc16_sw.c.obj)
 .text.crc16    0x0000000000000000       0x3b zephyr/libzephyr.a(crc16_sw.c.obj)
 .text.crc16_reflect
                0x0000000000000000       0x33 zephyr/libzephyr.a(crc16_sw.c.obj)
 .text.crc16_ccitt
                0x0000000000000000       0x3c zephyr/libzephyr.a(crc16_sw.c.obj)
 .text.crc16_itu_t
                0x0000000000000000       0x46 zephyr/libzephyr.a(crc16_sw.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(crc16_sw.c.obj)
 .debug_info    0x0000000000000000      0x2a2 zephyr/libzephyr.a(crc16_sw.c.obj)
 .debug_abbrev  0x0000000000000000       0xea zephyr/libzephyr.a(crc16_sw.c.obj)
 .debug_loc     0x0000000000000000      0x2d4 zephyr/libzephyr.a(crc16_sw.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(crc16_sw.c.obj)
 .debug_ranges  0x0000000000000000       0x28 zephyr/libzephyr.a(crc16_sw.c.obj)
 .debug_line    0x0000000000000000      0x589 zephyr/libzephyr.a(crc16_sw.c.obj)
 .debug_str     0x0000000000000000      0x1f8 zephyr/libzephyr.a(crc16_sw.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(crc16_sw.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/libzephyr.a(crc16_sw.c.obj)
 .xt.prop       0x0000000000000000      0x12c zephyr/libzephyr.a(crc16_sw.c.obj)
 .literal.crc8_ccitt
                0x0000000000000000        0x4 zephyr/libzephyr.a(crc8_sw.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(crc8_sw.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(crc8_sw.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(crc8_sw.c.obj)
 .text.crc8_ccitt
                0x0000000000000000       0x3f zephyr/libzephyr.a(crc8_sw.c.obj)
 .text.crc8     0x0000000000000000       0x4d zephyr/libzephyr.a(crc8_sw.c.obj)
 .rodata.crc8_ccitt_small_table
                0x0000000000000000       0x10 zephyr/libzephyr.a(crc8_sw.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(crc8_sw.c.obj)
 .debug_info    0x0000000000000000      0x1df zephyr/libzephyr.a(crc8_sw.c.obj)
 .debug_abbrev  0x0000000000000000       0xed zephyr/libzephyr.a(crc8_sw.c.obj)
 .debug_loc     0x0000000000000000      0x142 zephyr/libzephyr.a(crc8_sw.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(crc8_sw.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/libzephyr.a(crc8_sw.c.obj)
 .debug_line    0x0000000000000000      0x3bd zephyr/libzephyr.a(crc8_sw.c.obj)
 .debug_str     0x0000000000000000      0x207 zephyr/libzephyr.a(crc8_sw.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(crc8_sw.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/libzephyr.a(crc8_sw.c.obj)
 .xt.prop       0x0000000000000000       0xb4 zephyr/libzephyr.a(crc8_sw.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(crc7_sw.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(crc7_sw.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(crc7_sw.c.obj)
 .text.crc7_be  0x0000000000000000       0x33 zephyr/libzephyr.a(crc7_sw.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/libzephyr.a(crc7_sw.c.obj)
 .debug_info    0x0000000000000000      0x11b zephyr/libzephyr.a(crc7_sw.c.obj)
 .debug_abbrev  0x0000000000000000       0xac zephyr/libzephyr.a(crc7_sw.c.obj)
 .debug_loc     0x0000000000000000       0xe0 zephyr/libzephyr.a(crc7_sw.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(crc7_sw.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/libzephyr.a(crc7_sw.c.obj)
 .debug_line    0x0000000000000000      0x1b0 zephyr/libzephyr.a(crc7_sw.c.obj)
 .debug_str     0x0000000000000000      0x1c5 zephyr/libzephyr.a(crc7_sw.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(crc7_sw.c.obj)
 .xt.prop       0x0000000000000000       0x3c zephyr/libzephyr.a(crc7_sw.c.obj)
 .literal.u8_to_dec
                0x0000000000000000        0x4 zephyr/libzephyr.a(dec.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .text.u8_to_dec
                0x0000000000000000       0x6c zephyr/libzephyr.a(dec.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/libzephyr.a(dec.c.obj)
 .debug_info    0x0000000000000000      0x11f zephyr/libzephyr.a(dec.c.obj)
 .debug_abbrev  0x0000000000000000       0x9c zephyr/libzephyr.a(dec.c.obj)
 .debug_loc     0x0000000000000000      0x105 zephyr/libzephyr.a(dec.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(dec.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/libzephyr.a(dec.c.obj)
 .debug_line    0x0000000000000000      0x227 zephyr/libzephyr.a(dec.c.obj)
 .debug_str     0x0000000000000000      0x1e2 zephyr/libzephyr.a(dec.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(dec.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/libzephyr.a(dec.c.obj)
 .xt.prop       0x0000000000000000       0x90 zephyr/libzephyr.a(dec.c.obj)
 .literal._check_fd
                0x0000000000000000        0x8 zephyr/libzephyr.a(fdtable.c.obj)
 .literal.z_get_fd_obj
                0x0000000000000000        0xc zephyr/libzephyr.a(fdtable.c.obj)
 .literal.z_get_fd_obj_and_vtable
                0x0000000000000000        0x8 zephyr/libzephyr.a(fdtable.c.obj)
 .literal.z_reserve_fd
                0x0000000000000000       0x30 zephyr/libzephyr.a(fdtable.c.obj)
 .literal.z_finalize_fd
                0x0000000000000000        0x8 zephyr/libzephyr.a(fdtable.c.obj)
 .literal.z_free_fd
                0x0000000000000000        0x4 zephyr/libzephyr.a(fdtable.c.obj)
 .literal.z_alloc_fd
                0x0000000000000000        0x8 zephyr/libzephyr.a(fdtable.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(fdtable.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(fdtable.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(fdtable.c.obj)
 .text.z_fdtable_call_ioctl$constprop$2
                0x0000000000000000       0x25 zephyr/libzephyr.a(fdtable.c.obj)
 .text._check_fd
                0x0000000000000000       0x2a zephyr/libzephyr.a(fdtable.c.obj)
 .text.z_get_fd_obj
                0x0000000000000000       0x35 zephyr/libzephyr.a(fdtable.c.obj)
 .text.z_get_fd_obj_and_vtable
                0x0000000000000000       0x2d zephyr/libzephyr.a(fdtable.c.obj)
 .text.z_reserve_fd
                0x0000000000000000       0x8e zephyr/libzephyr.a(fdtable.c.obj)
 .text.z_finalize_fd
                0x0000000000000000       0x28 zephyr/libzephyr.a(fdtable.c.obj)
 .text.z_free_fd
                0x0000000000000000       0x2c zephyr/libzephyr.a(fdtable.c.obj)
 .text.z_alloc_fd
                0x0000000000000000       0x1c zephyr/libzephyr.a(fdtable.c.obj)
 ._k_mutex.static.fdtable_lock
                0x0000000000000000       0x14 zephyr/libzephyr.a(fdtable.c.obj)
 .bss.fdtable   0x0000000000000000       0x80 zephyr/libzephyr.a(fdtable.c.obj)
 .debug_frame   0x0000000000000000       0xd0 zephyr/libzephyr.a(fdtable.c.obj)
 .debug_info    0x0000000000000000     0x1933 zephyr/libzephyr.a(fdtable.c.obj)
 .debug_abbrev  0x0000000000000000      0x462 zephyr/libzephyr.a(fdtable.c.obj)
 .debug_loc     0x0000000000000000      0x590 zephyr/libzephyr.a(fdtable.c.obj)
 .debug_aranges
                0x0000000000000000       0x58 zephyr/libzephyr.a(fdtable.c.obj)
 .debug_ranges  0x0000000000000000      0x150 zephyr/libzephyr.a(fdtable.c.obj)
 .debug_line    0x0000000000000000      0xdb2 zephyr/libzephyr.a(fdtable.c.obj)
 .debug_str     0x0000000000000000     0x1431 zephyr/libzephyr.a(fdtable.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(fdtable.c.obj)
 .xt.lit        0x0000000000000000       0x38 zephyr/libzephyr.a(fdtable.c.obj)
 .xt.prop       0x0000000000000000      0x270 zephyr/libzephyr.a(fdtable.c.obj)
 .literal.bin2hex
                0x0000000000000000        0x8 zephyr/libzephyr.a(hex.c.obj)
 .literal.hex2bin
                0x0000000000000000        0xc zephyr/libzephyr.a(hex.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .text.char2hex
                0x0000000000000000       0x3e zephyr/libzephyr.a(hex.c.obj)
 .text.hex2char
                0x0000000000000000       0x22 zephyr/libzephyr.a(hex.c.obj)
 .text.bin2hex  0x0000000000000000       0x52 zephyr/libzephyr.a(hex.c.obj)
 .text.hex2bin  0x0000000000000000       0x78 zephyr/libzephyr.a(hex.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(hex.c.obj)
 .debug_info    0x0000000000000000      0x2da zephyr/libzephyr.a(hex.c.obj)
 .debug_abbrev  0x0000000000000000      0x16f zephyr/libzephyr.a(hex.c.obj)
 .debug_loc     0x0000000000000000      0x28e zephyr/libzephyr.a(hex.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(hex.c.obj)
 .debug_ranges  0x0000000000000000       0x28 zephyr/libzephyr.a(hex.c.obj)
 .debug_line    0x0000000000000000      0x4df zephyr/libzephyr.a(hex.c.obj)
 .debug_str     0x0000000000000000      0x1e9 zephyr/libzephyr.a(hex.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(hex.c.obj)
 .xt.lit        0x0000000000000000       0x10 zephyr/libzephyr.a(hex.c.obj)
 .xt.prop       0x0000000000000000      0x174 zephyr/libzephyr.a(hex.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(notify.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(notify.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(notify.c.obj)
 .text.sys_notify_validate
                0x0000000000000000       0x27 zephyr/libzephyr.a(notify.c.obj)
 .text.sys_notify_finalize
                0x0000000000000000       0x23 zephyr/libzephyr.a(notify.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(notify.c.obj)
 .debug_info    0x0000000000000000     0x1018 zephyr/libzephyr.a(notify.c.obj)
 .debug_abbrev  0x0000000000000000      0x291 zephyr/libzephyr.a(notify.c.obj)
 .debug_loc     0x0000000000000000       0xe1 zephyr/libzephyr.a(notify.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(notify.c.obj)
 .debug_ranges  0x0000000000000000       0x30 zephyr/libzephyr.a(notify.c.obj)
 .debug_line    0x0000000000000000      0x533 zephyr/libzephyr.a(notify.c.obj)
 .debug_str     0x0000000000000000     0x107e zephyr/libzephyr.a(notify.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(notify.c.obj)
 .xt.prop       0x0000000000000000       0x6c zephyr/libzephyr.a(notify.c.obj)
 .literal.__printk_get_hook
                0x0000000000000000        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.z_impl_k_str_out
                0x0000000000000000        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.vsnprintk
                0x0000000000000000        0x8 zephyr/libzephyr.a(printk.c.obj)
 .literal.snprintk
                0x0000000000000000        0x4 zephyr/libzephyr.a(printk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .text.arch_printk_char_out
                0x0000000000000000        0x7 zephyr/libzephyr.a(printk.c.obj)
 .text.str_out  0x0000000000000000       0x2d zephyr/libzephyr.a(printk.c.obj)
 .text.__printk_get_hook
                0x0000000000000000        0xa zephyr/libzephyr.a(printk.c.obj)
 .text.z_impl_k_str_out
                0x0000000000000000       0x1d zephyr/libzephyr.a(printk.c.obj)
 .text.vsnprintk
                0x0000000000000000       0x2e zephyr/libzephyr.a(printk.c.obj)
 .text.snprintk
                0x0000000000000000       0x28 zephyr/libzephyr.a(printk.c.obj)
 .xt.lit        0x0000000000000000       0x40 zephyr/libzephyr.a(printk.c.obj)
 .xt.prop       0x0000000000000000      0x234 zephyr/libzephyr.a(printk.c.obj)
 .literal.notify_one
                0x0000000000000000        0x4 zephyr/libzephyr.a(onoff.c.obj)
 .literal.process_event
                0x0000000000000000       0x14 zephyr/libzephyr.a(onoff.c.obj)
 .literal.transition_complete
                0x0000000000000000        0x4 zephyr/libzephyr.a(onoff.c.obj)
 .literal.validate_args
                0x0000000000000000        0x4 zephyr/libzephyr.a(onoff.c.obj)
 .literal.onoff_manager_init
                0x0000000000000000        0x4 zephyr/libzephyr.a(onoff.c.obj)
 .literal.onoff_request
                0x0000000000000000       0x10 zephyr/libzephyr.a(onoff.c.obj)
 .literal.onoff_release
                0x0000000000000000        0x4 zephyr/libzephyr.a(onoff.c.obj)
 .literal.onoff_reset
                0x0000000000000000        0x8 zephyr/libzephyr.a(onoff.c.obj)
 .literal.onoff_sync_finalize
                0x0000000000000000        0x4 zephyr/libzephyr.a(onoff.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(onoff.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(onoff.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(onoff.c.obj)
 .text.process_recheck
                0x0000000000000000       0x38 zephyr/libzephyr.a(onoff.c.obj)
 .text.notify_one
                0x0000000000000000       0x1e zephyr/libzephyr.a(onoff.c.obj)
 .text.process_event
                0x0000000000000000      0x1d9 zephyr/libzephyr.a(onoff.c.obj)
 .text.transition_complete
                0x0000000000000000       0x14 zephyr/libzephyr.a(onoff.c.obj)
 .text.validate_args
                0x0000000000000000       0x2e zephyr/libzephyr.a(onoff.c.obj)
 .text.onoff_manager_init
                0x0000000000000000       0x38 zephyr/libzephyr.a(onoff.c.obj)
 .text.onoff_request
                0x0000000000000000       0xaa zephyr/libzephyr.a(onoff.c.obj)
 .text.onoff_release
                0x0000000000000000       0x44 zephyr/libzephyr.a(onoff.c.obj)
 .text.onoff_reset
                0x0000000000000000       0x5e zephyr/libzephyr.a(onoff.c.obj)
 .text.onoff_cancel
                0x0000000000000000       0x61 zephyr/libzephyr.a(onoff.c.obj)
 .text.onoff_monitor_register
                0x0000000000000000       0x40 zephyr/libzephyr.a(onoff.c.obj)
 .text.onoff_monitor_unregister
                0x0000000000000000       0x56 zephyr/libzephyr.a(onoff.c.obj)
 .text.onoff_sync_lock
                0x0000000000000000        0xc zephyr/libzephyr.a(onoff.c.obj)
 .text.onoff_sync_finalize
                0x0000000000000000       0x42 zephyr/libzephyr.a(onoff.c.obj)
 .debug_frame   0x0000000000000000      0x160 zephyr/libzephyr.a(onoff.c.obj)
 .debug_info    0x0000000000000000     0x2f31 zephyr/libzephyr.a(onoff.c.obj)
 .debug_abbrev  0x0000000000000000      0x555 zephyr/libzephyr.a(onoff.c.obj)
 .debug_loc     0x0000000000000000     0x1b0a zephyr/libzephyr.a(onoff.c.obj)
 .debug_aranges
                0x0000000000000000       0x88 zephyr/libzephyr.a(onoff.c.obj)
 .debug_ranges  0x0000000000000000      0x5f8 zephyr/libzephyr.a(onoff.c.obj)
 .debug_line    0x0000000000000000     0x2392 zephyr/libzephyr.a(onoff.c.obj)
 .debug_str     0x0000000000000000     0x1496 zephyr/libzephyr.a(onoff.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(onoff.c.obj)
 .xt.lit        0x0000000000000000       0x48 zephyr/libzephyr.a(onoff.c.obj)
 .xt.prop       0x0000000000000000      0x690 zephyr/libzephyr.a(onoff.c.obj)
 .literal.rotate
                0x0000000000000000       0x10 zephyr/libzephyr.a(rb.c.obj)
 .literal.rb_insert
                0x0000000000000000       0x10 zephyr/libzephyr.a(rb.c.obj)
 .literal.rb_remove
                0x0000000000000000       0x24 zephyr/libzephyr.a(rb.c.obj)
 .literal.z_rb_walk
                0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .literal.z_rb_foreach_next
                0x0000000000000000        0x4 zephyr/libzephyr.a(rb.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .text.set_child
                0x0000000000000000       0x16 zephyr/libzephyr.a(rb.c.obj)
 .text.find_and_stack
                0x0000000000000000       0x36 zephyr/libzephyr.a(rb.c.obj)
 .text.rotate   0x0000000000000000       0x92 zephyr/libzephyr.a(rb.c.obj)
 .text.stack_left_limb
                0x0000000000000000       0x49 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_get_minmax
                0x0000000000000000       0x22 zephyr/libzephyr.a(rb.c.obj)
 .text.rb_insert
                0x0000000000000000      0x147 zephyr/libzephyr.a(rb.c.obj)
 .text.rb_remove
                0x0000000000000000      0x332 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_walk
                0x0000000000000000       0x23 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_child
                0x0000000000000000       0x16 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_is_black
                0x0000000000000000        0xa zephyr/libzephyr.a(rb.c.obj)
 .text.rb_contains
                0x0000000000000000       0x31 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_foreach_next
                0x0000000000000000       0x64 zephyr/libzephyr.a(rb.c.obj)
 .debug_frame   0x0000000000000000      0x130 zephyr/libzephyr.a(rb.c.obj)
 .debug_info    0x0000000000000000     0x2f08 zephyr/libzephyr.a(rb.c.obj)
 .debug_abbrev  0x0000000000000000      0x55c zephyr/libzephyr.a(rb.c.obj)
 .debug_loc     0x0000000000000000     0x20f4 zephyr/libzephyr.a(rb.c.obj)
 .debug_aranges
                0x0000000000000000       0x78 zephyr/libzephyr.a(rb.c.obj)
 .debug_ranges  0x0000000000000000      0x6a8 zephyr/libzephyr.a(rb.c.obj)
 .debug_line    0x0000000000000000     0x297a zephyr/libzephyr.a(rb.c.obj)
 .debug_str     0x0000000000000000     0x11c4 zephyr/libzephyr.a(rb.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(rb.c.obj)
 .xt.lit        0x0000000000000000       0x20 zephyr/libzephyr.a(rb.c.obj)
 .xt.prop       0x0000000000000000      0x5e8 zephyr/libzephyr.a(rb.c.obj)
 .literal.sys_sem_init
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .literal.sys_sem_give
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .literal.sys_sem_take
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_init
                0x0000000000000000       0x14 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_give
                0x0000000000000000       0x10 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_take
                0x0000000000000000       0x30 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_count_get
                0x0000000000000000        0x7 zephyr/libzephyr.a(sem.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(sem.c.obj)
 .debug_info    0x0000000000000000     0x115f zephyr/libzephyr.a(sem.c.obj)
 .debug_abbrev  0x0000000000000000      0x270 zephyr/libzephyr.a(sem.c.obj)
 .debug_loc     0x0000000000000000      0x144 zephyr/libzephyr.a(sem.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(sem.c.obj)
 .debug_ranges  0x0000000000000000       0x58 zephyr/libzephyr.a(sem.c.obj)
 .debug_line    0x0000000000000000      0x60f zephyr/libzephyr.a(sem.c.obj)
 .debug_str     0x0000000000000000     0x10de zephyr/libzephyr.a(sem.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(sem.c.obj)
 .xt.lit        0x0000000000000000       0x18 zephyr/libzephyr.a(sem.c.obj)
 .xt.prop       0x0000000000000000       0xcc zephyr/libzephyr.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/libzephyr.a(thread_entry.c.obj)
 .xt.prop       0x0000000000000000       0x24 zephyr/libzephyr.a(thread_entry.c.obj)
 .literal.timeutil_timegm64
                0x0000000000000000       0x24 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_timegm
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_state_update
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_state_set_skew
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_estimate_skew
                0x0000000000000000       0x24 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_ref_from_local
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_local_from_ref
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_skew_to_ppb
                0x0000000000000000       0x24 zephyr/libzephyr.a(timeutil.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_timegm64
                0x0000000000000000      0x132 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_timegm
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_state_update
                0x0000000000000000       0x76 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_state_set_skew
                0x0000000000000000       0x40 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_estimate_skew
                0x0000000000000000       0xd0 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_ref_from_local
                0x0000000000000000       0xbe zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_local_from_ref
                0x0000000000000000       0xbe zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_skew_to_ppb
                0x0000000000000000       0x3b zephyr/libzephyr.a(timeutil.c.obj)
 .debug_frame   0x0000000000000000       0xd0 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_info    0x0000000000000000      0x743 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_abbrev  0x0000000000000000      0x22a zephyr/libzephyr.a(timeutil.c.obj)
 .debug_loc     0x0000000000000000      0x705 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_aranges
                0x0000000000000000       0x58 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_ranges  0x0000000000000000       0x78 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_line    0x0000000000000000      0xc02 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_str     0x0000000000000000      0x3f3 zephyr/libzephyr.a(timeutil.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(timeutil.c.obj)
 .xt.lit        0x0000000000000000       0x40 zephyr/libzephyr.a(timeutil.c.obj)
 .xt.prop       0x0000000000000000      0x354 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.sys_heap_usable_size
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap.c.obj)
 .literal.sys_heap_aligned_realloc
                0x0000000000000000       0x50 zephyr/libzephyr.a(heap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_usable_size
                0x0000000000000000       0x2b zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_aligned_realloc
                0x0000000000000000      0x17e zephyr/libzephyr.a(heap.c.obj)
 .xt.lit        0x0000000000000000       0xa0 zephyr/libzephyr.a(heap.c.obj)
 .xt.prop       0x0000000000000000      0x5c4 zephyr/libzephyr.a(heap.c.obj)
 .literal.chunk_field
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap-validate.c.obj)
 .literal.chunk_used
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap-validate.c.obj)
 .literal.chunk_size
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap-validate.c.obj)
 .literal.set_chunk_used
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap-validate.c.obj)
 .literal.right_chunk
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap-validate.c.obj)
 .literal.solo_free_header
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap-validate.c.obj)
 .literal.rand32
                0x0000000000000000       0x14 zephyr/libzephyr.a(heap-validate.c.obj)
 .literal.in_bounds
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap-validate.c.obj)
 .literal.bucket_idx
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap-validate.c.obj)
 .literal.valid_chunk
                0x0000000000000000       0x3c zephyr/libzephyr.a(heap-validate.c.obj)
 .literal.sys_heap_validate
                0x0000000000000000       0x58 zephyr/libzephyr.a(heap-validate.c.obj)
 .literal.sys_heap_stress
                0x0000000000000000       0x18 zephyr/libzephyr.a(heap-validate.c.obj)
 .literal.heap_print_info
                0x0000000000000000       0x74 zephyr/libzephyr.a(heap-validate.c.obj)
 .literal.sys_heap_print_info
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap-validate.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(heap-validate.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(heap-validate.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(heap-validate.c.obj)
 .text.chunk_field
                0x0000000000000000       0x26 zephyr/libzephyr.a(heap-validate.c.obj)
 .text.chunk_used
                0x0000000000000000       0x15 zephyr/libzephyr.a(heap-validate.c.obj)
 .text.chunk_size
                0x0000000000000000       0x15 zephyr/libzephyr.a(heap-validate.c.obj)
 .text.set_chunk_used
                0x0000000000000000       0x3f zephyr/libzephyr.a(heap-validate.c.obj)
 .text.right_chunk
                0x0000000000000000       0x11 zephyr/libzephyr.a(heap-validate.c.obj)
 .text.solo_free_header
                0x0000000000000000       0x22 zephyr/libzephyr.a(heap-validate.c.obj)
 .text.rand32   0x0000000000000000       0x34 zephyr/libzephyr.a(heap-validate.c.obj)
 .text.in_bounds
                0x0000000000000000       0x32 zephyr/libzephyr.a(heap-validate.c.obj)
 .text.bucket_idx
                0x0000000000000000       0x24 zephyr/libzephyr.a(heap-validate.c.obj)
 .text.valid_chunk
                0x0000000000000000       0xf4 zephyr/libzephyr.a(heap-validate.c.obj)
 .text.sys_heap_validate
                0x0000000000000000      0x1d5 zephyr/libzephyr.a(heap-validate.c.obj)
 .text.sys_heap_stress
                0x0000000000000000      0x123 zephyr/libzephyr.a(heap-validate.c.obj)
 .rodata.heap_print_info.str1.1
                0x0000000000000000      0x186 zephyr/libzephyr.a(heap-validate.c.obj)
 .text.heap_print_info
                0x0000000000000000      0x1ec zephyr/libzephyr.a(heap-validate.c.obj)
 .text.sys_heap_print_info
                0x0000000000000000       0x10 zephyr/libzephyr.a(heap-validate.c.obj)
 .data.state$4608
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap-validate.c.obj)
 .debug_frame   0x0000000000000000      0x160 zephyr/libzephyr.a(heap-validate.c.obj)
 .debug_info    0x0000000000000000     0x2646 zephyr/libzephyr.a(heap-validate.c.obj)
 .debug_abbrev  0x0000000000000000      0x4d7 zephyr/libzephyr.a(heap-validate.c.obj)
 .debug_loc     0x0000000000000000      0xeeb zephyr/libzephyr.a(heap-validate.c.obj)
 .debug_aranges
                0x0000000000000000       0x88 zephyr/libzephyr.a(heap-validate.c.obj)
 .debug_ranges  0x0000000000000000      0x3e0 zephyr/libzephyr.a(heap-validate.c.obj)
 .debug_line    0x0000000000000000     0x1a9e zephyr/libzephyr.a(heap-validate.c.obj)
 .debug_str     0x0000000000000000     0x142e zephyr/libzephyr.a(heap-validate.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(heap-validate.c.obj)
 .xt.lit        0x0000000000000000       0x70 zephyr/libzephyr.a(heap-validate.c.obj)
 .xt.prop       0x0000000000000000      0x564 zephyr/libzephyr.a(heap-validate.c.obj)
 .literal.match_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.is_region_set_clear
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.set_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.set_clear_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_alloc
                0x0000000000000000        0x8 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_free
                0x0000000000000000        0x8 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_is_region_set
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_is_region_cleared
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_set_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_clear_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .text.setup_bundle_data$isra$0
                0x0000000000000000       0x3f zephyr/libzephyr.a(bitarray.c.obj)
 .text.match_region
                0x0000000000000000       0xc6 zephyr/libzephyr.a(bitarray.c.obj)
 .text.is_region_set_clear
                0x0000000000000000       0x4e zephyr/libzephyr.a(bitarray.c.obj)
 .text.set_region
                0x0000000000000000       0xa0 zephyr/libzephyr.a(bitarray.c.obj)
 .text.set_clear_region
                0x0000000000000000       0x4c zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_set_bit
                0x0000000000000000       0x32 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_clear_bit
                0x0000000000000000       0x32 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_bit
                0x0000000000000000       0x3c zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_set_bit
                0x0000000000000000       0x46 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_clear_bit
                0x0000000000000000       0x46 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_alloc
                0x0000000000000000       0xa2 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_free
                0x0000000000000000       0x62 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_is_region_set
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_is_region_cleared
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_set_region
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_clear_region
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_frame   0x0000000000000000      0x190 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_info    0x0000000000000000     0x20c5 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_abbrev  0x0000000000000000      0x485 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_loc     0x0000000000000000      0xedf zephyr/libzephyr.a(bitarray.c.obj)
 .debug_aranges
                0x0000000000000000       0x98 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_ranges  0x0000000000000000      0x1a8 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_line    0x0000000000000000     0x19c4 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_str     0x0000000000000000     0x128c zephyr/libzephyr.a(bitarray.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(bitarray.c.obj)
 .xt.lit        0x0000000000000000       0x50 zephyr/libzephyr.a(bitarray.c.obj)
 .xt.prop       0x0000000000000000      0x558 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_multi_heap_free
                0x0000000000000000        0x8 zephyr/libzephyr.a(multi_heap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(multi_heap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(multi_heap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(multi_heap.c.obj)
 .text.sys_multi_heap_init
                0x0000000000000000        0xb zephyr/libzephyr.a(multi_heap.c.obj)
 .text.sys_multi_heap_add_heap
                0x0000000000000000       0x60 zephyr/libzephyr.a(multi_heap.c.obj)
 .text.sys_multi_heap_alloc
                0x0000000000000000       0x14 zephyr/libzephyr.a(multi_heap.c.obj)
 .text.sys_multi_heap_aligned_alloc
                0x0000000000000000       0x14 zephyr/libzephyr.a(multi_heap.c.obj)
 .text.sys_multi_heap_get_heap
                0x0000000000000000       0x24 zephyr/libzephyr.a(multi_heap.c.obj)
 .text.sys_multi_heap_free
                0x0000000000000000       0x1b zephyr/libzephyr.a(multi_heap.c.obj)
 .debug_frame   0x0000000000000000       0xa0 zephyr/libzephyr.a(multi_heap.c.obj)
 .debug_info    0x0000000000000000      0x471 zephyr/libzephyr.a(multi_heap.c.obj)
 .debug_abbrev  0x0000000000000000      0x198 zephyr/libzephyr.a(multi_heap.c.obj)
 .debug_loc     0x0000000000000000      0x1eb zephyr/libzephyr.a(multi_heap.c.obj)
 .debug_aranges
                0x0000000000000000       0x48 zephyr/libzephyr.a(multi_heap.c.obj)
 .debug_ranges  0x0000000000000000       0x50 zephyr/libzephyr.a(multi_heap.c.obj)
 .debug_line    0x0000000000000000      0x541 zephyr/libzephyr.a(multi_heap.c.obj)
 .debug_str     0x0000000000000000      0x31d zephyr/libzephyr.a(multi_heap.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(multi_heap.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/libzephyr.a(multi_heap.c.obj)
 .xt.prop       0x0000000000000000      0x138 zephyr/libzephyr.a(multi_heap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .xt.lit        0x0000000000000000       0x10 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .xt.prop       0x0000000000000000      0x9cc zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .xt.prop       0x0000000000000000       0x24 zephyr/libzephyr.a(configs.c.obj)
 .literal.soc_ll_stall_core
                0x0000000000000000       0x10 zephyr/libzephyr.a(soc.c.obj)
 .iram1.12.literal
                0x0000000000000000       0x48 zephyr/libzephyr.a(soc.c.obj)
 .literal.sys_arch_reboot
                0x0000000000000000        0x4 zephyr/libzephyr.a(soc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .text.soc_ll_stall_core
                0x0000000000000000       0x87 zephyr/libzephyr.a(soc.c.obj)
 .iram1.12      0x0000000000000000      0x111 zephyr/libzephyr.a(soc.c.obj)
 .text.sys_arch_reboot
                0x0000000000000000        0x9 zephyr/libzephyr.a(soc.c.obj)
 .xt.lit        0x0000000000000000       0x28 zephyr/libzephyr.a(soc.c.obj)
 .xt.prop       0x0000000000000000       0xfc zephyr/libzephyr.a(soc.c.obj)
 .literal       0x0000000000000000        0x4 zephyr/libzephyr.a(esp32-mp.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp32-mp.c.obj)
 .literal.appcpu_entry1
                0x0000000000000000        0xc zephyr/libzephyr.a(esp32-mp.c.obj)
 .literal.smp_log
                0x0000000000000000        0xc zephyr/libzephyr.a(esp32-mp.c.obj)
 .literal.appcpu_entry2
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp32-mp.c.obj)
 .literal.arch_start_cpu
                0x0000000000000000       0x54 zephyr/libzephyr.a(esp32-mp.c.obj)
 .literal.arch_sched_ipi
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp32-mp.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp32-mp.c.obj)
 .text          0x0000000000000000       0x1f zephyr/libzephyr.a(esp32-mp.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
 .iram1.4       0x0000000000000000       0x24 zephyr/libzephyr.a(esp32-mp.c.obj)
 .text.appcpu_entry1
                0x0000000000000000       0x13 zephyr/libzephyr.a(esp32-mp.c.obj)
 .text.smp_log  0x0000000000000000       0x30 zephyr/libzephyr.a(esp32-mp.c.obj)
 .rodata.appcpu_entry2.str1.1
                0x0000000000000000       0x16 zephyr/libzephyr.a(esp32-mp.c.obj)
 .text.appcpu_entry2
                0x0000000000000000       0x6c zephyr/libzephyr.a(esp32-mp.c.obj)
 .rodata.arch_start_cpu.str1.1
                0x0000000000000000       0x57 zephyr/libzephyr.a(esp32-mp.c.obj)
 .text.arch_start_cpu
                0x0000000000000000      0x10f zephyr/libzephyr.a(esp32-mp.c.obj)
 .text.arch_sched_ipi
                0x0000000000000000       0x1e zephyr/libzephyr.a(esp32-mp.c.obj)
 .iram1.5       0x0000000000000000        0xd zephyr/libzephyr.a(esp32-mp.c.obj)
 .bss.cpus_active
                0x0000000000000000        0x1 zephyr/libzephyr.a(esp32-mp.c.obj)
 .bss.appcpu_top
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp32-mp.c.obj)
 .bss.start_rec
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_frame   0x0000000000000000       0xb8 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_info    0x0000000000000000     0x5ee7 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_abbrev  0x0000000000000000      0x4f9 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_loc     0x0000000000000000      0x15d zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_aranges
                0x0000000000000000       0x50 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_ranges  0x0000000000000000       0x70 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_line    0x0000000000000000      0xb73 zephyr/libzephyr.a(esp32-mp.c.obj)
 .debug_str     0x0000000000000000     0x3c84 zephyr/libzephyr.a(esp32-mp.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(esp32-mp.c.obj)
 .xt.lit        0x0000000000000000       0x40 zephyr/libzephyr.a(esp32-mp.c.obj)
 .xt.prop       0x0000000000000000      0x1e0 zephyr/libzephyr.a(esp32-mp.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/libzephyr.a(loader.c.obj)
 .xt.prop       0x0000000000000000       0x30 zephyr/libzephyr.a(loader.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_enter
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_exit
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_exit_to_scheduler
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .xt.prop       0x0000000000000000       0x90 zephyr/libzephyr.a(tracing_none.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .__device_handles_pass1
                0x0000000000000000        0x8 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .xt.lit        0x0000000000000000       0x20 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .xt.prop       0x0000000000000000      0x21c zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .xt.prop       0x0000000000000000       0xf0 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .text.i2c_hal_slave_handle_event
                0x0000000000000000       0x39 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .xt.lit        0x0000000000000000       0x10 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .xt.prop       0x0000000000000000      0x198 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .literal.i2c_hal_set_slave_addr
                0x0000000000000000        0x8 zephyr/libzephyr.a(i2c_hal.c.obj)
 .literal.i2c_hal_slave_init
                0x0000000000000000       0x14 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(i2c_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(i2c_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_get_data_mode
                0x0000000000000000       0x1b zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_enable_intr_mask
                0x0000000000000000       0x14 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_get_intsts_mask
                0x0000000000000000        0xe zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_set_fifo_mode
                0x0000000000000000       0x25 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_set_slave_addr
                0x0000000000000000       0x33 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_set_txfifo_empty_thr
                0x0000000000000000       0x20 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_set_rxfifo_full_thr
                0x0000000000000000       0x1c zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_is_master_mode
                0x0000000000000000        0xf zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_get_rxfifo_cnt
                0x0000000000000000       0x11 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_get_txfifo_cnt
                0x0000000000000000       0x16 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_enable_slave_tx_it
                0x0000000000000000       0x16 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_disable_slave_tx_it
                0x0000000000000000       0x16 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_enable_slave_rx_it
                0x0000000000000000       0x17 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_disable_slave_rx_it
                0x0000000000000000       0x17 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_slave_init
                0x0000000000000000       0xb6 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_master_clr_bus
                0x0000000000000000        0x5 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text.i2c_hal_master_fsm_rst
                0x0000000000000000        0x5 zephyr/libzephyr.a(i2c_hal.c.obj)
 .xt.lit        0x0000000000000000       0x50 zephyr/libzephyr.a(i2c_hal.c.obj)
 .xt.prop       0x0000000000000000      0x5e8 zephyr/libzephyr.a(i2c_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(uart_periph.c.obj)
 .xt.prop       0x0000000000000000        0xc zephyr/libzephyr.a(uart_periph.c.obj)
 .literal.uart_hal_get_baudrate
                0x0000000000000000        0xc zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_at_cmd_char
                0x0000000000000000        0x8 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_tx_idle_num
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_mode
                0x0000000000000000        0x8 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_inverse_signal
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_loop_back
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_init
                0x0000000000000000       0x28 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_get_max_rx_timeout_thrd
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_sclk
                0x0000000000000000       0x18 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_baudrate
                0x0000000000000000       0x41 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_sw_flow_ctrl
                0x0000000000000000       0xc0 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_at_cmd_char
                0x0000000000000000       0x90 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_tx_idle_num
                0x0000000000000000       0x22 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_dtr
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_wakeup_thrd
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_wakeup_thrd
                0x0000000000000000       0x13 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_mode
                0x0000000000000000      0x195 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_is_hw_rts_en
                0x0000000000000000        0xf zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_inverse_signal
                0x0000000000000000       0xe3 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_loop_back
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_init
                0x0000000000000000      0x117 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_max_rx_timeout_thrd
                0x0000000000000000       0x26 zephyr/libzephyr.a(uart_hal.c.obj)
 .xt.lit        0x0000000000000000       0x68 zephyr/libzephyr.a(uart_hal.c.obj)
 .xt.prop       0x0000000000000000      0x5c4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_txfifo_rst
                0x0000000000000000        0xc zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .literal.uart_hal_tx_break
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text.uart_hal_txfifo_rst
                0x0000000000000000       0x2e zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text.uart_hal_tx_break
                0x0000000000000000       0x56 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .xt.lit        0x0000000000000000       0x28 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .xt.prop       0x0000000000000000      0x18c zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .rodata.GPIO_HOLD_MASK
                0x0000000000000000       0xa0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .xt.prop       0x0000000000000000       0x18 zephyr/libzephyr.a(gpio_periph.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .xt.prop       0x0000000000000000       0x18 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .literal.rtc_clk_32k_enable_external
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_bootstrap
                0x0000000000000000       0x30 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_enabled
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_apll_enable
                0x0000000000000000       0x54 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_slow_freq_get_hz
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_to_config
                0x0000000000000000       0x18 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_set_xtal
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_set_config_fast
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_clk8m_enable
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_clk8m_disable
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_enable_external
                0x0000000000000000        0xf zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_bootstrap
                0x0000000000000000      0x184 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_enabled
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_apll_enable
                0x0000000000000000      0x15a zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_slow_freq_get_hz
                0x0000000000000000       0x1f zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.rtc_clk_cpu_freq_to_config.str1.1
                0x0000000000000000       0x26 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_cpu_freq_to_config
                0x0000000000000000       0x70 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.rtc_clk_cpu_freq_to_config
                0x0000000000000000       0x14 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_cpu_freq_set_xtal
                0x0000000000000000       0x1f zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_cpu_freq_set_config_fast
                0x0000000000000000       0x38 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_clk8m_enable
                0x0000000000000000       0x20 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_clk8m_disable
                0x0000000000000000       0x20 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$18
                0x0000000000000000        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
 .xt.lit        0x0000000000000000       0xf0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .xt.prop       0x0000000000000000      0x8ac zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_init
                0x0000000000000000       0xbc zephyr/libzephyr.a(rtc_init.c.obj)
 .literal.rtc_vddsdio_get_config
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_init.c.obj)
 .literal.rtc_vddsdio_set_config
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .text.rtc_init
                0x0000000000000000      0x33e zephyr/libzephyr.a(rtc_init.c.obj)
 .text.rtc_vddsdio_get_config
                0x0000000000000000       0xa0 zephyr/libzephyr.a(rtc_init.c.obj)
 .text.rtc_vddsdio_set_config
                0x0000000000000000       0x46 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_frame   0x0000000000000000       0x58 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_info    0x0000000000000000     0x5235 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_abbrev  0x0000000000000000      0x2e4 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_loc     0x0000000000000000      0x660 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_aranges
                0x0000000000000000       0x30 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_ranges  0x0000000000000000       0x50 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_line    0x0000000000000000      0x96c zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_str     0x0000000000000000     0x32e9 zephyr/libzephyr.a(rtc_init.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(rtc_init.c.obj)
 .xt.lit        0x0000000000000000       0x18 zephyr/libzephyr.a(rtc_init.c.obj)
 .xt.prop       0x0000000000000000       0xfc zephyr/libzephyr.a(rtc_init.c.obj)
 .literal.rtc_clk_cal
                0x0000000000000000        0xc zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.rtc_time_us_to_slowclk
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.rtc_time_get
                0x0000000000000000       0x18 zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.rtc_clk_freq_cal
                0x0000000000000000        0xc zephyr/libzephyr.a(rtc_time.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_clk_cal
                0x0000000000000000       0x54 zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_time_us_to_slowclk
                0x0000000000000000       0x1f zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_time_slowclk_to_us
                0x0000000000000000       0x1c zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_time_get
                0x0000000000000000       0x50 zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_clk_freq_cal
                0x0000000000000000       0x1a zephyr/libzephyr.a(rtc_time.c.obj)
 .xt.lit        0x0000000000000000       0x38 zephyr/libzephyr.a(rtc_time.c.obj)
 .xt.prop       0x0000000000000000      0x264 zephyr/libzephyr.a(rtc_time.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xt.lit        0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xt.prop       0x0000000000000000      0x12c zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(clk.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(clk.c.obj)
 .iram1.2.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .iram1.0       0x0000000000000000       0x10 zephyr/libzephyr.a(clk.c.obj)
 .iram1.1       0x0000000000000000       0x15 zephyr/libzephyr.a(clk.c.obj)
 .iram1.2       0x0000000000000000       0x11 zephyr/libzephyr.a(clk.c.obj)
 .xt.lit        0x0000000000000000       0x20 zephyr/libzephyr.a(clk.c.obj)
 .xt.prop       0x0000000000000000       0xc0 zephyr/libzephyr.a(clk.c.obj)
 .literal.ets_timer_setfn
                0x0000000000000000       0x14 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.1.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.2.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .literal.ets_timer_done
                0x0000000000000000        0x8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.ets_timer_setfn.str1.1
                0x0000000000000000        0x9 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_setfn
                0x0000000000000000       0x3e zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.1       0x0000000000000000       0x2c zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.2       0x0000000000000000       0x34 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_done
                0x0000000000000000       0x1c zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.3       0x0000000000000000       0x16 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_init
                0x0000000000000000        0x5 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_deinit
                0x0000000000000000        0x5 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_frame   0x0000000000000000       0xb8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_info    0x0000000000000000      0x549 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_abbrev  0x0000000000000000      0x2b4 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_loc     0x0000000000000000       0xd3 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_aranges
                0x0000000000000000       0x48 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_ranges  0x0000000000000000       0x50 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_line    0x0000000000000000      0x452 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_str     0x0000000000000000      0x421 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .xt.lit        0x0000000000000000       0x28 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .xt.prop       0x0000000000000000      0x180 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.8.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.9.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.10.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.timer_task
                0x0000000000000000       0x44 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_create
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.3.literal
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.4.literal
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_delete
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_init
                0x0000000000000000       0x3c zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_deinit
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_dump
                0x0000000000000000       0x2c zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.12.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.8       0x0000000000000000        0xd zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.9       0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.5       0x0000000000000000       0x60 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.10      0x0000000000000000        0xe zephyr/libzephyr.a(esp_timer.c.obj)
 .text.timer_task
                0x0000000000000000       0xff zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_create
                0x0000000000000000       0x64 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.2       0x0000000000000000       0x5e zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.3       0x0000000000000000       0x81 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.4       0x0000000000000000       0x52 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_delete
                0x0000000000000000       0x4c zephyr/libzephyr.a(esp_timer.c.obj)
 .rodata.esp_timer_init.str1.1
                0x0000000000000000        0xa zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_init
                0x0000000000000000       0x7c zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_deinit
                0x0000000000000000       0x2e zephyr/libzephyr.a(esp_timer.c.obj)
 .rodata.esp_timer_dump.str1.1
                0x0000000000000000       0x1a zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_dump
                0x0000000000000000       0xa0 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.12      0x0000000000000000       0x24 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_semaphore
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_task
                0x0000000000000000       0x58 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timers  0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.init_status
                0x0000000000000000        0x1 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.timer_task_stack
                0x0000000000000000     0x1000 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_frame   0x0000000000000000      0x160 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_info    0x0000000000000000     0x2862 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_abbrev  0x0000000000000000      0x5cb zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_loc     0x0000000000000000      0x6ce zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_aranges
                0x0000000000000000       0x88 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_ranges  0x0000000000000000       0xf0 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_line    0x0000000000000000     0x16cb zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_str     0x0000000000000000     0x1a12 zephyr/libzephyr.a(esp_timer.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(esp_timer.c.obj)
 .xt.lit        0x0000000000000000       0x70 zephyr/libzephyr.a(esp_timer.c.obj)
 .xt.prop       0x0000000000000000      0x510 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_unlock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x1c zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.4.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_advance
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_init
                0x0000000000000000       0x5c zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_deinit
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.esp_timer_impl_get_alarm_reg
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.3       0x0000000000000000       0x1a zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_lock
                0x0000000000000000        0xd zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_unlock
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.0       0x0000000000000000       0x47 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.1       0x0000000000000000       0x23 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.2       0x0000000000000000       0xd7 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.4       0x0000000000000000       0x37 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_advance
                0x0000000000000000       0x4e zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .rodata.esp_timer_impl_init.str1.1
                0x0000000000000000       0x3e zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_init
                0x0000000000000000      0x10f zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_deinit
                0x0000000000000000       0x3d zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .iram1.5       0x0000000000000000        0xb zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .text.esp_timer_impl_get_alarm_reg
                0x0000000000000000       0x23 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .bss.s_time_update_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .bss.s_alarm_handler
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .bss.s_timer_interrupt_handle
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_frame   0x0000000000000000      0x130 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_info    0x0000000000000000     0x572d zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_abbrev  0x0000000000000000      0x545 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_loc     0x0000000000000000      0x496 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_aranges
                0x0000000000000000       0x78 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_ranges  0x0000000000000000       0xe0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_line    0x0000000000000000     0x12d3 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .debug_str     0x0000000000000000     0x3bf6 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .xt.lit        0x0000000000000000       0x60 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .xt.prop       0x0000000000000000      0x30c zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .literal.periph_module_reset
                0x0000000000000000        0xc zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.6.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.7.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .literal.wifi_module_enable
                0x0000000000000000        0x8 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .literal.wifi_module_disable
                0x0000000000000000        0x8 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .text.periph_module_reset
                0x0000000000000000       0x47 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.6       0x0000000000000000       0x46 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.7       0x0000000000000000       0x46 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .text.wifi_module_enable
                0x0000000000000000       0x25 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .text.wifi_module_disable
                0x0000000000000000       0x25 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .xt.lit        0x0000000000000000       0x50 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .xt.prop       0x0000000000000000      0x4a4 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .literal.esp_log_early_timestamp
                0x0000000000000000       0x10 zephyr/libzephyr.a(log_noos.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .text.esp_log_impl_lock
                0x0000000000000000        0x5 zephyr/libzephyr.a(log_noos.c.obj)
 .text.esp_log_impl_lock_timeout
                0x0000000000000000        0x7 zephyr/libzephyr.a(log_noos.c.obj)
 .text.esp_log_impl_unlock
                0x0000000000000000        0x5 zephyr/libzephyr.a(log_noos.c.obj)
 .text.esp_log_early_timestamp
                0x0000000000000000       0x19 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_info    0x0000000000000000     0x10ec zephyr/libzephyr.a(log_noos.c.obj)
 .debug_abbrev  0x0000000000000000      0x320 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_loc     0x0000000000000000       0xda zephyr/libzephyr.a(log_noos.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_ranges  0x0000000000000000       0x88 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_line    0x0000000000000000      0x57f zephyr/libzephyr.a(log_noos.c.obj)
 .debug_str     0x0000000000000000     0x1268 zephyr/libzephyr.a(log_noos.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(log_noos.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/libzephyr.a(log_noos.c.obj)
 .xt.prop       0x0000000000000000       0x9c zephyr/libzephyr.a(log_noos.c.obj)
 .literal.heap_bubble_down
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_set_vprintf
                0x0000000000000000        0xc zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_level_set
                0x0000000000000000       0x40 zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_writev
                0x0000000000000000       0x30 zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_write
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .text.heap_bubble_down
                0x0000000000000000       0x51 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_set_vprintf
                0x0000000000000000       0x1a zephyr/libzephyr.a(log.c.obj)
 .rodata.esp_log_level_set.str1.1
                0x0000000000000000        0x2 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_level_set
                0x0000000000000000       0xda zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_writev
                0x0000000000000000       0xe0 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_write
                0x0000000000000000       0x26 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache_misses
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .data.s_log_print_func
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache_entry_count
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache_max_generation
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache
                0x0000000000000000       0xf8 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_tags
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .data.s_log_default_level
                0x0000000000000000        0x4 zephyr/libzephyr.a(log.c.obj)
 .debug_frame   0x0000000000000000       0x88 zephyr/libzephyr.a(log.c.obj)
 .debug_info    0x0000000000000000      0x8d5 zephyr/libzephyr.a(log.c.obj)
 .debug_abbrev  0x0000000000000000      0x3c2 zephyr/libzephyr.a(log.c.obj)
 .debug_loc     0x0000000000000000      0x474 zephyr/libzephyr.a(log.c.obj)
 .debug_aranges
                0x0000000000000000       0x40 zephyr/libzephyr.a(log.c.obj)
 .debug_ranges  0x0000000000000000       0xa8 zephyr/libzephyr.a(log.c.obj)
 .debug_line    0x0000000000000000      0x9ae zephyr/libzephyr.a(log.c.obj)
 .debug_str     0x0000000000000000      0x528 zephyr/libzephyr.a(log.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(log.c.obj)
 .xt.lit        0x0000000000000000       0x28 zephyr/libzephyr.a(log.c.obj)
 .xt.prop       0x0000000000000000      0x2dc zephyr/libzephyr.a(log.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .xt.lit        0x0000000000000000       0x18 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .xt.prop       0x0000000000000000       0x90 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .xt.prop       0x0000000000000000       0x3c zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .literal.esp_register_shutdown_handler
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_system_api.c.obj)
 .literal.esp_unregister_shutdown_handler
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_system_api.c.obj)
 .literal.esp_read_mac
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_system_api.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
 .text.esp_register_shutdown_handler
                0x0000000000000000       0x35 zephyr/libzephyr.a(esp_system_api.c.obj)
 .text.esp_unregister_shutdown_handler
                0x0000000000000000       0x2a zephyr/libzephyr.a(esp_system_api.c.obj)
 .text.esp_read_mac
                0x0000000000000000       0xa1 zephyr/libzephyr.a(esp_system_api.c.obj)
 .bss.shutdown_handlers
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_frame   0x0000000000000000       0x58 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_info    0x0000000000000000     0x4f3a zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_abbrev  0x0000000000000000      0x3a8 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_loc     0x0000000000000000      0x23c zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_aranges
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_ranges  0x0000000000000000       0x58 zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_line    0x0000000000000000      0xaad zephyr/libzephyr.a(esp_system_api.c.obj)
 .debug_str     0x0000000000000000     0x3607 zephyr/libzephyr.a(esp_system_api.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(esp_system_api.c.obj)
 .xt.lit        0x0000000000000000       0x18 zephyr/libzephyr.a(esp_system_api.c.obj)
 .xt.prop       0x0000000000000000      0x144 zephyr/libzephyr.a(esp_system_api.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(dport_access.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .iram1.3       0x0000000000000000       0x15 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_info    0x0000000000000000      0x8bc zephyr/libzephyr.a(dport_access.c.obj)
 .debug_abbrev  0x0000000000000000      0x10c zephyr/libzephyr.a(dport_access.c.obj)
 .debug_loc     0x0000000000000000       0x22 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_line    0x0000000000000000      0x1e6 zephyr/libzephyr.a(dport_access.c.obj)
 .debug_str     0x0000000000000000      0xd2b zephyr/libzephyr.a(dport_access.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(dport_access.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/libzephyr.a(dport_access.c.obj)
 .xt.prop       0x0000000000000000       0x30 zephyr/libzephyr.a(dport_access.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .debug_line    0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .debug_str     0x0000000000000000      0x130 zephyr/libzephyr.a(stubs.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/libzephyr.a(stubs.c.obj)
 .literal.k_calloc
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap_caps.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
 .text.k_calloc
                0x0000000000000000       0x2a zephyr/libzephyr.a(heap_caps.c.obj)
 .xt.lit        0x0000000000000000       0x18 zephyr/libzephyr.a(heap_caps.c.obj)
 .xt.prop       0x0000000000000000       0xe4 zephyr/libzephyr.a(heap_caps.c.obj)
 .literal.z_isr_install
                0x0000000000000000        0x4 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .text.z_isr_install
                0x0000000000000000       0x11 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .xt.lit        0x0000000000000000       0x10 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .xt.prop       0x0000000000000000       0x60 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .literal.arch_cpu_atomic_idle
                0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .text.arch_cpu_atomic_idle
                0x0000000000000000       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .xt.lit        0x0000000000000000       0x10 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .xt.prop       0x0000000000000000       0x60 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .literal.z_xtensa_exccause
                0x0000000000000000        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .literal.exit  0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.z_xtensa_exccause.str1.1
                0x0000000000000000       0x11 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text.z_xtensa_exccause
                0x0000000000000000       0x1a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text.exit     0x0000000000000000        0xf zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.str1.1
                0x0000000000000000      0x1ac zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.CSWTCH$112
                0x0000000000000000       0xa0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .xt.lit        0x0000000000000000       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .xt.prop       0x0000000000000000       0xb4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .xt.prop       0x0000000000000000       0xe4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
 .xt.prop       0x0000000000000000      0x300 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .text.z_xtensa_irq_is_enabled
                0x0000000000000000       0x1a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .xt.lit        0x0000000000000000       0x50 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .xt.prop       0x0000000000000000      0x624 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .literal.z_arch_irq_connect_dynamic
                0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.z_irq_priority_set
                0x0000000000000000        0x5 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.z_arch_irq_connect_dynamic
                0x0000000000000000       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_info    0x0000000000000000      0xb12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_abbrev  0x0000000000000000      0x1cb zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_line    0x0000000000000000      0x2c6 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_str     0x0000000000000000      0xe34 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .xt.prop       0x0000000000000000       0x54 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .xt.lit        0x0000000000000000       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .xt.prop       0x0000000000000000      0x180 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .xt.prop       0x0000000000000000       0x30 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
 .xt.prop       0x0000000000000000       0x30 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .text.atoi     0x0000000000000000       0x60 zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .debug_info    0x0000000000000000      0x11a zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .debug_abbrev  0x0000000000000000       0xef zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .debug_loc     0x0000000000000000       0xce zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .debug_ranges  0x0000000000000000       0x28 zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .debug_line    0x0000000000000000      0x267 zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .debug_str     0x0000000000000000      0x168 zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .xt.prop       0x0000000000000000       0x90 zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .literal.strtol
                0x0000000000000000        0xc zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .text.strtol   0x0000000000000000      0x10d zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .debug_info    0x0000000000000000      0x2ac zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .debug_abbrev  0x0000000000000000      0x148 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .debug_loc     0x0000000000000000      0x372 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .debug_ranges  0x0000000000000000       0x48 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .debug_line    0x0000000000000000      0x624 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .debug_str     0x0000000000000000      0x222 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .xt.prop       0x0000000000000000      0x144 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .literal.strtoul
                0x0000000000000000        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .text.strtoul  0x0000000000000000      0x101 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .debug_info    0x0000000000000000      0x2ac zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .debug_abbrev  0x0000000000000000      0x148 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .debug_loc     0x0000000000000000      0x385 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .debug_ranges  0x0000000000000000       0x48 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .debug_line    0x0000000000000000      0x5d7 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .debug_str     0x0000000000000000      0x224 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .xt.prop       0x0000000000000000      0x144 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .literal.malloc
                0x0000000000000000        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .literal.realloc
                0x0000000000000000        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .literal.calloc
                0x0000000000000000        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .text.malloc   0x0000000000000000       0x11 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .text.free     0x0000000000000000        0x5 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .text.realloc  0x0000000000000000       0x11 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .text.calloc   0x0000000000000000       0x12 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .text.reallocarray
                0x0000000000000000        0x7 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .debug_frame   0x0000000000000000       0x88 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .debug_info    0x0000000000000000     0x1a92 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .debug_abbrev  0x0000000000000000      0x389 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .debug_loc     0x0000000000000000       0xe8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .debug_aranges
                0x0000000000000000       0x40 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .debug_ranges  0x0000000000000000       0x60 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .debug_line    0x0000000000000000      0x73a zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .debug_str     0x0000000000000000     0x1651 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .xt.lit        0x0000000000000000       0x18 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .xt.prop       0x0000000000000000       0xd8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .text.bsearch  0x0000000000000000       0x3a zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .debug_info    0x0000000000000000      0x15f zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .debug_abbrev  0x0000000000000000      0x10c zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .debug_loc     0x0000000000000000       0xf3 zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .debug_line    0x0000000000000000      0x224 zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .debug_str     0x0000000000000000      0x18e zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .xt.prop       0x0000000000000000       0x54 zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .literal._exit
                0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .rodata._exit.str1.1
                0x0000000000000000        0x6 zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .text._exit    0x0000000000000000        0xf zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .debug_info    0x0000000000000000      0xe4c zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .debug_abbrev  0x0000000000000000      0x1c3 zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .debug_line    0x0000000000000000      0x3db zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .debug_str     0x0000000000000000      0xffb zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .xt.prop       0x0000000000000000       0x30 zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .literal.heap_sort
                0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .literal.qsort_r
                0x0000000000000000        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .literal.qsort
                0x0000000000000000        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .text.sift_down
                0x0000000000000000       0x94 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .text.heap_sort
                0x0000000000000000       0x62 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .text.qsort_r  0x0000000000000000       0x1c zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .text.qsort    0x0000000000000000       0x1e zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .debug_info    0x0000000000000000      0x6d2 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .debug_abbrev  0x0000000000000000      0x2c9 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .debug_loc     0x0000000000000000      0x4d7 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .debug_ranges  0x0000000000000000       0x88 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .debug_line    0x0000000000000000      0x664 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .debug_str     0x0000000000000000      0x250 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .xt.lit        0x0000000000000000       0x18 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .xt.prop       0x0000000000000000      0x174 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .text.strncasecmp
                0x0000000000000000       0x55 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .debug_info    0x0000000000000000      0x153 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .debug_abbrev  0x0000000000000000      0x104 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .debug_loc     0x0000000000000000      0x154 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .debug_ranges  0x0000000000000000       0x48 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .debug_line    0x0000000000000000      0x27f zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .debug_str     0x0000000000000000      0x191 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .xt.prop       0x0000000000000000       0x78 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .literal.strstr
                0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .text.strstr   0x0000000000000000       0x3a zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .debug_info    0x0000000000000000      0x121 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .debug_abbrev  0x0000000000000000       0xda zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .debug_loc     0x0000000000000000       0xe9 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .debug_line    0x0000000000000000      0x1ff zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .debug_str     0x0000000000000000      0x177 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .xt.prop       0x0000000000000000       0x60 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .literal.strtok_r
                0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .literal.strcat
                0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .literal.strncat
                0x0000000000000000        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .text.strcpy   0x0000000000000000       0x17 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .text.strncpy  0x0000000000000000       0x2b zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .text.strchr   0x0000000000000000       0x1a zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .text.strrchr  0x0000000000000000       0x1c zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .text.strncmp  0x0000000000000000       0x29 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .text.strtok_r
                0x0000000000000000       0x4b zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .text.strcat   0x0000000000000000       0x18 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .text.strncat  0x0000000000000000       0x30 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .text.memcmp   0x0000000000000000       0x24 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .text.memmove  0x0000000000000000       0x33 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .text.memcpy   0x0000000000000000       0x62 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .text.memchr   0x0000000000000000       0x22 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .xt.lit        0x0000000000000000       0x18 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .xt.prop       0x0000000000000000      0x534 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .literal.strspn
                0x0000000000000000        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .literal.strcspn
                0x0000000000000000        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .text.strspn   0x0000000000000000       0x22 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .text.strcspn  0x0000000000000000       0x22 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .debug_info    0x0000000000000000      0x123 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .debug_abbrev  0x0000000000000000       0xca zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .debug_loc     0x0000000000000000       0xa8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .debug_line    0x0000000000000000      0x224 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .debug_str     0x0000000000000000      0x180 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .xt.lit        0x0000000000000000       0x10 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .xt.prop       0x0000000000000000       0xc0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .literal.z_impl_zephyr_fputc
                0x0000000000000000        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .literal.fputc
                0x0000000000000000        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .literal.z_impl_zephyr_fwrite
                0x0000000000000000        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .literal.fputs
                0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .literal.fwrite
                0x0000000000000000        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .literal.puts  0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .text.z_impl_zephyr_fputc
                0x0000000000000000       0x1a zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .text.fputc    0x0000000000000000       0x11 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .text.z_impl_zephyr_fwrite
                0x0000000000000000       0x4a zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .text.fputs    0x0000000000000000       0x2b zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .text.fwrite   0x0000000000000000       0x15 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .text.puts     0x0000000000000000       0x2a zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .xt.lit        0x0000000000000000       0x38 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .xt.prop       0x0000000000000000      0x1e0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .literal.snprintf
                0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .literal.sprintf
                0x0000000000000000        0xc zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .literal.vsnprintf
                0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .literal.vsprintf
                0x0000000000000000        0xc zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .text.sprintf_out
                0x0000000000000000       0x1d zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .text.snprintf
                0x0000000000000000       0x38 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .text.sprintf  0x0000000000000000       0x38 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .text.vsnprintf
                0x0000000000000000       0x30 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .text.vsprintf
                0x0000000000000000       0x28 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .debug_frame   0x0000000000000000       0x88 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .debug_info    0x0000000000000000      0x410 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .debug_abbrev  0x0000000000000000      0x1a0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .debug_loc     0x0000000000000000      0x17b zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .debug_aranges
                0x0000000000000000       0x40 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .debug_ranges  0x0000000000000000       0x30 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .debug_line    0x0000000000000000      0x4fb zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .debug_str     0x0000000000000000      0x262 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .xt.lit        0x0000000000000000       0x20 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .xt.prop       0x0000000000000000       0xfc zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .literal.fprintf
                0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .literal.vfprintf
                0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .literal.printf
                0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .literal.vprintf
                0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .text.fprintf  0x0000000000000000       0x2a zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .text.vfprintf
                0x0000000000000000       0x1a zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .text.printf   0x0000000000000000       0x2c zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .text.vprintf  0x0000000000000000       0x1a zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .debug_info    0x0000000000000000      0x2af zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .debug_abbrev  0x0000000000000000      0x10c zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .debug_loc     0x0000000000000000       0xe8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .debug_ranges  0x0000000000000000       0x28 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .debug_line    0x0000000000000000      0x304 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .debug_str     0x0000000000000000      0x249 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .xt.lit        0x0000000000000000       0x20 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .xt.prop       0x0000000000000000       0xc0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .literal.gmtime_r
                0x0000000000000000       0x74 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .literal.gmtime
                0x0000000000000000        0x8 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .text.gmtime_r
                0x0000000000000000      0x201 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .text.gmtime   0x0000000000000000       0x12 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .bss.shared$1001
                0x0000000000000000       0x24 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .debug_info    0x0000000000000000      0x33a zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .debug_abbrev  0x0000000000000000      0x1a1 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .debug_loc     0x0000000000000000      0x253 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .debug_ranges  0x0000000000000000       0x30 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .debug_line    0x0000000000000000      0x647 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .debug_str     0x0000000000000000      0x272 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .xt.lit        0x0000000000000000       0x10 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .xt.prop       0x0000000000000000      0x144 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/posix/liblib__posix.a(pthread_common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/posix/liblib__posix.a(pthread_common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/posix/liblib__posix.a(pthread_common.c.obj)
 .debug_info    0x0000000000000000      0xe67 zephyr/lib/posix/liblib__posix.a(pthread_common.c.obj)
 .debug_abbrev  0x0000000000000000      0x187 zephyr/lib/posix/liblib__posix.a(pthread_common.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/lib/posix/liblib__posix.a(pthread_common.c.obj)
 .debug_line    0x0000000000000000      0x3da zephyr/lib/posix/liblib__posix.a(pthread_common.c.obj)
 .debug_str     0x0000000000000000     0x1028 zephyr/lib/posix/liblib__posix.a(pthread_common.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/posix/liblib__posix.a(pthread_common.c.obj)
 .literal.nanosleep
                0x0000000000000000       0x34 zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .text.nanosleep
                0x0000000000000000       0xe4 zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .debug_info    0x0000000000000000     0x118e zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .debug_abbrev  0x0000000000000000      0x30f zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .debug_loc     0x0000000000000000      0x14a zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .debug_ranges  0x0000000000000000       0x68 zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .debug_line    0x0000000000000000      0x828 zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .debug_str     0x0000000000000000     0x110f zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .xt.prop       0x0000000000000000       0xc0 zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .text          0x0000000000000000        0x0 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .xt.lit        0x0000000000000000       0x10 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .xt.prop       0x0000000000000000       0xb4 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .literal.esp_intr_mark_shared
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_reserve
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.6.literal
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.7.literal
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_free
                0x0000000000000000       0x20 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.9.literal
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.10.literal
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_mark_shared
                0x0000000000000000       0x4e zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_reserve
                0x0000000000000000       0x49 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.6       0x0000000000000000       0x72 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_get_intno
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_get_cpu
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.7       0x0000000000000000       0x76 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_free
                0x0000000000000000       0xac zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.9       0x0000000000000000       0x50 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.10      0x0000000000000000       0x3e zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.non_iram_int_disabled_flag
                0x0000000000000000        0x1 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.non_iram_int_disabled
                0x0000000000000000        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .xt.lit        0x0000000000000000       0x98 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .xt.prop       0x0000000000000000      0x9e4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .__device_handles_pass1
                0x0000000000000000       0x1a zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .xt.lit        0x0000000000000000       0x28 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .xt.prop       0x0000000000000000      0x1e0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .text.uart_register_input
                0x0000000000000000        0x5 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .xt.lit        0x0000000000000000       0x10 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .xt.prop       0x0000000000000000       0xa8 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .__device_handles_pass1
                0x0000000000000000       0x1e zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .xt.lit        0x0000000000000000       0x28 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .xt.prop       0x0000000000000000      0x654 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
 .text.i2c_dump_msgs
                0x0000000000000000        0x5 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
 .debug_info    0x0000000000000000     0x2a71 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
 .debug_abbrev  0x0000000000000000      0x256 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
 .debug_line    0x0000000000000000      0x4dc zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
 .debug_str     0x0000000000000000     0x1854 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
 .xt.prop       0x0000000000000000       0x24 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .__device_handles_pass1
                0x0000000000000000        0xc zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .xt.lit        0x0000000000000000       0x58 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .xt.prop       0x0000000000000000      0x558 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .__device_handles_pass1
                0x0000000000000000        0xc zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .xt.lit        0x0000000000000000       0x28 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .xt.prop       0x0000000000000000      0x36c zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text.sys_clock_set_timeout
                0x0000000000000000        0x5 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text.sys_clock_idle_exit
                0x0000000000000000        0x5 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_info    0x0000000000000000      0xe55 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_abbrev  0x0000000000000000      0x1b1 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_line    0x0000000000000000      0x3b2 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_str     0x0000000000000000     0x101d zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .xt.prop       0x0000000000000000       0x48 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .text.sys_clock_cycle_get_32
                0x0000000000000000        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .xt.lit        0x0000000000000000       0x20 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .xt.prop       0x0000000000000000      0x12c zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .literal.device_visitor
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(device.c.obj)
 .literal.z_device_get_all_static
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(device.c.obj)
 .literal.device_required_foreach
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(device.c.obj)
 .literal.device_supported_foreach
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(device.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .text.device_visitor
                0x0000000000000000       0x58 zephyr/kernel/libkernel.a(device.c.obj)
 .text.z_device_get_all_static
                0x0000000000000000       0x19 zephyr/kernel/libkernel.a(device.c.obj)
 .text.device_required_foreach
                0x0000000000000000       0x3a zephyr/kernel/libkernel.a(device.c.obj)
 .text.device_supported_foreach
                0x0000000000000000       0x43 zephyr/kernel/libkernel.a(device.c.obj)
 .xt.lit        0x0000000000000000       0x30 zephyr/kernel/libkernel.a(device.c.obj)
 .xt.prop       0x0000000000000000      0x2dc zephyr/kernel/libkernel.a(device.c.obj)
 .literal.z_impl_z_errno
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(errno.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .text.z_impl_z_errno
                0x0000000000000000        0xd zephyr/kernel/libkernel.a(errno.c.obj)
 .rodata._k_neg_eagain
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_info    0x0000000000000000      0xeac zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_abbrev  0x0000000000000000      0x1b9 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_line    0x0000000000000000      0x3f6 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_str     0x0000000000000000     0x113d zephyr/kernel/libkernel.a(errno.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/kernel/libkernel.a(errno.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/kernel/libkernel.a(errno.c.obj)
 .xt.prop       0x0000000000000000       0x3c zephyr/kernel/libkernel.a(errno.c.obj)
 .literal.k_fatal_halt
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump_memory_dump
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump_buffer_output
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump_query
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.coredump_cmd
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.k_fatal_halt
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(fatal.c.obj)
 .xt.lit        0x0000000000000000       0x18 zephyr/kernel/libkernel.a(fatal.c.obj)
 .xt.prop       0x0000000000000000      0x150 zephyr/kernel/libkernel.a(fatal.c.obj)
 .literal.z_early_memset
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(init.c.obj)
 .literal.z_early_memcpy
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(init.c.obj)
 .literal.z_bss_zero
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_early_memset
                0x0000000000000000       0x12 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_early_memcpy
                0x0000000000000000       0x12 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_bss_zero
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(init.c.obj)
 .xt.lit        0x0000000000000000       0x30 zephyr/kernel/libkernel.a(init.c.obj)
 .xt.prop       0x0000000000000000      0x15c zephyr/kernel/libkernel.a(init.c.obj)
 .literal.k_heap_alloc
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text.k_heap_alloc
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(kheap.c.obj)
 .xt.lit        0x0000000000000000       0x28 zephyr/kernel/libkernel.a(kheap.c.obj)
 .xt.prop       0x0000000000000000      0x15c zephyr/kernel/libkernel.a(kheap.c.obj)
 .literal.z_thread_essential_set
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_thread_essential_clear
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_is_thread_essential
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.k_thread_state_str
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_impl_k_thread_start
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_impl_k_thread_create
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.k_thread_user_mode_enter
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(thread.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_foreach
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_foreach_unlocked
                0x0000000000000000        0x5 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_is_in_isr
                0x0000000000000000       0x13 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_thread_essential_set
                0x0000000000000000       0x15 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_thread_essential_clear
                0x0000000000000000       0x15 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_is_thread_essential
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_name_set
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_name_get
                0x0000000000000000        0x7 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_name_copy
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.k_thread_state_str.str1.1
                0x0000000000000000       0x3f zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_state_str
                0x0000000000000000       0x49 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_start
                0x0000000000000000        0xe zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_create
                0x0000000000000000       0x5a zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_init_thread_base
                0x0000000000000000       0x19 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_user_mode_enter
                0x0000000000000000       0x28 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_float_disable
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_float_enable
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_get
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_all_get
                0x0000000000000000        0xe zephyr/kernel/libkernel.a(thread.c.obj)
 .xt.lit        0x0000000000000000       0x48 zephyr/kernel/libkernel.a(thread.c.obj)
 .xt.prop       0x0000000000000000      0x3e4 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_pm_save_idle_exit
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(idle.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .text.z_pm_save_idle_exit
                0x0000000000000000        0xb zephyr/kernel/libkernel.a(idle.c.obj)
 .xt.lit        0x0000000000000000       0x10 zephyr/kernel/libkernel.a(idle.c.obj)
 .xt.prop       0x0000000000000000       0x60 zephyr/kernel/libkernel.a(idle.c.obj)
 .literal.z_impl_k_mutex_lock
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_mutex_unlock
                0x0000000000000000       0x1c zephyr/kernel/libkernel.a(mutex.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_init
                0x0000000000000000       0x11 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_lock
                0x0000000000000000       0xd8 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_unlock
                0x0000000000000000       0x80 zephyr/kernel/libkernel.a(mutex.c.obj)
 .bss.lock      0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_frame   0x0000000000000000       0x58 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_info    0x0000000000000000     0x62d7 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_abbrev  0x0000000000000000      0x45c zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_loc     0x0000000000000000      0x643 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_aranges
                0x0000000000000000       0x30 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_ranges  0x0000000000000000      0x120 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_line    0x0000000000000000      0xe8b zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_str     0x0000000000000000     0x1757 zephyr/kernel/libkernel.a(mutex.c.obj)
 .comment       0x0000000000000000       0x26 zephyr/kernel/libkernel.a(mutex.c.obj)
 .xt.lit        0x0000000000000000       0x10 zephyr/kernel/libkernel.a(mutex.c.obj)
 .xt.prop       0x0000000000000000      0x174 zephyr/kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_sem_reset
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_init
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_reset
                0x0000000000000000       0x2f zephyr/kernel/libkernel.a(sem.c.obj)
 .xt.lit        0x0000000000000000       0x18 zephyr/kernel/libkernel.a(sem.c.obj)
 .xt.prop       0x0000000000000000      0x12c zephyr/kernel/libkernel.a(sem.c.obj)
 .literal.z_unpend_thread_no_timeout
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_priq_dumb_remove
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_move_thread_to_end_of_prio_q
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_resume
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_pend_thread
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_pend_curr_irqlock
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_set_prio
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_thread_priority_set
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_unpend1_no_timeout
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_priq_rb_add
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_priq_rb_remove
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_priq_rb_best
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_priority_set
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_usleep
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_wakeup
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_is_preempt_thread
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_join
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_sched_wake
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_sched_wait
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_prio_cmp
                0x0000000000000000       0x1a zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_unpend_thread_no_timeout
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_dumb_remove
                0x0000000000000000        0xe zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_move_thread_to_end_of_prio_q
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_resume
                0x0000000000000000       0x36 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_pend_thread
                0x0000000000000000       0x13 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_pend_curr_irqlock
                0x0000000000000000       0x20 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_set_prio
                0x0000000000000000       0xa1 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_thread_priority_set
                0x0000000000000000       0x22 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_unpend1_no_timeout
                0x0000000000000000       0x20 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_rb_lessthan
                0x0000000000000000       0x31 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_rb_add
                0x0000000000000000       0x60 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_rb_remove
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_rb_best
                0x0000000000000000       0x11 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_priq_mq_best
                0x0000000000000000       0x2c zephyr/kernel/libkernel.a(sched.c.obj)
 .text.init_ready_q
                0x0000000000000000        0xb zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_priority_get
                0x0000000000000000        0xb zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_priority_set
                0x0000000000000000        0xf zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_usleep
                0x0000000000000000       0x31 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_wakeup
                0x0000000000000000       0x3f zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_is_preempt_thread
                0x0000000000000000       0x22 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_join
                0x0000000000000000       0x76 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_wake
                0x0000000000000000       0x3c zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_wait
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(sched.c.obj)
 .xt.lit        0x0000000000000000      0x1a8 zephyr/kernel/libkernel.a(sched.c.obj)
 .xt.prop       0x0000000000000000      0xea0 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.timeout_rem
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_timeout_remaining
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_timeout_expires
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_get_next_timeout_expiry
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_impl_k_uptime_ticks
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_impl_k_busy_wait
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.timeout_rem
                0x0000000000000000       0x5c zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_timeout_remaining
                0x0000000000000000       0x1a zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_timeout_expires
                0x0000000000000000       0x2a zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_get_next_timeout_expiry
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_impl_k_uptime_ticks
                0x0000000000000000        0xf zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_impl_k_busy_wait
                0x0000000000000000       0x32 zephyr/kernel/libkernel.a(timeout.c.obj)
 .xt.lit        0x0000000000000000       0x80 zephyr/kernel/libkernel.a(timeout.c.obj)
 .xt.prop       0x0000000000000000      0x60c zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_thread_aligned_alloc
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text.z_thread_aligned_alloc
                0x0000000000000000       0x3d zephyr/kernel/libkernel.a(mempool.c.obj)
 .xt.lit        0x0000000000000000       0x10 zephyr/kernel/libkernel.a(mempool.c.obj)
 .xt.prop       0x0000000000000000       0x90 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .xt.lit        0x0000000000000000        0x8 zephyr/kernel/libkernel.a(banner.c.obj)
 .xt.prop       0x0000000000000000       0x30 zephyr/kernel/libkernel.a(banner.c.obj)
 .literal       0x0000000000000000       0x10 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_addsubdf3.o)
 .text          0x0000000000000000      0x312 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_addsubdf3.o)
 .data          0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_addsubdf3.o)
 .bss           0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_addsubdf3.o)
 .debug_line    0x0000000000000000      0x6f2 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_addsubdf3.o)
 .debug_info    0x0000000000000000       0x26 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_addsubdf3.o)
 .debug_abbrev  0x0000000000000000       0x14 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_addsubdf3.o)
 .debug_aranges
                0x0000000000000000       0x20 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_addsubdf3.o)
 .debug_str     0x0000000000000000       0xcb /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_addsubdf3.o)
 .xt.lit        0x0000000000000000        0x8 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_addsubdf3.o)
 .xt.prop       0x0000000000000000      0x420 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_addsubdf3.o)
 .literal       0x0000000000000000        0xc /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_muldf3.o)
 .text          0x0000000000000000      0x1ff /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_muldf3.o)
 .data          0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_muldf3.o)
 .bss           0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_muldf3.o)
 .debug_line    0x0000000000000000      0x4b9 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_muldf3.o)
 .debug_info    0x0000000000000000       0x26 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_muldf3.o)
 .debug_abbrev  0x0000000000000000       0x14 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_muldf3.o)
 .debug_aranges
                0x0000000000000000       0x20 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_muldf3.o)
 .debug_str     0x0000000000000000       0xcb /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_muldf3.o)
 .xt.lit        0x0000000000000000        0x8 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_muldf3.o)
 .xt.prop       0x0000000000000000      0x228 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_muldf3.o)
 .literal       0x0000000000000000       0x10 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdf3.o)
 .text          0x0000000000000000      0x213 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdf3.o)
 .data          0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdf3.o)
 .bss           0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdf3.o)
 .debug_line    0x0000000000000000      0x4e2 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdf3.o)
 .debug_info    0x0000000000000000       0x26 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdf3.o)
 .debug_abbrev  0x0000000000000000       0x14 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdf3.o)
 .debug_aranges
                0x0000000000000000       0x20 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdf3.o)
 .debug_str     0x0000000000000000       0xcb /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdf3.o)
 .xt.lit        0x0000000000000000        0x8 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdf3.o)
 .xt.prop       0x0000000000000000      0x264 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdf3.o)
 .literal       0x0000000000000000        0x4 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_fixdfdi.o)
 .text          0x0000000000000000       0x6c /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_fixdfdi.o)
 .data          0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_fixdfdi.o)
 .bss           0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_fixdfdi.o)
 .debug_line    0x0000000000000000      0x176 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_fixdfdi.o)
 .debug_info    0x0000000000000000       0x26 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_fixdfdi.o)
 .debug_abbrev  0x0000000000000000       0x14 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_fixdfdi.o)
 .debug_aranges
                0x0000000000000000       0x20 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_fixdfdi.o)
 .debug_str     0x0000000000000000       0xcb /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_fixdfdi.o)
 .xt.lit        0x0000000000000000        0x8 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_fixdfdi.o)
 .xt.prop       0x0000000000000000       0xa8 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_fixdfdi.o)
 .text          0x0000000000000000       0x3d /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatsidf.o)
 .data          0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatsidf.o)
 .bss           0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatsidf.o)
 .debug_line    0x0000000000000000      0x10a /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatsidf.o)
 .debug_info    0x0000000000000000       0x26 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatsidf.o)
 .debug_abbrev  0x0000000000000000       0x14 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatsidf.o)
 .debug_aranges
                0x0000000000000000       0x20 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatsidf.o)
 .debug_str     0x0000000000000000       0xcb /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatsidf.o)
 .xt.prop       0x0000000000000000       0x54 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatsidf.o)
 .text          0x0000000000000000       0x81 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatdidf.o)
 .data          0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatdidf.o)
 .bss           0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatdidf.o)
 .debug_line    0x0000000000000000      0x19a /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatdidf.o)
 .debug_info    0x0000000000000000       0x26 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatdidf.o)
 .debug_abbrev  0x0000000000000000       0x14 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatdidf.o)
 .debug_aranges
                0x0000000000000000       0x20 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatdidf.o)
 .debug_str     0x0000000000000000       0xcb /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatdidf.o)
 .xt.prop       0x0000000000000000       0x9c /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatdidf.o)
 .literal       0x0000000000000000        0x8 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_truncdfsf2.o)
 .text          0x0000000000000000       0xa4 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_truncdfsf2.o)
 .data          0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_truncdfsf2.o)
 .bss           0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_truncdfsf2.o)
 .debug_line    0x0000000000000000      0x1d6 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_truncdfsf2.o)
 .debug_info    0x0000000000000000       0x26 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_truncdfsf2.o)
 .debug_abbrev  0x0000000000000000       0x14 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_truncdfsf2.o)
 .debug_aranges
                0x0000000000000000       0x20 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_truncdfsf2.o)
 .debug_str     0x0000000000000000       0xcb /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_truncdfsf2.o)
 .xt.lit        0x0000000000000000        0x8 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_truncdfsf2.o)
 .xt.prop       0x0000000000000000       0xb4 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_truncdfsf2.o)
 .literal       0x0000000000000000        0x8 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_extendsfdf2.o)
 .text          0x0000000000000000       0x62 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_extendsfdf2.o)
 .data          0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_extendsfdf2.o)
 .bss           0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_extendsfdf2.o)
 .debug_line    0x0000000000000000      0x158 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_extendsfdf2.o)
 .debug_info    0x0000000000000000       0x26 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_extendsfdf2.o)
 .debug_abbrev  0x0000000000000000       0x14 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_extendsfdf2.o)
 .debug_aranges
                0x0000000000000000       0x20 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_extendsfdf2.o)
 .debug_str     0x0000000000000000       0xcb /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_extendsfdf2.o)
 .xt.lit        0x0000000000000000        0x8 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_extendsfdf2.o)
 .xt.prop       0x0000000000000000       0x6c /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_extendsfdf2.o)
 .text          0x0000000000000000      0x2aa /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
 .data          0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
 .bss           0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
 .xt.prop       0x0000000000000000      0x1bc /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
 .text          0x0000000000000000      0x2ae /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
 .data          0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
 .bss           0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
 .xt.prop       0x0000000000000000      0x15c /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
 .text          0x0000000000000000      0x26e /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
 .data          0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
 .bss           0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
 .xt.prop       0x0000000000000000      0x1a4 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
 .text          0x0000000000000000      0x272 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)
 .data          0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)
 .bss           0x0000000000000000        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)
 .xt.prop       0x0000000000000000      0x15c /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)
 .text          0x0000000000000000        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .gnu.linkonce.prop.sw_isr_table
                0x0000000000000000        0xc zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .xt.prop       0x0000000000000000        0xc zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

Memory Configuration

Name             Origin             Length             Attributes
mcuboot_hdr      0x0000000000000000 0x0000000000000020 xr
metadata         0x0000000000000020 0x0000000000000020 xr
ROM              0x0000000000000040 0x00000000003fffc0 xr
iram0_0_seg      0x0000000040080000 0x0000000000020000 xr
irom0_0_seg      0x00000000400d0020 0x000000000032ffe0 xr
dram0_0_seg      0x000000003ffb0000 0x000000000002c200 rw
dram0_1_seg      0x000000003ffe5230 0x000000000001add0 rw
drom0_0_seg      0x000000003f400040 0x00000000003fffc0 r
rtc_iram_seg     0x00000000400c0000 0x0000000000002000 xrw
rtc_slow_seg     0x0000000050000000 0x0000000000001000 rw
IDT_LIST         0x000000003ebfe010 0x0000000000002000 rw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD zephyr/CMakeFiles/zephyr_pre1.dir/misc/empty_file.c.obj
LOAD zephyr/CMakeFiles/zephyr_pre1.dir/dev_handles.c.obj
LOAD zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
                [!provide]                        PROVIDE (_ResetVector = 0x40000400)
                0x0000000000000000                _rom_store_table = 0x0
                [!provide]                        PROVIDE (_memmap_vecbase_reset = 0x40000450)
                [!provide]                        PROVIDE (_memmap_reset_vector = 0x40000400)

.mcuboot_header
                0x0000000000000000       0x20
                0x0000000000000000        0x8 QUAD 0x0
                0x0000000000000008        0x8 QUAD 0x0
                0x0000000000000010        0x8 QUAD 0x0
                0x0000000000000018        0x8 QUAD 0x0

.metadata       0x0000000000000020       0x1c
                0x0000000000000020        0x4 LONG 0xace637d3
 *(SORT_BY_ALIGNMENT(.entry_addr))
                0x0000000000000024        0x4 LONG 0x40080000 ADDR (.iram0.vectors)
                0x0000000000000028        0x4 LONG 0x40080000 LOADADDR (.iram0.vectors)
                0x000000000000002c        0x4 LONG 0x323c ((LOADADDR (text) + SIZEOF (text)) - LOADADDR (.iram0.vectors))
                0x0000000000000030        0x4 LONG 0x3ffb0000 ADDR (.dram0.data)
                0x0000000000000034        0x4 LONG 0x3ffb0000 LOADADDR (.dram0.data)
                0x0000000000000038        0x4 LONG 0x3ac ((LOADADDR (.dummy.dram.data) + SIZEOF (.dummy.dram.data)) - LOADADDR (.dram0.data))

.rel.plt        0x0000000000000000        0x0
 *(SORT_BY_ALIGNMENT(.rel.plt))
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(SORT_BY_ALIGNMENT(.rel.iplt))
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.rela.plt       0x0000000000000000        0x0
 *(SORT_BY_ALIGNMENT(.rela.plt))
                [!provide]                        PROVIDE (__rela_iplt_start = .)
 *(SORT_BY_ALIGNMENT(.rela.iplt))
                [!provide]                        PROVIDE (__rela_iplt_end = .)

.rel.dyn
 *(SORT_BY_ALIGNMENT(.rel.*))

.rela.dyn
 *(SORT_BY_ALIGNMENT(.rela.*))
                0x000000003f400040                _image_drom_start = LOADADDR (rodata)
                0x0000000000000e28                _image_drom_size = ((LOADADDR (rodata) + SIZEOF (rodata)) - _image_drom_start)
                0x000000003f400040                _image_drom_vaddr = ADDR (rodata)

rodata          0x000000003f400040      0xe28
                0x000000003f400040                _rodata_start = ABSOLUTE (.)
                0x000000003f400040                . = ALIGN (0x4)
                0x000000003f400040                _bt_l2cap_fixed_chan_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_l2cap_fixed_chan.static.*)))
                0x000000003f400040                _bt_l2cap_fixed_chan_list_end = .
                0x000000003f400040                . = ALIGN (0x4)
                0x000000003f400040                _bt_gatt_service_static_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_gatt_service_static.static.*)))
                0x000000003f400040                _bt_gatt_service_static_list_end = .
                0x000000003f400040                . = ALIGN (0x4)
                0x000000003f400040                _k_p4wq_initparam_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_p4wq_initparam.static.*)))
                0x000000003f400040                _k_p4wq_initparam_list_end = .
                0x000000003f400040                . = ALIGN (0x4)
                0x000000003f400040                _shell_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell.static.*)))
                0x000000003f400040                _shell_list_end = .
                0x000000003f400040                . = ALIGN (0x4)
                0x000000003f400040                _tracing_backend_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._tracing_backend.static.*)))
                0x000000003f400040                _tracing_backend_list_end = .
                0x000000003f400040                __esp_shell_root_cmds_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.shell_root_cmd_*)))
                0x000000003f400040                __esp_shell_root_cmds_end = .
                0x000000003f400040                . = ALIGN (0x4)
                0x000000003f400040                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(EXCLUDE_FILE(*libdrivers__serial.a:uart_esp32.* *libdrivers__flash.a:flash_esp32.* *libzephyr.a:loader.* *libzephyr.a:log_output.* *libzephyr.a:log_backend_uart.* *libzephyr.a:log_core.* *libzephyr.a:cbprintf_complete* *libkernel.a:init.* *libkernel.a:fatal.* *libarch__xtensa__core.a:*) .rodata))
 .rodata        0x000000003f400040        0x8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *(SORT_BY_ALIGNMENT(EXCLUDE_FILE(*libdrivers__serial.a:uart_esp32.* *libdrivers__flash.a:flash_esp32.* *libzephyr.a:loader.* *libzephyr.a:log_output.* *libzephyr.a:log_backend_uart.* *libzephyr.a:log_core.* *libzephyr.a:cbprintf_complete* *libkernel.a:init.* *libkernel.a:fatal.* *libarch__xtensa__core.a:*) .rodata.*))
 .rodata.uart_periph_signal
                0x000000003f400048       0x24 zephyr/libzephyr.a(uart_periph.c.obj)
                0x000000003f400048                uart_periph_signal
 .rodata.GPIO_PIN_MUX_REG
                0x000000003f40006c       0xa0 zephyr/libzephyr.a(gpio_periph.c.obj)
                0x000000003f40006c                GPIO_PIN_MUX_REG
 .rodata.rtc_io_desc
                0x000000003f40010c      0x3f0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
                0x000000003f40010c                rtc_io_desc
 .rodata.rtc_io_num_map
                0x000000003f4004fc       0xa0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
                0x000000003f4004fc                rtc_io_num_map
 .rodata.rtc_clk_xtal_freq_estimate
                0x000000003f40059c       0x64 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .rodata.periph_ll_get_rst_en_mask
                0x000000003f400600       0x8c zephyr/libzephyr.a(periph_ctrl.c.obj)
 .rodata.CSWTCH$6
                0x000000003f40068c       0x8c zephyr/libzephyr.a(periph_ctrl.c.obj)
 .rodata.interrupt_descriptor_table
                0x000000003f400718      0x200 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .rodata.CSWTCH$5
                0x000000003f400918       0x8c zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.esp32_clock_config0
                0x000000003f4009a4       0x10 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.clock_control_esp32_api
                0x000000003f4009b4       0x18 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.gpio_esp32_driver_api
                0x000000003f4009cc       0x24 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .rodata.i2c_esp32_config_0
                0x000000003f4009f0       0x3c zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .rodata.i2c_esp32_driver_api
                0x000000003f400a2c       0x18 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .rodata.levels$4724
                0x000000003f400a44       0x14 zephyr/kernel/libkernel.a(device.c.obj)
 .rodata.main.str1.1
                0x000000003f400a58       0x50 app/libapp.a(main.c.obj)
 .rodata.str1.1
                0x000000003f400aa8       0x10 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .rodata.rtc_clk_cpu_freq_to_pll_mhz.str1.1
                0x000000003f400ab8       0x23 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.rtc_clk_cpu_freq_get_config.str1.1
                0x000000003f400adb       0x2d zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$26
                0x000000003f400b08       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$24
                0x000000003f400b19       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$23
                0x000000003f400b2a       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$22
                0x000000003f400b3b       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$21
                0x000000003f400b4c       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$20
                0x000000003f400b5d       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$19
                0x000000003f400b6e       0x11 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.rtc_clk_cal_internal.str1.1
                0x000000003f400b7f       0x44 zephyr/libzephyr.a(rtc_time.c.obj)
 .rodata.rtc_clk_xtal_freq_estimate.str1.1
                0x000000003f400bc3       0xbc zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .rodata.rtc_clk_init.str1.1
                0x000000003f400c7f       0xb1 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .rodata.abort.str1.1
                0x000000003f400d30        0x9 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
 .rodata.board_esp_wrover_kit_init.str1.1
                0x000000003f400d39        0x7 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .rodata.default_intr_handler.str1.1
                0x000000003f400d40       0x23 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .rodata.CSWTCH$192
                0x000000003f400d63        0x6 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .rodata.str1.1
                0x000000003f400d69        0x4 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.xtal_freq
                0x000000003f400d6d        0x4 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.str1.1
                0x000000003f400d71        0x7 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0xe (size before relaxing)
 .rodata.str1.1
                0x000000003f400d78        0x6 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                          0xd (size before relaxing)
 .rodata.boot_banner.str1.1
                0x000000003f400d7e       0x48 zephyr/kernel/libkernel.a(banner.c.obj)
                                         0x49 (size before relaxing)
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.r.*))
 *(SORT_BY_ALIGNMENT(.rodata1))
                0x000000003f400dc6                __XT_EXCEPTION_TABLE__ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_table))
 *(SORT_BY_ALIGNMENT(.gcc_except_table) SORT_BY_ALIGNMENT(.gcc_except_table.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.e.*))
 *(SORT_BY_ALIGNMENT(.gnu.version_r))
 *(SORT_BY_ALIGNMENT(.eh_frame))
 *fill*         0x000000003f400dc6        0x2 
 .eh_frame      0x000000003f400dc8       0x28 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
 .eh_frame      0x000000003f400df0       0x28 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
 .eh_frame      0x000000003f400e18       0x28 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
 .eh_frame      0x000000003f400e40       0x28 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)
 *crtbegin.o(SORT_BY_ALIGNMENT(.ctors))
 *(SORT_BY_ALIGNMENT(EXCLUDE_FILE(*crtend.o) .ctors))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.ctors.*)))
 *(SORT_BY_ALIGNMENT(.ctors))
 *crtbegin.o(SORT_BY_ALIGNMENT(.dtors))
 *(SORT_BY_ALIGNMENT(EXCLUDE_FILE(*crtend.o) .dtors))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.dtors.*)))
 *(SORT_BY_ALIGNMENT(.dtors))
                0x000000003f400e68                __XT_EXCEPTION_DESCS__ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_desc))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.h.*))
                0x000000003f400e68                __XT_EXCEPTION_DESCS_END__ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_desc_end))
 *(SORT_BY_ALIGNMENT(.dynamic))
 *(SORT_BY_ALIGNMENT(.gnu.version_d))
                0x000000003f400e68                . = ALIGN (0x4)
                0x000000003f400e68                _rodata_end = ABSOLUTE (.)
                0x000000003ffb0000                _image_dram_start = LOADADDR (.dram0.data)
                0x00000000000003ac                _image_dram_size = ((LOADADDR (.dummy.dram.data) + SIZEOF (.dummy.dram.data)) - _image_dram_start)
                0x000000003ffb0000                _image_dram_vaddr = ADDR (.dram0.data)

.intList        0x000000003ebfe010       0x18
 *(SORT_BY_ALIGNMENT(.irq_info*))
 .irq_info      0x000000003ebfe010        0x8 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                0x000000003ebfe010                _iheader
 *(SORT_BY_ALIGNMENT(.intList*))
 .intList       0x000000003ebfe018       0x10 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 *(SORT_BY_ALIGNMENT(.irq_info*))
 *(SORT_BY_ALIGNMENT(.intList*))

.dram0.data     0x000000003ffb0000      0x174
                0x000000003ffb0000                _data_start = ABSOLUTE (.)
                0x000000003ffb0000                _btdm_data_start = ABSOLUTE (.)
 *libbtdm_app.a:(SORT_BY_ALIGNMENT(.data) SORT_BY_ALIGNMENT(.data.*))
                0x000000003ffb0000                . = ALIGN (0x4)
                0x000000003ffb0000                _btdm_data_end = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.data))
 *(SORT_BY_ALIGNMENT(.data.*))
 .data._char_out
                0x000000003ffb0000        0x4 zephyr/libzephyr.a(printk.c.obj)
                0x000000003ffb0000                _char_out
 .data.api_funcs
                0x000000003ffb0004       0x10 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .data._stdout_hook
                0x000000003ffb0014        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .data.gpio_config_1
                0x000000003ffb0018       0x10 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data.gpio_config_0
                0x000000003ffb0028       0x10 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data.i2c_esp32_data_0
                0x000000003ffb0038       0x40 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .data.uart_esp32_data_0
                0x000000003ffb0078       0x10 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .data.timeout_list
                0x000000003ffb0088        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.d.*))
 *(SORT_BY_ALIGNMENT(.data1))
 *(SORT_BY_ALIGNMENT(.sdata))
 *(SORT_BY_ALIGNMENT(.sdata.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.s.*))
 *(SORT_BY_ALIGNMENT(.sdata2))
 *(SORT_BY_ALIGNMENT(.sdata2.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.s2.*))
 *libarch__xtensa__core.a:(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.z_xtensa_backtrace_print.str1.1
                0x000000003ffb0090       0x3f zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 *libkernel.a:fatal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libkernel.a:init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.z_cstart.str1.1
                0x000000003ffb00cf        0x5 zephyr/kernel/libkernel.a(init.c.obj)
 *libzephyr.a:cbprintf_complete*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.cbvprintf
                0x000000003ffb00d4       0x48 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .rodata.cbvprintf.str1.1
                0x000000003ffb011c        0x6 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 *libzephyr.a:log_core.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_backend_uart.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_output.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:loader.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libdrivers__flash.a:flash_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libdrivers__serial.a:uart_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.str1.1
                0x000000003ffb0122        0xe zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *(SORT_BY_ALIGNMENT(.jcr))
 *(SORT_BY_ALIGNMENT(.dram1) SORT_BY_ALIGNMENT(.dram1.*))
 .dram1.5       0x000000003ffb0130       0x30 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .dram1.4       0x000000003ffb0160       0x14 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                0x000000003ffb0174                . = ALIGN (0x4)
                0x000000003ffb0174                _dram_data_end = ABSOLUTE (.)

initlevel       0x000000003ffb0174       0x50
                0x000000003ffb0174                __init_start = .
                0x000000003ffb0174                __init_PRE_KERNEL_1_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1[0-9]_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1[1-9][0-9]_*)))
 .z_init_PRE_KERNEL_130_
                0x000000003ffb0174        0x8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .z_init_PRE_KERNEL_130_
                0x000000003ffb017c        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
 .z_init_PRE_KERNEL_140_
                0x000000003ffb0184        0x8 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .z_init_PRE_KERNEL_140_
                0x000000003ffb018c       0x10 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_init_PRE_KERNEL_150_
                0x000000003ffb019c        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .z_init_PRE_KERNEL_160_
                0x000000003ffb01a4        0x8 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                0x000000003ffb01ac                __init_PRE_KERNEL_2_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2[0-9]_*)))
 .z_init_PRE_KERNEL_20_
                0x000000003ffb01ac        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2[1-9][0-9]_*)))
 .z_init_PRE_KERNEL_245_
                0x000000003ffb01b4        0x8 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
                0x000000003ffb01bc                __init_POST_KERNEL_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL[0-9]_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL[1-9][0-9]_*)))
 .z_init_POST_KERNEL50_
                0x000000003ffb01bc        0x8 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                0x000000003ffb01c4                __init_APPLICATION_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION[0-9]_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION[1-9][0-9]_*)))
                0x000000003ffb01c4                __init_SMP_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP[0-9]_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP[1-9][0-9]_*)))
                0x000000003ffb01c4                __init_end = .

devices         0x000000003ffb01c4       0x90
                0x000000003ffb01c4                __device_start = .
                0x000000003ffb01c4                __device_PRE_KERNEL_1_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_device_PRE_KERNEL_1[0-9]_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_device_PRE_KERNEL_1[1-9][0-9]_*)))
 .z_device_PRE_KERNEL_130_
                0x000000003ffb01c4       0x18 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                0x000000003ffb01c4                __device_dts_ord_20
 .z_device_PRE_KERNEL_140_
                0x000000003ffb01dc       0x18 zephyr/libzephyr.a(pinmux_esp32.c.obj)
                0x000000003ffb01dc                __device_dts_ord_27
 .z_device_PRE_KERNEL_140_
                0x000000003ffb01f4       0x30 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                0x000000003ffb01f4                __device_dts_ord_19
                0x000000003ffb020c                __device_dts_ord_10
 .z_device_PRE_KERNEL_150_
                0x000000003ffb0224       0x18 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                0x000000003ffb0224                __device_dts_ord_30
                0x000000003ffb023c                __device_PRE_KERNEL_2_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_device_PRE_KERNEL_2[0-9]_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_device_PRE_KERNEL_2[1-9][0-9]_*)))
                0x000000003ffb023c                __device_POST_KERNEL_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_device_POST_KERNEL[0-9]_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_device_POST_KERNEL[1-9][0-9]_*)))
 .z_device_POST_KERNEL50_
                0x000000003ffb023c       0x18 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                0x000000003ffb023c                __device_dts_ord_21
                0x000000003ffb0254                __device_APPLICATION_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_device_APPLICATION[0-9]_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_device_APPLICATION[1-9][0-9]_*)))
                0x000000003ffb0254                __device_SMP_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_device_SMP[0-9]_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_device_SMP[1-9][0-9]_*)))
                0x000000003ffb0254                __device_end = .

initlevel_error
                0x000000003f400e68        0x0
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_[_A-Z0-9]*)))
                0x0000000000000001                ASSERT ((SIZEOF (initlevel_error) == 0x0), Undefined initialization levels used.)

app_shmem_regions
                0x000000003ffb0254        0x0
                0x000000003ffb0254                __app_shmem_regions_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.app_regions.*)))
                0x000000003ffb0254                __app_shmem_regions_end = .

log_strings_sections
                0x000000003ffb0254        0x0
                0x000000003ffb0254                __log_strings_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.log_strings*)))
                0x000000003ffb0254                __log_strings_end = .

log_const_sections
                0x000000003ffb0254        0x0
                0x000000003ffb0254                __log_const_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.log_const_*)))
                0x000000003ffb0254                __log_const_end = .

log_backends_sections
                0x000000003ffb0254        0x0
                0x000000003ffb0254                __log_backends_start = .
 *(SORT_BY_ALIGNMENT(._log_backend.*))
                0x000000003ffb0254                __log_backends_end = .

shell_root_cmds_sections
                0x000000003ffb0254        0x0
                0x000000003ffb0254                __shell_root_cmds_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.shell_root_cmd_*)))
                0x000000003ffb0254                __shell_root_cmds_end = .

font_entry_sections
                0x000000003ffb0254        0x0
                0x000000003ffb0254                __font_entry_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._cfb_font.*)))
                0x000000003ffb0254                __font_entry_end = .

zephyr_dbg_info
 *(SORT_BY_ALIGNMENT(.dbg_thread_info))

device_handles  0x000000003ffb0254       0x2c
                0x000000003ffb0254                __device_handles_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.__device_handles_pass2*)))
 .__device_handles_pass2
                0x000000003ffb0254       0x2c zephyr/CMakeFiles/zephyr_pre1.dir/dev_handles.c.obj
                0x000000003ffb0254                __devicehdl_DT_N_S_soc_S_i2c_3ff53000
                0x000000003ffb025c                __devicehdl_DT_N_S_soc_S_uart_3ff40000
                0x000000003ffb0264                __devicehdl_DT_N_S_soc_S_gpio_3ff44000
                0x000000003ffb026a                __devicehdl_DT_N_S_soc_S_gpio_3ff44800
                0x000000003ffb0270                __devicehdl_DT_N_S_soc_S_pinmux_3ff49000
                0x000000003ffb0276                __devicehdl_DT_N_S_soc_S_rtc_3ff48000
                0x000000003ffb0280                __device_handles_end = .

sw_isr_table    0x000000003ffb0280      0x100
                0x000000003ffb0280                . = ALIGN (0x0)
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sw_isr_table*))
 .gnu.linkonce.sw_isr_table
                0x000000003ffb0280      0x100 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                0x000000003ffb0280                _sw_isr_table

device_states   0x000000003ffb0380       0x18
                0x000000003ffb0380                __device_states_start = .
 *(SORT_BY_ALIGNMENT(.z_devstate))
 .z_devstate    0x000000003ffb0380        0x4 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .z_devstate    0x000000003ffb0384        0x4 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .z_devstate    0x000000003ffb0388        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_devstate    0x000000003ffb0390        0x4 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .z_devstate    0x000000003ffb0394        0x4 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *(SORT_BY_ALIGNMENT(.z_devstate.*))
                0x000000003ffb0398                __device_states_end = .

initshell       0x000000003ffb0398        0x0
                0x000000003ffb0398                __shell_module_start = .
 *(SORT_BY_ALIGNMENT(.shell_module_*))
                0x000000003ffb0398                __shell_module_end = .
                0x000000003ffb0398                __shell_cmd_start = .
 *(SORT_BY_ALIGNMENT(.shell_cmd_*))
                0x000000003ffb0398                __shell_cmd_end = .

log_dynamic_sections
                0x000000003ffb0398        0x0
                0x000000003ffb0398                __log_dynamic_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.log_dynamic_*)))
                0x000000003ffb0398                __log_dynamic_end = .

_static_thread_data_area
                0x000000003ffb0398        0x0
                0x000000003ffb0398                __static_thread_data_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.__static_thread_data.static.*)))
                0x000000003ffb0398                __static_thread_data_list_end = .

k_timer_area    0x000000003ffb0398        0x0
                0x000000003ffb0398                _k_timer_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_timer.static.*)))
                0x000000003ffb0398                _k_timer_list_end = .

k_mem_slab_area
                0x000000003ffb0398        0x0
                0x000000003ffb0398                _k_mem_slab_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mem_slab.static.*)))
                0x000000003ffb0398                _k_mem_slab_list_end = .

k_mem_pool_area
                0x000000003ffb0398        0x0
                0x000000003ffb0398                _k_mem_pool_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mem_pool.static.*)))
                0x000000003ffb0398                _k_mem_pool_list_end = .

k_heap_area     0x000000003ffb0398       0x14
                0x000000003ffb0398                _k_heap_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_heap.static.*)))
 ._k_heap.static._internal_heap_1
                0x000000003ffb0398       0x14 zephyr/libzephyr.a(heap_caps.c.obj)
                0x000000003ffb0398                _internal_heap_1
                0x000000003ffb03ac                _k_heap_list_end = .

k_mutex_area    0x000000003ffb03ac        0x0
                0x000000003ffb03ac                _k_mutex_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mutex.static.*)))
                0x000000003ffb03ac                _k_mutex_list_end = .

k_stack_area    0x000000003ffb03ac        0x0
                0x000000003ffb03ac                _k_stack_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_stack.static.*)))
                0x000000003ffb03ac                _k_stack_list_end = .

k_msgq_area     0x000000003ffb03ac        0x0
                0x000000003ffb03ac                _k_msgq_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_msgq.static.*)))
                0x000000003ffb03ac                _k_msgq_list_end = .

k_mbox_area     0x000000003ffb03ac        0x0
                0x000000003ffb03ac                _k_mbox_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mbox.static.*)))
                0x000000003ffb03ac                _k_mbox_list_end = .

k_pipe_area     0x000000003ffb03ac        0x0
                0x000000003ffb03ac                _k_pipe_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_pipe.static.*)))
                0x000000003ffb03ac                _k_pipe_list_end = .

k_sem_area      0x000000003ffb03ac        0x0
                0x000000003ffb03ac                _k_sem_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_sem.static.*)))
                0x000000003ffb03ac                _k_sem_list_end = .

k_event_area    0x000000003ffb03ac        0x0
                0x000000003ffb03ac                _k_event_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_event.static.*)))
                0x000000003ffb03ac                _k_event_list_end = .

k_queue_area    0x000000003ffb03ac        0x0
                0x000000003ffb03ac                _k_queue_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_queue.static.*)))
                0x000000003ffb03ac                _k_queue_list_end = .

k_condvar_area  0x000000003ffb03ac        0x0
                0x000000003ffb03ac                _k_condvar_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_condvar.static.*)))
                0x000000003ffb03ac                _k_condvar_list_end = .

_net_buf_pool_area
                0x000000003ffb03ac        0x0
                0x000000003ffb03ac                _net_buf_pool_list = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._net_buf_pool.static.*)))
                0x000000003f400040                __shell_root_cmds_start = __esp_shell_root_cmds_start
                0x000000003f400040                __shell_root_cmds_end = __esp_shell_root_cmds_end

.dummy.dram.data
                0x000000003ffb03ac        0x0
                0x000000003ffb03ac                . = ALIGN (0x4)
                0x000000003ffb03ac                . = ALIGN (0x4)
                0x000000003ffb03ac                _data_end = ABSOLUTE (.)
                0x0000000040080000                _image_iram_start = LOADADDR (.iram0.vectors)
                0x000000000000323c                _image_iram_size = ((LOADADDR (text) + SIZEOF (text)) - _image_iram_start)
                0x0000000040080000                _image_iram_vaddr = ADDR (.iram0.vectors)

.iram0.vectors  0x0000000040080000      0x400
                0x0000000040080000                _init_start = ABSOLUTE (.)
                0x0000000000000000                . = 0x0
 *(SORT_BY_ALIGNMENT(.WindowVectors.text))
 .WindowVectors.text
                0x0000000040080000      0x16a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                0x0000000040080000                _WindowOverflow4
                0x0000000040080040                _WindowUnderflow4
                0x0000000040080050                _xt_alloca_exc
                0x0000000040080080                _WindowOverflow8
                0x00000000400800c0                _WindowUnderflow8
                0x0000000040080100                _WindowOverflow12
                0x0000000040080140                _WindowUnderflow12
                0x0000000000000180                . = 0x180
 *fill*         0x000000004008016a       0x16 
 *(SORT_BY_ALIGNMENT(.Level2InterruptVector.text))
 .Level2InterruptVector.text
                0x0000000040080180       0x29 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
                0x0000000040080180                _Level2Vector
                0x00000000000001c0                . = 0x1c0
 *fill*         0x00000000400801a9       0x17 
 *(SORT_BY_ALIGNMENT(.Level3InterruptVector.text))
 .Level3InterruptVector.text
                0x00000000400801c0       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
                                         0x29 (size before relaxing)
                0x00000000400801c0                _Level3Vector
                0x0000000000000200                . = 0x200
 *fill*         0x00000000400801e5       0x1b 
 *(SORT_BY_ALIGNMENT(.Level4InterruptVector.text))
 .Level4InterruptVector.text
                0x0000000040080200       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040080200                _Level4Vector
                0x0000000000000240                . = 0x240
 *fill*         0x0000000040080225       0x1b 
 *(SORT_BY_ALIGNMENT(.Level5InterruptVector.text))
 .Level5InterruptVector.text
                0x0000000040080240       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040080240                _Level5Vector
                0x0000000000000280                . = 0x280
 *fill*         0x0000000040080265       0x1b 
 *(SORT_BY_ALIGNMENT(.DebugExceptionVector.text))
 .DebugExceptionVector.text
                0x0000000040080280       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040080280                _Level6Vector
                0x00000000000002c0                . = 0x2c0
 *fill*         0x00000000400802a5       0x1b 
 *(SORT_BY_ALIGNMENT(.NMIExceptionVector.text))
 .NMIExceptionVector.text
                0x00000000400802c0       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
                                         0x29 (size before relaxing)
                0x00000000400802c0                _Level7Vector
                0x0000000000000300                . = 0x300
 *fill*         0x00000000400802e5       0x1b 
 *(SORT_BY_ALIGNMENT(.KernelExceptionVector.text))
 .KernelExceptionVector.text
                0x0000000040080300        0x3 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
                0x0000000040080300                _KernelExceptionVector
                0x0000000000000340                . = 0x340
 *fill*         0x0000000040080303       0x3d 
 *(SORT_BY_ALIGNMENT(.UserExceptionVector.text))
 .UserExceptionVector.text
                0x0000000040080340       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
                0x0000000040080340                _Level1RealVector
                0x00000000000003c0                . = 0x3c0
 *fill*         0x0000000040080352       0x6e 
 *(SORT_BY_ALIGNMENT(.DoubleExceptionVector.text))
 .DoubleExceptionVector.text
                0x00000000400803c0        0x6 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
                0x00000000400803c0                _DoubleExceptionVector
                0x0000000000000400                . = 0x400
 *fill*         0x00000000400803c6       0x3a 
 *(SORT_BY_ALIGNMENT(.*Vector.literal))
 *(SORT_BY_ALIGNMENT(.UserEnter.literal))
 *(SORT_BY_ALIGNMENT(.UserEnter.text))
                0x0000000040080400                . = ALIGN (0x10)
 *(SORT_BY_ALIGNMENT(.entry.text))
 *(SORT_BY_ALIGNMENT(.init.literal))
 *(SORT_BY_ALIGNMENT(.init))
                0x0000000040080400                _init_end = ABSOLUTE (.)
                0x0000000000000000                _iram_start = ABSOLUTE (0x0)

text            0x0000000040080400     0x2e3c
                0x0000000040080400                _iram_text_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.iram1) SORT_BY_ALIGNMENT(.iram1.*))
 .iram1.literal
                0x0000000040080400       0x24 zephyr/libzephyr.a(soc.c.obj)
                                         0x30 (size before relaxing)
 .iram1.11.literal
                0x0000000040080424        0x4 zephyr/libzephyr.a(soc.c.obj)
                                          0x8 (size before relaxing)
 .iram1.3.literal
                0x0000000040080428        0x4 zephyr/libzephyr.a(clk.c.obj)
 .iram1.3.literal
                0x000000004008042c       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .iram1.literal
                0x000000004008044c        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                                          0x4 (size before relaxing)
 .iram1.5.literal
                0x000000004008044c        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .iram1.8.literal
                0x000000004008044c        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x10 (size before relaxing)
 .iram1.5.literal
                0x0000000040080450        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x10 (size before relaxing)
 .iram1.7.literal
                0x0000000040080458        0x0 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                          0x8 (size before relaxing)
 .iram1.11.literal
                0x0000000040080458        0x0 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                          0xc (size before relaxing)
 .iram1.12.literal
                0x0000000040080458        0x4 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x1c (size before relaxing)
 .iram1.4.literal
                0x000000004008045c       0x10 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x90 (size before relaxing)
 .iram1.6.literal
                0x000000004008046c        0x8 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x14 (size before relaxing)
 .iram1.10.literal
                0x0000000040080474       0x1c zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x5c (size before relaxing)
 .literal.arch_cpu_idle
                0x0000000040080490        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_xtensa_fatal_error
                0x0000000040080490        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                          0xc (size before relaxing)
 .literal       0x0000000040080490        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_init_stack
                0x0000000040080494        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                                          0xc (size before relaxing)
 .literal.arch_new_thread
                0x000000004008049c        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_irq_spurious
                0x000000004008049c        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                                          0x4 (size before relaxing)
 .literal.xtensa_int2_c
                0x000000004008049c       0x10 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                                         0x14 (size before relaxing)
 .literal.xtensa_int3_c
                0x00000000400804ac       0x1c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                                         0x24 (size before relaxing)
 .literal.xtensa_int4_c
                0x00000000400804c8       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                                         0x1c (size before relaxing)
 .literal.xtensa_int5_c
                0x00000000400804dc        0xc zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                                         0x14 (size before relaxing)
 .literal.xtensa_int6_c
                0x00000000400804e8        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                                          0x4 (size before relaxing)
 .literal.xtensa_int7_c
                0x00000000400804e8        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                                          0xc (size before relaxing)
 .literal.xtensa_excint1_c
                0x00000000400804ec        0xc zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                                         0x20 (size before relaxing)
 .literal.z_xtensa_cpu_process_stack_pc
                0x00000000400804f8        0xc zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_xtensa_backtrace_get_next_frame
                0x0000000040080504        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_xtensa_backtrace_print
                0x000000004008050c       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                         0x58 (size before relaxing)
 .literal.z_sys_init_run_level
                0x0000000040080520        0x4 zephyr/kernel/libkernel.a(device.c.obj)
 .literal.z_impl_device_get_binding
                0x0000000040080524        0x8 zephyr/kernel/libkernel.a(device.c.obj)
                                         0x14 (size before relaxing)
 .literal.k_sys_fatal_error_handler
                0x000000004008052c        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_fatal_error
                0x000000004008052c        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
                                          0xc (size before relaxing)
 .literal.bg_thread_main
                0x000000004008052c        0x8 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x1c (size before relaxing)
 .literal.z_init_cpu
                0x0000000040080534       0x10 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_cstart
                0x0000000040080544        0xc zephyr/kernel/libkernel.a(init.c.obj)
                                         0x40 (size before relaxing)
 .literal.k_heap_init
                0x0000000040080550        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
                                          0x4 (size before relaxing)
 .literal.statics_init
                0x0000000040080550        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
                                          0xc (size before relaxing)
 .literal.k_heap_aligned_alloc
                0x0000000040080558        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x10 (size before relaxing)
 .literal.k_heap_free
                0x0000000040080558        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
                                          0xc (size before relaxing)
 .literal.z_setup_new_thread
                0x0000000040080558        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_init_static_threads
                0x0000000040080558        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x20 (size before relaxing)
 .literal.idle  0x0000000040080560        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_k_sem_give
                0x0000000040080560        0x4 zephyr/kernel/libkernel.a(sem.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_impl_k_sem_take
                0x0000000040080564        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
                                          0x8 (size before relaxing)
 .literal.unpend_thread_no_timeout
                0x0000000040080564        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_reset_time_slice
                0x0000000040080564        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_swap_irqlock
                0x0000000040080568        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_swap
                0x0000000040080568        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.k_sched_time_slice_set
                0x000000004008056c        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_unpend_thread
                0x0000000040080570        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_reschedule
                0x0000000040080570        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_reschedule_irqlock
                0x0000000040080570        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_reschedule_unlocked
                0x0000000040080570        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_sched_lock
                0x0000000040080570        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_swap_next_thread
                0x0000000040080570        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_get_next_switch_handle
                0x0000000040080570        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.update_cache
                0x0000000040080570        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.move_thread_to_end_of_prio_q
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_time_slice
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x18 (size before relaxing)
 .literal.ready_thread
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_ready_thread
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_sched_start
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_thread_timeout
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.unready_thread
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.add_to_waitq_locked
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.pend  0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_pend_curr
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_impl_k_thread_suspend
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x14 (size before relaxing)
 .literal.k_sched_unlock
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_unpend_first_thread
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_unpend_all
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_sched_init
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_impl_k_yield
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_tick_sleep
                0x0000000040080574        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x24 (size before relaxing)
 .literal.z_impl_k_sleep
                0x0000000040080574        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_impl_z_current_get
                0x000000004008057c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_thread_abort
                0x000000004008057c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x28 (size before relaxing)
 .literal.z_impl_k_thread_abort
                0x000000004008057c        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.elapsed
                0x000000004008057c        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.remove_timeout
                0x0000000040080580        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.next_timeout
                0x0000000040080584        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_add_timeout
                0x0000000040080584        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_abort_timeout
                0x0000000040080588        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_set_timeout_expiry
                0x0000000040080588        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.sys_clock_announce
                0x0000000040080588        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x24 (size before relaxing)
 .literal.sys_clock_tick_get
                0x0000000040080588        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.sys_clock_tick_get_32
                0x0000000040080588        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_clock_timeout_end_calc
                0x0000000040080588        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_free
                0x0000000040080588        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.boot_banner
                0x0000000040080588        0xc zephyr/kernel/libkernel.a(banner.c.obj)
                                         0x10 (size before relaxing)
 .literal       0x0000000040080594        0x4 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .literal.ccompare_isr
                0x0000000040080598        0xc zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x10 (size before relaxing)
 .literal.sys_clock_driver_init
                0x00000000400805a4        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_clock_set_timeout
                0x00000000400805a4        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x14 (size before relaxing)
 .literal.sys_clock_elapsed
                0x00000000400805ac        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                          0x8 (size before relaxing)
 .literal.encode_uint
                0x00000000400805ac        0x4 zephyr/libzephyr.a(cbprintf_complete.c.obj)
                                          0x8 (size before relaxing)
 .literal.cbvprintf
                0x00000000400805b0       0x30 zephyr/libzephyr.a(cbprintf_complete.c.obj)
                                         0x68 (size before relaxing)
 .literal.char_out
                0x00000000400805e0        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.vprintk
                0x00000000400805e4        0x4 zephyr/libzephyr.a(printk.c.obj)
                                          0x8 (size before relaxing)
 .literal.printk
                0x00000000400805e8        0x0 zephyr/libzephyr.a(printk.c.obj)
                                          0x4 (size before relaxing)
 .literal.console_out
                0x00000000400805e8        0x4 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .literal.__start
                0x00000000400805ec        0x0 zephyr/libzephyr.a(loader.c.obj)
                                          0x4 (size before relaxing)
 .iram1         0x00000000400805ec       0x52 zephyr/libzephyr.a(soc.c.obj)
                                         0x5a (size before relaxing)
                0x00000000400805ec                __esp_platform_start
 *fill*         0x000000004008063e        0x2 
 .iram1.11      0x0000000040080640       0x1b zephyr/libzephyr.a(soc.c.obj)
                0x0000000040080640                arch_printk_char_out
 *fill*         0x000000004008065b        0x1 
 .iram1.3       0x000000004008065c        0xa zephyr/libzephyr.a(clk.c.obj)
                0x000000004008065c                ets_update_cpu_frequency
 *fill*         0x0000000040080666        0x2 
 .iram1.3       0x0000000040080668       0x39 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 *fill*         0x00000000400806a1        0x3 
 .iram1         0x00000000400806a4       0x1a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                0x00000000400806a4                z_xtensa_backtrace_get_start
 *fill*         0x00000000400806be        0x2 
 .iram1.5       0x00000000400806c0       0x33 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x3a (size before relaxing)
 *fill*         0x00000000400806f3        0x1 
 .iram1.8       0x00000000400806f4       0xb0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0xb4 (size before relaxing)
                0x00000000400806f4                esp_intr_disable
 .iram1.5       0x00000000400807a4       0x11 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x17 (size before relaxing)
 *fill*         0x00000000400807b5        0x3 
 .iram1.7       0x00000000400807b8       0x5d zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x61 (size before relaxing)
 *fill*         0x0000000040080815        0x3 
 .iram1.11      0x0000000040080818       0x56 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x5e (size before relaxing)
 *fill*         0x000000004008086e        0x2 
 .iram1.12      0x0000000040080870       0x54 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x64 (size before relaxing)
 .iram1.4       0x00000000400808c4      0x17e zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                        0x1d6 (size before relaxing)
 *fill*         0x0000000040080a42        0x2 
 .iram1.6       0x0000000040080a44       0x51 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x55 (size before relaxing)
 *fill*         0x0000000040080a95        0x3 
 .iram1.10      0x0000000040080a98      0x2d2 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                        0x2ee (size before relaxing)
 *fill*         0x0000000040080d6a        0x0 
 *fill*         0x0000000040080d6a        0x0 
 *fill*         0x0000000040080d6a        0x0 
 *fill*         0x0000000040080d6a        0x0 
 *fill*         0x0000000040080d6a        0x0 
 *fill*         0x0000000040080d6a        0x2 
 .iram1.3       0x0000000040080d6c       0x9c zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x0000000040080e08        0x0 
 *fill*         0x0000000040080e08        0x0 
 *fill*         0x0000000040080e08        0x0 
 *fill*         0x0000000040080e08        0x0 
 *fill*         0x0000000040080e08        0x0 
 *(SORT_BY_ALIGNMENT(.iram0.literal) SORT_BY_ALIGNMENT(.iram.literal) SORT_BY_ALIGNMENT(.iram.text.literal) SORT_BY_ALIGNMENT(.iram0.text) SORT_BY_ALIGNMENT(.iram.text))
 .iram0.text    0x0000000040080e08       0x2d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
                0x0000000040080e08                _Level1Vector
 *fill*         0x0000000040080e35        0x0 
 *libesp32.a:panic.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *librtc.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libsubsys__net__l2__ethernet.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libsubsys__net__lib__config.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libsubsys__net__ip.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libsubsys__net.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libarch__xtensa__core.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040080e35        0x3 
 .text.arch_cpu_idle
                0x0000000040080e38        0xb zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                          0xe (size before relaxing)
                0x0000000040080e38                arch_cpu_idle
 *fill*         0x0000000040080e43        0x1 
 .text.z_xtensa_fatal_error
                0x0000000040080e44       0x1c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x24 (size before relaxing)
                0x0000000040080e44                z_xtensa_fatal_error
 .text          0x0000000040080e60      0x200 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
                0x0000000040080e60                xtensa_spill_reg_windows
                0x0000000040080e80                xtensa_save_high_regs
                0x0000000040080ec8                xtensa_restore_high_regs
                0x0000000040080efd                _restore_context
                0x0000000040080f34                xtensa_switch
 .text.xtensa_init_stack
                0x0000000040081060       0x57 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                                         0x5b (size before relaxing)
                0x0000000040081060                xtensa_init_stack
 *fill*         0x00000000400810b7        0x1 
 .text.arch_new_thread
                0x00000000400810b8       0x1a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                0x00000000400810b8                arch_new_thread
 *fill*         0x00000000400810d2        0x2 
 .text.z_irq_spurious
                0x00000000400810d4       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                                         0x16 (size before relaxing)
                0x00000000400810d4                z_irq_spurious
 *fill*         0x00000000400810e6        0x2 
 .text.xtensa_int2_c
                0x00000000400810e8       0x54 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                0x00000000400810e8                xtensa_int2_c
 .text.xtensa_int3_c
                0x000000004008113c       0x7a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                0x000000004008113c                xtensa_int3_c
 *fill*         0x00000000400811b6        0x2 
 .text.xtensa_int4_c
                0x00000000400811b8       0x62 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                0x00000000400811b8                xtensa_int4_c
 *fill*         0x000000004008121a        0x2 
 .text.xtensa_int5_c
                0x000000004008121c       0x58 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                0x000000004008121c                xtensa_int5_c
 .text.xtensa_int6_c
                0x0000000040081274       0x15 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                0x0000000040081274                xtensa_int6_c
 *fill*         0x0000000040081289        0x3 
 .text.xtensa_int7_c
                0x000000004008128c       0x34 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                0x000000004008128c                xtensa_int7_c
 .text.xtensa_excint1_c
                0x00000000400812c0      0x149 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                                        0x14d (size before relaxing)
                0x00000000400812c0                xtensa_excint1_c
 *fill*         0x0000000040081409        0x3 
 .text.z_xtensa_cpu_process_stack_pc
                0x000000004008140c       0x29 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 *fill*         0x0000000040081435        0x3 
 .text.z_xtensa_backtrace_get_next_frame
                0x0000000040081438       0x39 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                         0x3d (size before relaxing)
                0x0000000040081438                z_xtensa_backtrace_get_next_frame
 *fill*         0x0000000040081471        0x3 
 .text.z_xtensa_backtrace_print
                0x0000000040081474       0xda zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                         0xfe (size before relaxing)
                0x0000000040081474                z_xtensa_backtrace_print
 *fill*         0x000000004008154e        0x0 
 *fill*         0x000000004008154e        0x0 
 *fill*         0x000000004008154e        0x0 
 *fill*         0x000000004008154e        0x0 
 *fill*         0x000000004008154e        0x2 
 .text.z_xtensa_dump_stack
                0x0000000040081550        0x5 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                0x0000000040081550                z_xtensa_dump_stack
 *fill*         0x0000000040081555        0x0 
 *fill*         0x0000000040081555        0x0 
 *fill*         0x0000000040081555        0x0 
 *fill*         0x0000000040081555        0x0 
 *fill*         0x0000000040081555        0x0 
 *fill*         0x0000000040081555        0x0 
 *fill*         0x0000000040081555        0x0 
 *libkernel.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040081555        0x3 
 .text.z_sys_init_run_level
                0x0000000040081558       0x48 zephyr/kernel/libkernel.a(device.c.obj)
                0x0000000040081558                z_sys_init_run_level
 .text.z_impl_device_get_binding
                0x00000000400815a0       0x62 zephyr/kernel/libkernel.a(device.c.obj)
                0x00000000400815a0                z_impl_device_get_binding
 *fill*         0x0000000040081602        0x2 
 .text.k_sys_fatal_error_handler
                0x0000000040081604        0x8 zephyr/kernel/libkernel.a(fatal.c.obj)
                                          0xc (size before relaxing)
                0x0000000040081604                k_sys_fatal_error_handler
 .text.z_fatal_error
                0x000000004008160c       0x20 zephyr/kernel/libkernel.a(fatal.c.obj)
                                         0x28 (size before relaxing)
                0x000000004008160c                z_fatal_error
 .text.bg_thread_main
                0x000000004008162c       0x2e zephyr/kernel/libkernel.a(init.c.obj)
                                         0x3e (size before relaxing)
 *fill*         0x000000004008165a        0x2 
 .text.z_init_cpu
                0x000000004008165c       0x66 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000004008165c                z_init_cpu
 *fill*         0x00000000400816c2        0x2 
 .text.z_cstart
                0x00000000400816c4       0x8f zephyr/kernel/libkernel.a(init.c.obj)
                                         0xaf (size before relaxing)
                0x00000000400816c4                z_cstart
 *fill*         0x0000000040081753        0x1 
 .text.k_heap_init
                0x0000000040081754       0x17 zephyr/kernel/libkernel.a(kheap.c.obj)
                0x0000000040081754                k_heap_init
 *fill*         0x000000004008176b        0x1 
 .text.statics_init
                0x000000004008176c       0x22 zephyr/kernel/libkernel.a(kheap.c.obj)
 *fill*         0x000000004008178e        0x2 
 .text.k_heap_aligned_alloc
                0x0000000040081790       0x67 zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x6f (size before relaxing)
                0x0000000040081790                k_heap_aligned_alloc
 *fill*         0x00000000400817f7        0x1 
 .text.k_heap_free
                0x00000000400817f8       0x28 zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x30 (size before relaxing)
                0x00000000400817f8                k_heap_free
 .text.z_setup_new_thread
                0x0000000040081820       0x51 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x55 (size before relaxing)
                0x0000000040081820                z_setup_new_thread
 *fill*         0x0000000040081871        0x3 
 .text.z_init_static_threads
                0x0000000040081874       0x78 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x82 (size before relaxing)
                0x0000000040081874                z_init_static_threads
 *fill*         0x00000000400818ec        0x0 
 .text.idle     0x00000000400818ec        0xc zephyr/kernel/libkernel.a(idle.c.obj)
                                          0xf (size before relaxing)
                0x00000000400818ec                idle
 *fill*         0x00000000400818f8        0x0 
 .text.z_impl_k_sem_give
                0x00000000400818f8       0x3a zephyr/kernel/libkernel.a(sem.c.obj)
                                         0x3e (size before relaxing)
                0x00000000400818f8                z_impl_k_sem_give
 *fill*         0x0000000040081932        0x2 
 .text.z_impl_k_sem_take
                0x0000000040081934       0x3a zephyr/kernel/libkernel.a(sem.c.obj)
                                         0x3d (size before relaxing)
                0x0000000040081934                z_impl_k_sem_take
 *fill*         0x000000004008196e        0x2 
 .text.unpend_thread_no_timeout
                0x0000000040081970       0x19 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x1d (size before relaxing)
 *fill*         0x0000000040081989        0x3 
 .text.z_reset_time_slice
                0x000000004008198c       0x1f zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x23 (size before relaxing)
                0x000000004008198c                z_reset_time_slice
 *fill*         0x00000000400819ab        0x1 
 .text.z_swap_irqlock
                0x00000000400819ac       0x35 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x39 (size before relaxing)
 *fill*         0x00000000400819e1        0x3 
 .text.z_swap   0x00000000400819e4       0x3a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x3e (size before relaxing)
 *fill*         0x0000000040081a1e        0x2 
 .text.k_sched_time_slice_set
                0x0000000040081a20       0x38 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x3c (size before relaxing)
                0x0000000040081a20                k_sched_time_slice_set
 .text.z_unpend_thread
                0x0000000040081a58       0x1b zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x1f (size before relaxing)
                0x0000000040081a58                z_unpend_thread
 *fill*         0x0000000040081a73        0x1 
 .text.z_reschedule
                0x0000000040081a74       0x2b zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x2f (size before relaxing)
                0x0000000040081a74                z_reschedule
 *fill*         0x0000000040081a9f        0x1 
 .text.z_reschedule_irqlock
                0x0000000040081aa0       0x24 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040081aa0                z_reschedule_irqlock
 .text.z_reschedule_unlocked
                0x0000000040081ac4        0xb zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xe (size before relaxing)
 *fill*         0x0000000040081acf        0x1 
 .text.k_sched_lock
                0x0000000040081ad0       0x1b zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040081ad0                k_sched_lock
 *fill*         0x0000000040081aeb        0x1 
 .text.z_swap_next_thread
                0x0000000040081aec        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040081aec                z_swap_next_thread
 *fill*         0x0000000040081af6        0x2 
 .text.z_get_next_switch_handle
                0x0000000040081af8       0x14 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040081af8                z_get_next_switch_handle
 .text.update_cache
                0x0000000040081b0c       0x3d zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x40 (size before relaxing)
 *fill*         0x0000000040081b49        0x3 
 .text.move_thread_to_end_of_prio_q
                0x0000000040081b4c       0x7a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x7e (size before relaxing)
 *fill*         0x0000000040081bc6        0x2 
 .text.z_time_slice
                0x0000000040081bc8       0x68 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x6c (size before relaxing)
                0x0000000040081bc8                z_time_slice
 .text.ready_thread
                0x0000000040081c30       0x7e zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x0000000040081cae        0x2 
 .text.z_ready_thread
                0x0000000040081cb0       0x13 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x16 (size before relaxing)
                0x0000000040081cb0                z_ready_thread
 *fill*         0x0000000040081cc3        0x1 
 .text.z_sched_start
                0x0000000040081cc4       0x32 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x36 (size before relaxing)
                0x0000000040081cc4                z_sched_start
 *fill*         0x0000000040081cf6        0x2 
 .text.z_thread_timeout
                0x0000000040081cf8       0x38 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x3c (size before relaxing)
                0x0000000040081cf8                z_thread_timeout
 .text.unready_thread
                0x0000000040081d30       0x2f zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x33 (size before relaxing)
 *fill*         0x0000000040081d5f        0x1 
 .text.add_to_waitq_locked
                0x0000000040081d60       0x56 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x5a (size before relaxing)
 *fill*         0x0000000040081db6        0x2 
 .text.pend     0x0000000040081db8       0x2a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x2e (size before relaxing)
 *fill*         0x0000000040081de2        0x2 
 .text.z_pend_curr
                0x0000000040081de4       0x1e zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x22 (size before relaxing)
                0x0000000040081de4                z_pend_curr
 *fill*         0x0000000040081e02        0x2 
 .text.z_impl_k_thread_suspend
                0x0000000040081e04       0x4f zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x5b (size before relaxing)
                0x0000000040081e04                z_impl_k_thread_suspend
 *fill*         0x0000000040081e53        0x1 
 .text.k_sched_unlock
                0x0000000040081e54       0x26 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x2a (size before relaxing)
                0x0000000040081e54                k_sched_unlock
 *fill*         0x0000000040081e7a        0x2 
 .text.z_unpend_first_thread
                0x0000000040081e7c       0x21 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x29 (size before relaxing)
                0x0000000040081e7c                z_unpend_first_thread
 *fill*         0x0000000040081e9d        0x3 
 .text.z_unpend_all
                0x0000000040081ea0       0x24 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x28 (size before relaxing)
                0x0000000040081ea0                z_unpend_all
 .text.z_sched_init
                0x0000000040081ec4       0x16 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x1a (size before relaxing)
                0x0000000040081ec4                z_sched_init
 *fill*         0x0000000040081eda        0x2 
 .text.z_impl_k_yield
                0x0000000040081edc       0x76 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x82 (size before relaxing)
                0x0000000040081edc                z_impl_k_yield
 *fill*         0x0000000040081f52        0x2 
 .text.z_tick_sleep
                0x0000000040081f54       0x7a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x8a (size before relaxing)
 *fill*         0x0000000040081fce        0x2 
 .text.z_impl_k_sleep
                0x0000000040081fd0       0x38 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040081fd0                z_impl_k_sleep
 .text.z_impl_z_current_get
                0x0000000040082008        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040082008                z_impl_z_current_get
 *fill*         0x0000000040082012        0x2 
 .text.z_thread_abort
                0x0000000040082014       0x8c zephyr/kernel/libkernel.a(sched.c.obj)
                                         0xa4 (size before relaxing)
                0x0000000040082014                z_thread_abort
 .text.z_impl_k_thread_abort
                0x00000000400820a0        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xe (size before relaxing)
                0x00000000400820a0                z_impl_k_thread_abort
 *fill*         0x00000000400820aa        0x2 
 .text.elapsed  0x00000000400820ac       0x14 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x18 (size before relaxing)
 .text.remove_timeout
                0x00000000400820c0       0x38 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.next_timeout
                0x00000000400820f8       0x56 zephyr/kernel/libkernel.a(timeout.c.obj)
 *fill*         0x000000004008214e        0x2 
 .text.z_add_timeout
                0x0000000040082150      0x12c zephyr/kernel/libkernel.a(timeout.c.obj)
                0x0000000040082150                z_add_timeout
 .text.z_abort_timeout
                0x000000004008227c       0x1e zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x22 (size before relaxing)
                0x000000004008227c                z_abort_timeout
 *fill*         0x000000004008229a        0x2 
 .text.z_set_timeout_expiry
                0x000000004008229c       0x3a zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x3d (size before relaxing)
                0x000000004008229c                z_set_timeout_expiry
 *fill*         0x00000000400822d6        0x2 
 .text.sys_clock_announce
                0x00000000400822d8       0xb5 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0xc1 (size before relaxing)
                0x00000000400822d8                sys_clock_announce
 *fill*         0x000000004008238d        0x3 
 .text.sys_clock_tick_get
                0x0000000040082390       0x26 zephyr/kernel/libkernel.a(timeout.c.obj)
                0x0000000040082390                sys_clock_tick_get
 *fill*         0x00000000400823b6        0x2 
 .text.sys_clock_tick_get_32
                0x00000000400823b8        0xa zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0xd (size before relaxing)
                0x00000000400823b8                sys_clock_tick_get_32
 *fill*         0x00000000400823c2        0x2 
 .text.sys_clock_timeout_end_calc
                0x00000000400823c4       0x68 zephyr/kernel/libkernel.a(timeout.c.obj)
                0x00000000400823c4                sys_clock_timeout_end_calc
 .text.k_free   0x000000004008242c       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x000000004008242c                k_free
 .text.boot_banner
                0x0000000040082440       0x11 zephyr/kernel/libkernel.a(banner.c.obj)
                                         0x14 (size before relaxing)
                0x0000000040082440                boot_banner
 *fill*         0x0000000040082451        0x3 
 .text.z_device_state_init
                0x0000000040082454        0x5 zephyr/kernel/libkernel.a(device.c.obj)
                0x0000000040082454                z_device_state_init
 *fill*         0x0000000040082459        0x3 
 .text.z_device_is_ready
                0x000000004008245c       0x20 zephyr/kernel/libkernel.a(device.c.obj)
                0x000000004008245c                z_device_is_ready
 *fill*         0x000000004008247c        0x0 
 .text.arch_system_halt
                0x000000004008247c        0x9 zephyr/kernel/libkernel.a(fatal.c.obj)
                0x000000004008247c                arch_system_halt
 *fill*         0x0000000040082485        0x0 
 *fill*         0x0000000040082485        0x0 
 *fill*         0x0000000040082485        0x0 
 *fill*         0x0000000040082485        0x0 
 *fill*         0x0000000040082485        0x0 
 *fill*         0x0000000040082485        0x0 
 *fill*         0x0000000040082485        0x0 
 *fill*         0x0000000040082485        0x0 
 *fill*         0x0000000040082485        0x0 
 *fill*         0x0000000040082485        0x0 
 *fill*         0x0000000040082485        0x0 
 *fill*         0x0000000040082485        0x3 
 .text.sys_dlist_remove
                0x0000000040082488       0x13 zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x000000004008249b        0x0 
 *fill*         0x000000004008249b        0x0 
 *fill*         0x000000004008249b        0x0 
 *fill*         0x000000004008249b        0x0 
 *fill*         0x000000004008249b        0x0 
 *fill*         0x000000004008249b        0x0 
 *fill*         0x000000004008249b        0x0 
 *fill*         0x000000004008249b        0x0 
 *fill*         0x000000004008249b        0x0 
 *fill*         0x000000004008249b        0x1 
 .text.z_priq_dumb_best
                0x000000004008249c       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
                0x000000004008249c                z_priq_dumb_best
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *fill*         0x00000000400824ac        0x0 
 *libsoc.a:rtc_*.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libsoc.a:cpu_util.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libgcc.a:lib2funcs.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libdrivers__flash.a:flash_esp32.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:windowspill_asm.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text          0x00000000400824ac      0x137 zephyr/libzephyr.a(windowspill_asm.S.obj)
                0x00000000400824ac                xthal_window_spill_nw
                0x00000000400824ac                xthal_spill_registers_into_stack_nw
                0x00000000400825c0                xthal_window_spill
 *libzephyr.a:log_noos.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libdrivers__timer.a:xtensa_sys_timer.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000400825e3        0x1 
 .text.ccompare_isr
                0x00000000400825e4       0x32 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 *fill*         0x0000000040082616        0x2 
 .text.sys_clock_driver_init
                0x0000000040082618       0x20 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .text.sys_clock_set_timeout
                0x0000000040082638       0x60 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x0000000040082638                sys_clock_set_timeout
 .text.sys_clock_elapsed
                0x0000000040082698       0x22 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x0000000040082698                sys_clock_elapsed
 *fill*         0x00000000400826ba        0x0 
 *fill*         0x00000000400826ba        0x0 
 *libzephyr.a:log_core.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:cbprintf_complete.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000400826ba        0x2 
 .text.encode_uint
                0x00000000400826bc       0xb4 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text.cbvprintf
                0x0000000040082770      0x971 zephyr/libzephyr.a(cbprintf_complete.c.obj)
                                        0x97d (size before relaxing)
                0x0000000040082770                cbvprintf
 *fill*         0x00000000400830e1        0x3 
 .text.outs     0x00000000400830e4       0x2e zephyr/libzephyr.a(cbprintf_complete.c.obj)
 *fill*         0x0000000040083112        0x0 
 *libzephyr.a:printk.*(SORT_BY_ALIGNMENT(.literal.printk) SORT_BY_ALIGNMENT(.literal.vprintk) SORT_BY_ALIGNMENT(.literal.char_out) SORT_BY_ALIGNMENT(.text.printk) SORT_BY_ALIGNMENT(.text.vprintk) SORT_BY_ALIGNMENT(.text.char_out))
 *fill*         0x0000000040083112        0x2 
 .text.char_out
                0x0000000040083114       0x18 zephyr/libzephyr.a(printk.c.obj)
 .text.vprintk  0x000000004008312c       0x1c zephyr/libzephyr.a(printk.c.obj)
                0x000000004008312c                vprintk
 .text.printk   0x0000000040083148       0x22 zephyr/libzephyr.a(printk.c.obj)
                                         0x26 (size before relaxing)
                0x0000000040083148                printk
 *fill*         0x000000004008316a        0x0 
 *libzephyr.a:log_msg.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_list.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libdrivers__console.a:uart_console.*(SORT_BY_ALIGNMENT(.literal.console_out) SORT_BY_ALIGNMENT(.text.console_out))
 *fill*         0x000000004008316a        0x2 
 .text.console_out
                0x000000004008316c       0x22 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 *fill*         0x000000004008318e        0x0 
 *libzephyr.a:log_output.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_backend_uart.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:loader.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004008318e        0x2 
 .text.__start  0x0000000040083190        0x8 zephyr/libzephyr.a(loader.c.obj)
                                          0xb (size before relaxing)
                0x0000000040083190                __start
 *fill*         0x0000000040083198        0x0 
 *liblib__libc__minimal.a:string.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040083198        0x0 
 .text.strlen   0x0000000040083198       0x16 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
                0x0000000040083198                strlen
 *fill*         0x00000000400831ae        0x2 
 .text.strnlen  0x00000000400831b0       0x18 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
                0x00000000400831b0                strnlen
 .text.strcmp   0x00000000400831c8       0x1b zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
                0x00000000400831c8                strcmp
 *fill*         0x00000000400831e3        0x1 
 .text.memset   0x00000000400831e4       0x56 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
                0x00000000400831e4                memset
 *libphy.a:(SORT_BY_ALIGNMENT(.phyiram) SORT_BY_ALIGNMENT(.phyiram.*))
 *libgcov.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
                0x000000004008323a                _iram_text_end = ABSOLUTE (.)
                0x000000004008323c                . = ALIGN (0x4)
 *fill*         0x000000004008323a        0x2 
                0x000000004008323c                _iram_end = ABSOLUTE (.)

.rtc.text       0x00000000400c0000        0x0
                0x00000000400c0000                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.rtc.literal) SORT_BY_ALIGNMENT(.rtc.text))
 *rtc_wake_stub*.o(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))

.rtc.data       0x0000000050000000        0x0
                0x0000000050000000                _rtc_data_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.data))
 *(SORT_BY_ALIGNMENT(.rtc.rodata))
 *rtc_wake_stub*.o(SORT_BY_ALIGNMENT(.data) SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.data.*) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.bss) SORT_BY_ALIGNMENT(.bss.*))
                0x0000000050000000                _rtc_data_end = ABSOLUTE (.)

.rtc.bss        0x0000000050000000        0x0
                0x0000000050000000                _rtc_bss_start = ABSOLUTE (.)
 *rtc_wake_stub*.o(SORT_BY_ALIGNMENT(.bss) SORT_BY_ALIGNMENT(.bss.*))
 *rtc_wake_stub*.o(SORT_BY_ALIGNMENT(COMMON))
                0x0000000050000000                _rtc_bss_end = ABSOLUTE (.)

bss             0x000000003ffb03b0      0x258
                0x000000003ffb03b0                . = ALIGN (0x8)
                0x000000003ffb03b0                _bss_start = ABSOLUTE (.)
                0x000000003ffb03b0                _btdm_bss_start = ABSOLUTE (.)
 *libbtdm_app.a:(SORT_BY_ALIGNMENT(.bss) SORT_BY_ALIGNMENT(.bss.*) SORT_BY_ALIGNMENT(COMMON))
                0x000000003ffb03b0                . = ALIGN (0x4)
                0x000000003ffb03b0                _btdm_bss_end = ABSOLUTE (.)
 *libkernel.a:mempool.*(SORT_BY_ALIGNMENT(.noinit.kheap_buf__system_heap) SORT_BY_ALIGNMENT(.noinit.*.kheap_buf__system_heap))
 *(SORT_BY_ALIGNMENT(.dynsbss))
 *(SORT_BY_ALIGNMENT(.sbss))
 *(SORT_BY_ALIGNMENT(.sbss.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sb.*))
 *(SORT_BY_ALIGNMENT(.scommon))
 *(SORT_BY_ALIGNMENT(.sbss2))
 *(SORT_BY_ALIGNMENT(.sbss2.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sb2.*))
 *(SORT_BY_ALIGNMENT(.dynbss))
 *(SORT_BY_ALIGNMENT(.bss))
 *(SORT_BY_ALIGNMENT(.bss.*))
 .bss.z_idle_threads
                0x000000003ffb03b0       0x58 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb03b0                z_idle_threads
 .bss.z_main_thread
                0x000000003ffb0408       0x58 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb0408                z_main_thread
 .bss.curr_tick
                0x000000003ffb0460        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss.s_cur_pll_freq
                0x000000003ffb0468        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .bss.periph_spinlock
                0x000000003ffb046c        0x4 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss.cause     0x000000003ffb0470        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .bss.mask      0x000000003ffb0474        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .bss.non_iram_int_mask
                0x000000003ffb0478        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.vector_desc_head
                0x000000003ffb047c        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.intr_alloc_table
                0x000000003ffb0480      0x100 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.esp_intc_csec
                0x000000003ffb0580        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.uart_console_dev
                0x000000003ffb0584        0x4 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .bss.gpio_data_1
                0x000000003ffb0588       0x10 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.gpio_data_0
                0x000000003ffb0598       0x10 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.last_count
                0x000000003ffb05a8        0x4 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .bss._kernel   0x000000003ffb05ac       0x24 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb05ac                _kernel
 .bss.slice_max_prio
                0x000000003ffb05d0        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss.slice_ticks
                0x000000003ffb05d4        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss.announce_remaining
                0x000000003ffb05d8        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss.ref_counts
                0x000000003ffb05dc       0x23 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss.isr_connected$8918
                0x000000003ffb05ff        0x1 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.z_sys_post_kernel
                0x000000003ffb0600        0x1 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffb0600                z_sys_post_kernel
 .bss.lock      0x000000003ffb0601        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .bss.sched_spinlock
                0x000000003ffb0601        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                0x000000003ffb0601                sched_spinlock
 *(SORT_BY_ALIGNMENT(.share.mem))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.b.*))
 *(SORT_BY_ALIGNMENT(COMMON))
                0x000000003ffb0608                . = ALIGN (0x8)
 *fill*         0x000000003ffb0601        0x7 
                0x000000003ffb0608                _bss_end = ABSOLUTE (.)
                0x0000000000000001                ASSERT (((_bss_end - ORIGIN (dram0_0_seg)) <= LENGTH (dram0_0_seg)), DRAM segment data does not fit.)

noinit          0x000000003ffe5230     0xd400
                0x000000003ffe5230                . = ALIGN (0x8)
 *(SORT_BY_ALIGNMENT(.noinit))
 *(SORT_BY_ALIGNMENT(.noinit.*))
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".2
                0x000000003ffe5230      0x400 zephyr/kernel/libkernel.a(init.c.obj)
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".1
                0x000000003ffe5630      0x800 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffe5630                z_main_stack
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".3
                0x000000003ffe5e30      0x800 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003ffe5e30                z_interrupt_stacks
 .noinit.0      0x000000003ffe6630     0xc000 zephyr/libzephyr.a(heap_caps.c.obj)
                0x000000003ffe6630                dram0_seg_1_heap
                0x000000003fff2630                . = ALIGN (0x8)
                0x00000000400d0020                _image_irom_start = LOADADDR (.flash.text)
                0x00000000000034a0                _image_irom_size = ((LOADADDR (.flash.text) + SIZEOF (.flash.text)) - _image_irom_start)
                0x00000000400d0020                _image_irom_vaddr = ADDR (.flash.text)

.flash.text     0x00000000400d0020     0x34a0
                0x00000000400d0020                _stext = .
                0x00000000400d0020                _text_start = ABSOLUTE (.)
 *libnet80211.a:(SORT_BY_ALIGNMENT(.wifi0iram) SORT_BY_ALIGNMENT(.wifi0iram.*) SORT_BY_ALIGNMENT(.wifislpiram) SORT_BY_ALIGNMENT(.wifislpiram.*))
 *libpp.a:(SORT_BY_ALIGNMENT(.wifi0iram) SORT_BY_ALIGNMENT(.wifi0iram.*) SORT_BY_ALIGNMENT(.wifislpiram) SORT_BY_ALIGNMENT(.wifislpiram.*))
 *libnet80211.a:(SORT_BY_ALIGNMENT(.wifirxiram) SORT_BY_ALIGNMENT(.wifirxiram.*) SORT_BY_ALIGNMENT(.wifislprxiram) SORT_BY_ALIGNMENT(.wifislprxiram.*))
 *libpp.a:(SORT_BY_ALIGNMENT(.wifirxiram) SORT_BY_ALIGNMENT(.wifirxiram.*) SORT_BY_ALIGNMENT(.wifislprxiram) SORT_BY_ALIGNMENT(.wifislprxiram.*))
 *(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .literal.main  0x00000000400d0020       0x28 app/libapp.a(main.c.obj)
                                         0x3c (size before relaxing)
 .literal.__printk_hook_install
                0x00000000400d0048        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.z_thread_entry
                0x00000000400d004c        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
                                          0x8 (size before relaxing)
 .literal.chunk_field
                0x00000000400d004c        0x4 zephyr/libzephyr.a(heap.c.obj)
 .literal.chunk_set
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.chunk_size
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.set_chunk_used
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.set_chunk_size
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.mem_to_chunkid
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.bucket_idx
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.merge_chunks
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x14 (size before relaxing)
 .literal.split_chunks
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x18 (size before relaxing)
 .literal.free_list_remove_bidx
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x10 (size before relaxing)
 .literal.free_list_remove
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x10 (size before relaxing)
 .literal.alloc_chunk
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x10 (size before relaxing)
 .literal.free_list_add
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x24 (size before relaxing)
 .literal.free_chunk
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x30 (size before relaxing)
 .literal.sys_heap_free
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0xc (size before relaxing)
 .literal.sys_heap_alloc
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x18 (size before relaxing)
 .literal.sys_heap_aligned_alloc
                0x00000000400d0050        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x28 (size before relaxing)
 .literal.sys_heap_init
                0x00000000400d0050        0x4 zephyr/libzephyr.a(heap.c.obj)
                                         0x2c (size before relaxing)
 .literal.pinmux_set
                0x00000000400d0054        0x8 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .literal.pinmux_get
                0x00000000400d005c        0x0 zephyr/libzephyr.a(pinmux_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.pinmux_input
                0x00000000400d005c        0x8 zephyr/libzephyr.a(pinmux_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.pinmux_pullup
                0x00000000400d0064        0x8 zephyr/libzephyr.a(pinmux_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.i2c_hal_master_handle_tx_event
                0x00000000400d006c        0x0 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.i2c_hal_master_handle_rx_event
                0x00000000400d006c        0x0 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.i2c_hal_txfifo_rst
                0x00000000400d006c        0x8 zephyr/libzephyr.a(i2c_hal.c.obj)
 .literal.i2c_hal_rxfifo_rst
                0x00000000400d0074        0x8 zephyr/libzephyr.a(i2c_hal.c.obj)
 .literal.i2c_hal_set_scl_timing
                0x00000000400d007c        0x4 zephyr/libzephyr.a(i2c_hal.c.obj)
 .literal.i2c_hal_set_tout
                0x00000000400d0080        0x8 zephyr/libzephyr.a(i2c_hal.c.obj)
 .literal.i2c_hal_set_stop_timing
                0x00000000400d0088        0x0 zephyr/libzephyr.a(i2c_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.i2c_hal_get_tout
                0x00000000400d0088        0x0 zephyr/libzephyr.a(i2c_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.i2c_hal_set_bus_timing
                0x00000000400d0088        0x8 zephyr/libzephyr.a(i2c_hal.c.obj)
                                         0x10 (size before relaxing)
 .literal.i2c_hal_master_init
                0x00000000400d0090        0x0 zephyr/libzephyr.a(i2c_hal.c.obj)
                                         0x10 (size before relaxing)
 .literal.uart_hal_set_sclk
                0x00000000400d0090        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_baudrate
                0x00000000400d0094        0x8 zephyr/libzephyr.a(uart_hal.c.obj)
                                         0x10 (size before relaxing)
 .literal.uart_hal_set_hw_flow_ctrl
                0x00000000400d009c       0x14 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_txfifo_empty_thr
                0x00000000400d00b0        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_rx_timeout
                0x00000000400d00b4        0xc zephyr/libzephyr.a(uart_hal.c.obj)
                                         0x10 (size before relaxing)
 .literal.uart_hal_rxfifo_rst
                0x00000000400d00c0       0x14 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .literal.uart_hal_write_txfifo
                0x00000000400d00d4        0xc zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                         0x14 (size before relaxing)
 .literal.uart_hal_read_rxfifo
                0x00000000400d00e0        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                         0x14 (size before relaxing)
 .literal.rtc_clk_cpu_freq_to_pll_mhz
                0x00000000400d00e0       0x30 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x3c (size before relaxing)
 .literal.rtc_clk_bbpll_disable
                0x00000000400d0110       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_enable_common$constprop$5
                0x00000000400d0120       0x14 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_enable
                0x00000000400d0134        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_8m_enable
                0x00000000400d013c        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_8m_enabled
                0x00000000400d0148        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_8md256_enabled
                0x00000000400d0148        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_slow_freq_set
                0x00000000400d0148        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0xc (size before relaxing)
 .literal.rtc_clk_slow_freq_get
                0x00000000400d014c        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_fast_freq_set
                0x00000000400d014c        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_fast_freq_get
                0x00000000400d0154        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_bbpll_configure
                0x00000000400d0154       0x20 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x64 (size before relaxing)
 .literal.rtc_clk_xtal_freq_get
                0x00000000400d0174        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_mhz_to_config
                0x00000000400d017c        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_cpu_freq_get_config
                0x00000000400d017c        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x20 (size before relaxing)
 .literal.rtc_clk_xtal_freq_update
                0x00000000400d0184        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_clk_apb_freq_update
                0x00000000400d0188        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_cpu_freq_to_xtal
                0x00000000400d0188        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x2c (size before relaxing)
 .literal.rtc_clk_cpu_freq_set_config
                0x00000000400d018c        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x68 (size before relaxing)
 .literal.rtc_clk_apb_freq_get
                0x00000000400d0198        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x14 (size before relaxing)
 .literal.rtc_clk_cal_internal
                0x00000000400d01a4       0x30 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x54 (size before relaxing)
 .literal.rtc_clk_cal_ratio
                0x00000000400d01d4        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_clk_wait_for_slow_cycle
                0x00000000400d01d4        0x4 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x1c (size before relaxing)
 .literal.rtc_clk_xtal_freq_estimate
                0x00000000400d01d8       0x1c zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                         0x40 (size before relaxing)
 .literal.rtc_clk_init
                0x00000000400d01f4       0x30 zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                         0x9c (size before relaxing)
 .literal.periph_ll_get_rst_en_mask
                0x00000000400d0224       0x20 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x3c (size before relaxing)
 .literal.periph_ll_get_clk_en_reg
                0x00000000400d0244       0x10 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .literal.periph_ll_get_rst_en_reg
                0x00000000400d0254        0xc zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x10 (size before relaxing)
 .literal.periph_module_enable
                0x00000000400d0260        0xc zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x18 (size before relaxing)
 .literal.periph_module_disable
                0x00000000400d026c        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x18 (size before relaxing)
 .literal.interrupt_controller_hal_desc_type
                0x00000000400d026c        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.interrupt_controller_hal_desc_level
                0x00000000400d026c        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.interrupt_controller_hal_desc_flags
                0x00000000400d026c        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.interrupt_controller_hal_desc_table
                0x00000000400d026c        0x4 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .literal.z_esp_aligned_alloc$constprop$2
                0x00000000400d0270        0x4 zephyr/libzephyr.a(heap_caps.c.obj)
                                         0x10 (size before relaxing)
 .literal.k_malloc
                0x00000000400d0274        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
                                          0x4 (size before relaxing)
 .literal.arch_irq_connect_dynamic
                0x00000000400d0274        0x4 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .literal.abort
                0x00000000400d0278        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
                                          0xc (size before relaxing)
 .literal.__stdout_hook_install
                0x00000000400d027c        0x4 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .literal.z_impl_gpio_pin_configure$constprop$2
                0x00000000400d0280        0x0 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
                                          0x4 (size before relaxing)
 .literal.board_esp_wrover_kit_init
                0x00000000400d0280        0x4 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
                                         0x28 (size before relaxing)
 .literal.esp_intr_lock
                0x00000000400d0284        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_unlock
                0x00000000400d0288        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.find_desc_for_int
                0x00000000400d0288        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.default_intr_handler
                0x00000000400d028c        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.is_vect_desc_usable
                0x00000000400d0290        0x8 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x14 (size before relaxing)
 .literal.get_desc_for_int
                0x00000000400d0298        0x8 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x1c (size before relaxing)
 .literal.set_interrupt_handler
                0x00000000400d02a0        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_intr_initialize
                0x00000000400d02a0        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_intr_alloc_intrstatus
                0x00000000400d02a0       0x20 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x88 (size before relaxing)
 .literal.esp_intr_alloc
                0x00000000400d02c0        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.clock_control_esp32_get_status
                0x00000000400d02c0        0x4 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x14 (size before relaxing)
 .literal.clock_control_esp32_get_rate
                0x00000000400d02c4        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.clock_control_esp32_off
                0x00000000400d02c4        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.clock_control_esp32_on
                0x00000000400d02c4        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.clock_control_esp32_init
                0x00000000400d02c4       0x18 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x48 (size before relaxing)
 .literal.uart_console_init
                0x00000000400d02dc        0xc zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x18 (size before relaxing)
 .literal.rtcio_ll_set_drive_capability
                0x00000000400d02e8        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_pin_interrupt_configure
                0x00000000400d02e8        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x20 (size before relaxing)
 .literal.gpio_esp32_init
                0x00000000400d02f0        0xc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x14 (size before relaxing)
 .literal.gpio_esp32_config
                0x00000000400d02fc        0xc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x1c (size before relaxing)
 .literal.i2c_ll_write_txfifo
                0x00000000400d0308        0xc zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .literal.i2c_esp32_configure
                0x00000000400d0314        0x0 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x1c (size before relaxing)
 .literal.clock_control_on
                0x00000000400d0314        0x0 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.i2c_esp32_config_pin
                0x00000000400d0314        0x8 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x24 (size before relaxing)
 .literal.i2c_esp32_recover
                0x00000000400d031c        0x4 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x14 (size before relaxing)
 .literal.uart_esp32_config_get
                0x00000000400d0320        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x10 (size before relaxing)
 .literal.uart_esp32_poll_out
                0x00000000400d0320        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.uart_esp32_poll_in
                0x00000000400d0320        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.uart_esp32_configure
                0x00000000400d0320        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x68 (size before relaxing)
 .literal.uart_esp32_init
                0x00000000400d0328        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .text.main     0x00000000400d0328       0x5b app/libapp.a(main.c.obj)
                                         0x67 (size before relaxing)
                0x00000000400d0328                main
 *fill*         0x00000000400d0383        0x1 
 .text.__printk_hook_install
                0x00000000400d0384        0xa zephyr/libzephyr.a(printk.c.obj)
                0x00000000400d0384                __printk_hook_install
 *fill*         0x00000000400d038e        0x2 
 .text.z_thread_entry
                0x00000000400d0390       0x14 zephyr/libzephyr.a(thread_entry.c.obj)
                                         0x18 (size before relaxing)
                0x00000000400d0390                z_thread_entry
 .text.chunk_field
                0x00000000400d03a4       0x26 zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000400d03ca        0x2 
 .text.chunk_set
                0x00000000400d03cc       0x26 zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000400d03f2        0x2 
 .text.chunk_size
                0x00000000400d03f4       0x11 zephyr/libzephyr.a(heap.c.obj)
                                         0x15 (size before relaxing)
 *fill*         0x00000000400d0405        0x3 
 .text.set_chunk_used
                0x00000000400d0408       0x3f zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000400d0447        0x1 
 .text.set_chunk_size
                0x00000000400d0448       0x14 zephyr/libzephyr.a(heap.c.obj)
 .text.mem_to_chunkid
                0x00000000400d045c       0x1b zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000400d0477        0x1 
 .text.bucket_idx
                0x00000000400d0478       0x24 zephyr/libzephyr.a(heap.c.obj)
 .text.merge_chunks
                0x00000000400d049c       0x32 zephyr/libzephyr.a(heap.c.obj)
                                         0x42 (size before relaxing)
 *fill*         0x00000000400d04ce        0x2 
 .text.split_chunks
                0x00000000400d04d0       0x46 zephyr/libzephyr.a(heap.c.obj)
                                         0x56 (size before relaxing)
 *fill*         0x00000000400d0516        0x2 
 .text.free_list_remove_bidx
                0x00000000400d0518       0x5a zephyr/libzephyr.a(heap.c.obj)
                                         0x66 (size before relaxing)
 *fill*         0x00000000400d0572        0x2 
 .text.free_list_remove
                0x00000000400d0574       0x28 zephyr/libzephyr.a(heap.c.obj)
                                         0x30 (size before relaxing)
 .text.alloc_chunk
                0x00000000400d059c       0x7a zephyr/libzephyr.a(heap.c.obj)
                                         0x82 (size before relaxing)
 *fill*         0x00000000400d0616        0x2 
 .text.free_list_add
                0x00000000400d0618       0x8a zephyr/libzephyr.a(heap.c.obj)
                                         0xa2 (size before relaxing)
 *fill*         0x00000000400d06a2        0x2 
 .text.free_chunk
                0x00000000400d06a4       0x78 zephyr/libzephyr.a(heap.c.obj)
                                         0xa0 (size before relaxing)
 .text.sys_heap_free
                0x00000000400d071c       0x24 zephyr/libzephyr.a(heap.c.obj)
                                         0x2c (size before relaxing)
                0x00000000400d071c                sys_heap_free
 .text.sys_heap_alloc
                0x00000000400d0740       0x72 zephyr/libzephyr.a(heap.c.obj)
                                         0x7e (size before relaxing)
                0x00000000400d0740                sys_heap_alloc
 *fill*         0x00000000400d07b2        0x2 
 .text.sys_heap_aligned_alloc
                0x00000000400d07b4       0xea zephyr/libzephyr.a(heap.c.obj)
                                        0x102 (size before relaxing)
                0x00000000400d07b4                sys_heap_aligned_alloc
 *fill*         0x00000000400d089e        0x2 
 .text.sys_heap_init
                0x00000000400d08a0       0xa8 zephyr/libzephyr.a(heap.c.obj)
                                         0xc4 (size before relaxing)
                0x00000000400d08a0                sys_heap_init
 .text.pinmux_set
                0x00000000400d0948       0x34 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .text.pinmux_get
                0x00000000400d097c       0x22 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 *fill*         0x00000000400d099e        0x2 
 .text.pinmux_input
                0x00000000400d09a0       0x7a zephyr/libzephyr.a(pinmux_esp32.c.obj)
 *fill*         0x00000000400d0a1a        0x2 
 .text.pinmux_pullup
                0x00000000400d0a1c      0x11c zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .text.i2c_hal_master_handle_tx_event
                0x00000000400d0b38       0x3b zephyr/libzephyr.a(i2c_hal_iram.c.obj)
                0x00000000400d0b38                i2c_hal_master_handle_tx_event
 *fill*         0x00000000400d0b73        0x1 
 .text.i2c_hal_master_handle_rx_event
                0x00000000400d0b74       0x3b zephyr/libzephyr.a(i2c_hal_iram.c.obj)
                0x00000000400d0b74                i2c_hal_master_handle_rx_event
 *fill*         0x00000000400d0baf        0x1 
 .text.i2c_hal_txfifo_rst
                0x00000000400d0bb0       0x27 zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d0bb0                i2c_hal_txfifo_rst
 *fill*         0x00000000400d0bd7        0x1 
 .text.i2c_hal_rxfifo_rst
                0x00000000400d0bd8       0x27 zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d0bd8                i2c_hal_rxfifo_rst
 *fill*         0x00000000400d0bff        0x1 
 .text.i2c_hal_set_scl_timing
                0x00000000400d0c00       0x30 zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d0c00                i2c_hal_set_scl_timing
 .text.i2c_hal_set_tout
                0x00000000400d0c30       0x20 zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d0c30                i2c_hal_set_tout
 .text.i2c_hal_set_stop_timing
                0x00000000400d0c50       0x37 zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d0c50                i2c_hal_set_stop_timing
 *fill*         0x00000000400d0c87        0x1 
 .text.i2c_hal_get_tout
                0x00000000400d0c88       0x14 zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d0c88                i2c_hal_get_tout
 .text.i2c_hal_set_bus_timing
                0x00000000400d0c9c       0xd1 zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d0c9c                i2c_hal_set_bus_timing
 *fill*         0x00000000400d0d6d        0x3 
 .text.i2c_hal_master_init
                0x00000000400d0d70       0xbd zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d0d70                i2c_hal_master_init
 *fill*         0x00000000400d0e2d        0x3 
 .text.uart_hal_set_sclk
                0x00000000400d0e30       0x24 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d0e30                uart_hal_set_sclk
 .text.uart_hal_set_baudrate
                0x00000000400d0e54       0x4e zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d0e54                uart_hal_set_baudrate
 *fill*         0x00000000400d0ea2        0x2 
 .text.uart_hal_set_hw_flow_ctrl
                0x00000000400d0ea4       0x62 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d0ea4                uart_hal_set_hw_flow_ctrl
 *fill*         0x00000000400d0f06        0x2 
 .text.uart_hal_set_txfifo_empty_thr
                0x00000000400d0f08       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d0f08                uart_hal_set_txfifo_empty_thr
 .text.uart_hal_set_rx_timeout
                0x00000000400d0f28       0x62 zephyr/libzephyr.a(uart_hal.c.obj)
                                         0x66 (size before relaxing)
                0x00000000400d0f28                uart_hal_set_rx_timeout
 *fill*         0x00000000400d0f8a        0x2 
 .text.uart_hal_rxfifo_rst
                0x00000000400d0f8c       0x57 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x00000000400d0f8c                uart_hal_rxfifo_rst
 *fill*         0x00000000400d0fe3        0x1 
 .text.uart_hal_write_txfifo
                0x00000000400d0fe4       0x5a zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x00000000400d0fe4                uart_hal_write_txfifo
 *fill*         0x00000000400d103e        0x2 
 .text.uart_hal_read_rxfifo
                0x00000000400d1040       0xba zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x00000000400d1040                uart_hal_read_rxfifo
 *fill*         0x00000000400d10fa        0x2 
 .text.rtc_clk_cpu_freq_to_pll_mhz
                0x00000000400d10fc       0x99 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0xa1 (size before relaxing)
 *fill*         0x00000000400d1195        0x3 
 .text.rtc_clk_bbpll_disable
                0x00000000400d1198       0x3a zephyr/libzephyr.a(rtc_clk.c.obj)
 *fill*         0x00000000400d11d2        0x2 
 .text.rtc_clk_32k_enable_common$constprop$5
                0x00000000400d11d4       0x72 zephyr/libzephyr.a(rtc_clk.c.obj)
 *fill*         0x00000000400d1246        0x2 
 .text.rtc_clk_32k_enable
                0x00000000400d1248       0x39 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x3d (size before relaxing)
                0x00000000400d1248                rtc_clk_32k_enable
 *fill*         0x00000000400d1281        0x3 
 .text.rtc_clk_8m_enable
                0x00000000400d1284       0x81 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d1284                rtc_clk_8m_enable
 *fill*         0x00000000400d1305        0x3 
 .text.rtc_clk_8m_enabled
                0x00000000400d1308       0x15 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d1308                rtc_clk_8m_enabled
 *fill*         0x00000000400d131d        0x3 
 .text.rtc_clk_8md256_enabled
                0x00000000400d1320       0x15 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d1320                rtc_clk_8md256_enabled
 *fill*         0x00000000400d1335        0x3 
 .text.rtc_clk_slow_freq_set
                0x00000000400d1338       0x44 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d1338                rtc_clk_slow_freq_set
 .text.rtc_clk_slow_freq_get
                0x00000000400d137c       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d137c                rtc_clk_slow_freq_get
 .text.rtc_clk_fast_freq_set
                0x00000000400d138c       0x2c zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d138c                rtc_clk_fast_freq_set
 .text.rtc_clk_fast_freq_get
                0x00000000400d13b8       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d13b8                rtc_clk_fast_freq_get
 .text.rtc_clk_bbpll_configure
                0x00000000400d13c8      0x194 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d13c8                rtc_clk_bbpll_configure
 .text.rtc_clk_xtal_freq_get
                0x00000000400d155c       0x26 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d155c                rtc_get_xtal
                0x00000000400d155c                rtc_clk_xtal_freq_get
 *fill*         0x00000000400d1582        0x2 
 .text.rtc_clk_cpu_freq_mhz_to_config
                0x00000000400d1584       0x54 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x58 (size before relaxing)
                0x00000000400d1584                rtc_clk_cpu_freq_mhz_to_config
 .text.rtc_clk_cpu_freq_get_config
                0x00000000400d15d8       0x80 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x88 (size before relaxing)
                0x00000000400d15d8                rtc_clk_cpu_freq_get_config
 .text.rtc_clk_xtal_freq_update
                0x00000000400d1658       0x29 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d1658                rtc_clk_xtal_freq_update
 *fill*         0x00000000400d1681        0x3 
 .text.rtc_clk_apb_freq_update
                0x00000000400d1684       0x19 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d1684                rtc_clk_apb_freq_update
 *fill*         0x00000000400d169d        0x3 
 .text.rtc_clk_cpu_freq_to_xtal
                0x00000000400d16a0       0x71 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x75 (size before relaxing)
                0x00000000400d16a0                rtc_clk_cpu_freq_to_xtal
 *fill*         0x00000000400d1711        0x3 
 .text.rtc_clk_cpu_freq_set_config
                0x00000000400d1714      0x116 zephyr/libzephyr.a(rtc_clk.c.obj)
                                        0x12e (size before relaxing)
                0x00000000400d1714                rtc_clk_cpu_freq_set_config
 *fill*         0x00000000400d182a        0x2 
 .text.rtc_clk_apb_freq_get
                0x00000000400d182c       0x2a zephyr/libzephyr.a(rtc_clk.c.obj)
                0x00000000400d182c                rtc_clk_apb_freq_get
 *fill*         0x00000000400d1856        0x2 
 .text.rtc_clk_cal_internal
                0x00000000400d1858      0x180 zephyr/libzephyr.a(rtc_time.c.obj)
                                        0x184 (size before relaxing)
 .text.rtc_clk_cal_ratio
                0x00000000400d19d8       0x20 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x24 (size before relaxing)
                0x00000000400d19d8                rtc_clk_cal_ratio
 .text.rtc_clk_wait_for_slow_cycle
                0x00000000400d19f8       0x68 zephyr/libzephyr.a(rtc_time.c.obj)
                0x00000000400d19f8                rtc_clk_wait_for_slow_cycle
 .text.rtc_clk_xtal_freq_estimate
                0x00000000400d1a60       0x8b zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                         0x93 (size before relaxing)
 *fill*         0x00000000400d1aeb        0x1 
 .text.rtc_clk_init
                0x00000000400d1aec      0x1b6 zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                        0x1d6 (size before relaxing)
                0x00000000400d1aec                rtc_clk_init
 *fill*         0x00000000400d1ca2        0x2 
 .text.periph_ll_get_rst_en_mask
                0x00000000400d1ca4       0xba zephyr/libzephyr.a(periph_ctrl.c.obj)
 *fill*         0x00000000400d1d5e        0x2 
 .text.periph_ll_get_clk_en_reg
                0x00000000400d1d60       0x2e zephyr/libzephyr.a(periph_ctrl.c.obj)
 *fill*         0x00000000400d1d8e        0x2 
 .text.periph_ll_get_rst_en_reg
                0x00000000400d1d90       0x2e zephyr/libzephyr.a(periph_ctrl.c.obj)
 *fill*         0x00000000400d1dbe        0x2 
 .text.periph_module_enable
                0x00000000400d1dc0       0x69 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x75 (size before relaxing)
                0x00000000400d1dc0                periph_module_enable
 *fill*         0x00000000400d1e29        0x3 
 .text.periph_module_disable
                0x00000000400d1e2c       0x68 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x74 (size before relaxing)
                0x00000000400d1e2c                periph_module_disable
 .text.interrupt_controller_hal_desc_type
                0x00000000400d1e94       0x12 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                0x00000000400d1e94                interrupt_controller_hal_desc_type
 *fill*         0x00000000400d1ea6        0x2 
 .text.interrupt_controller_hal_desc_level
                0x00000000400d1ea8       0x12 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                0x00000000400d1ea8                interrupt_controller_hal_desc_level
 *fill*         0x00000000400d1eba        0x2 
 .text.interrupt_controller_hal_desc_flags
                0x00000000400d1ebc       0x17 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                0x00000000400d1ebc                interrupt_controller_hal_desc_flags
 *fill*         0x00000000400d1ed3        0x1 
 .text.interrupt_controller_hal_desc_table
                0x00000000400d1ed4        0x8 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
                0x00000000400d1ed4                interrupt_controller_hal_desc_table
 .text.z_esp_aligned_alloc$constprop$2
                0x00000000400d1edc       0x29 zephyr/libzephyr.a(heap_caps.c.obj)
 *fill*         0x00000000400d1f05        0x3 
 .text.k_malloc
                0x00000000400d1f08        0xc zephyr/libzephyr.a(heap_caps.c.obj)
                                         0x10 (size before relaxing)
                0x00000000400d1f08                k_malloc
 .text.arch_irq_connect_dynamic
                0x00000000400d1f14       0x11 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                0x00000000400d1f14                arch_irq_connect_dynamic
 *fill*         0x00000000400d1f25        0x3 
 .text.abort    0x00000000400d1f28       0x14 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
                                         0x18 (size before relaxing)
                0x00000000400d1f28                abort
 .text.__stdout_hook_install
                0x00000000400d1f3c        0xa zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
                0x00000000400d1f3c                __stdout_hook_install
 *fill*         0x00000000400d1f46        0x2 
 .text.z_impl_gpio_pin_configure$constprop$2
                0x00000000400d1f48       0x26 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 *fill*         0x00000000400d1f6e        0x2 
 .text.board_esp_wrover_kit_init
                0x00000000400d1f70       0x4a zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
                                         0x66 (size before relaxing)
 *fill*         0x00000000400d1fba        0x2 
 .text.esp_intr_lock
                0x00000000400d1fbc        0xd zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000400d1fc9        0x3 
 .text.esp_intr_unlock
                0x00000000400d1fcc       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.find_desc_for_int
                0x00000000400d1fdc       0x23 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000400d1fff        0x1 
 .text.default_intr_handler
                0x00000000400d2000       0x13 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x16 (size before relaxing)
                0x00000000400d2000                default_intr_handler
 *fill*         0x00000000400d2013        0x1 
 .text.is_vect_desc_usable
                0x00000000400d2014       0x90 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x98 (size before relaxing)
 .text.get_desc_for_int
                0x00000000400d20a4       0x91 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x99 (size before relaxing)
 *fill*         0x00000000400d2135        0x3 
 .text.set_interrupt_handler
                0x00000000400d2138       0x42 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x46 (size before relaxing)
 *fill*         0x00000000400d217a        0x2 
 .text.esp_intr_initialize
                0x00000000400d217c       0x1a zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                0x00000000400d217c                esp_intr_initialize
 *fill*         0x00000000400d2196        0x2 
 .text.esp_intr_alloc_intrstatus
                0x00000000400d2198      0x375 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0x39d (size before relaxing)
                0x00000000400d2198                esp_intr_alloc_intrstatus
 *fill*         0x00000000400d250d        0x3 
 .text.esp_intr_alloc
                0x00000000400d2510       0x18 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x1c (size before relaxing)
                0x00000000400d2510                esp_intr_alloc
 .text.clock_control_esp32_get_status
                0x00000000400d2528       0x55 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *fill*         0x00000000400d257d        0x3 
 .text.clock_control_esp32_get_rate
                0x00000000400d2580       0x10 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x14 (size before relaxing)
 .text.clock_control_esp32_off
                0x00000000400d2590        0xc zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x10 (size before relaxing)
 .text.clock_control_esp32_on
                0x00000000400d259c        0xc zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x10 (size before relaxing)
 .text.clock_control_esp32_init
                0x00000000400d25a8       0xd4 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0xf4 (size before relaxing)
 .text.uart_console_init
                0x00000000400d267c       0x24 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x2c (size before relaxing)
 .text.rtcio_ll_set_drive_capability
                0x00000000400d26a0       0x3f zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d26df        0x1 
 .text.gpio_esp32_pin_interrupt_configure
                0x00000000400d26e0       0xc5 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d27a5        0x3 
 .text.gpio_esp32_init
                0x00000000400d27a8       0x46 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d27ee        0x2 
 .text.gpio_esp32_config
                0x00000000400d27f0      0x204 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.i2c_ll_write_txfifo
                0x00000000400d29f4       0x25 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 *fill*         0x00000000400d2a19        0x3 
 .text.i2c_esp32_configure
                0x00000000400d2a1c       0x55 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x65 (size before relaxing)
 *fill*         0x00000000400d2a71        0x3 
 .text.clock_control_on
                0x00000000400d2a74       0x1e zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x22 (size before relaxing)
 *fill*         0x00000000400d2a92        0x2 
 .text.i2c_esp32_config_pin
                0x00000000400d2a94       0x7b zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x87 (size before relaxing)
 *fill*         0x00000000400d2b0f        0x1 
 .text.i2c_esp32_recover
                0x00000000400d2b10       0x22 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                         0x2a (size before relaxing)
 *fill*         0x00000000400d2b32        0x2 
 .text.uart_esp32_config_get
                0x00000000400d2b34       0x7f zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x83 (size before relaxing)
 *fill*         0x00000000400d2bb3        0x1 
 .text.uart_esp32_poll_out
                0x00000000400d2bb4       0x33 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *fill*         0x00000000400d2be7        0x1 
 .text.uart_esp32_poll_in
                0x00000000400d2be8       0x9a zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *fill*         0x00000000400d2c82        0x2 
 .text.uart_esp32_configure
                0x00000000400d2c84      0x1b2 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                        0x1e6 (size before relaxing)
 *fill*         0x00000000400d2e36        0x2 
 .text.uart_esp32_init
                0x00000000400d2e38       0x11 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *fill*         0x00000000400d2e49        0x3 
 .text._OffsetAbsSyms
                0x00000000400d2e4c        0x5 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
                0x00000000400d2e4c                _OffsetAbsSyms
 *fill*         0x00000000400d2e51        0x0 
 *fill*         0x00000000400d2e51        0x0 
 *fill*         0x00000000400d2e51        0x0 
 *fill*         0x00000000400d2e51        0x0 
 *fill*         0x00000000400d2e51        0x0 
 *fill*         0x00000000400d2e51        0x0 
 *fill*         0x00000000400d2e51        0x0 
 *fill*         0x00000000400d2e51        0x0 
 *fill*         0x00000000400d2e51        0x0 
 *fill*         0x00000000400d2e51        0x0 
 *fill*         0x00000000400d2e51        0x0 
 *fill*         0x00000000400d2e51        0x0 
 *fill*         0x00000000400d2e51        0x0 
 *fill*         0x00000000400d2e51        0x0 
 *fill*         0x00000000400d2e51        0x3 
 .text._ConfigAbsSyms
                0x00000000400d2e54        0x5 zephyr/libzephyr.a(configs.c.obj)
                0x00000000400d2e54                _ConfigAbsSyms
 *fill*         0x00000000400d2e59        0x3 
 .text.sys_trace_idle
                0x00000000400d2e5c        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
                0x00000000400d2e5c                sys_trace_idle
 *fill*         0x00000000400d2e61        0x0 
 *fill*         0x00000000400d2e61        0x3 
 .text.pinmux_initialize
                0x00000000400d2e64        0x7 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 *fill*         0x00000000400d2e6b        0x0 
 *fill*         0x00000000400d2e6b        0x1 
 .text.i2c_ll_master_get_event
                0x00000000400d2e6c       0x55 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 *fill*         0x00000000400d2ec1        0x0 
 *fill*         0x00000000400d2ec1        0x0 
 *fill*         0x00000000400d2ec1        0x0 
 *fill*         0x00000000400d2ec1        0x0 
 *fill*         0x00000000400d2ec1        0x3 
 .text.i2c_hal_set_data_mode
                0x00000000400d2ec4       0x39 zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d2ec4                i2c_hal_set_data_mode
 *fill*         0x00000000400d2efd        0x3 
 .text.i2c_hal_set_filter
                0x00000000400d2f00       0x73 zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d2f00                i2c_hal_set_filter
 *fill*         0x00000000400d2f73        0x1 
 .text.i2c_hal_get_filter
                0x00000000400d2f74       0x13 zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d2f74                i2c_hal_get_filter
 *fill*         0x00000000400d2f87        0x1 
 .text.i2c_hal_clr_intsts_mask
                0x00000000400d2f88        0xc zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d2f88                i2c_hal_clr_intsts_mask
 .text.i2c_hal_disable_intr_mask
                0x00000000400d2f94       0x19 zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d2f94                i2c_hal_disable_intr_mask
 *fill*         0x00000000400d2fad        0x0 
 *fill*         0x00000000400d2fad        0x3 
 .text.i2c_hal_set_start_timing
                0x00000000400d2fb0       0x34 zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d2fb0                i2c_hal_set_start_timing
 .text.i2c_hal_set_sda_timing
                0x00000000400d2fe4       0x30 zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d2fe4                i2c_hal_set_sda_timing
 .text.i2c_hal_is_bus_busy
                0x00000000400d3014        0xf zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d3014                i2c_hal_is_bus_busy
 *fill*         0x00000000400d3023        0x1 
 .text.i2c_hal_get_sda_timing
                0x00000000400d3024       0x1b zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d3024                i2c_hal_get_sda_timing
 *fill*         0x00000000400d303f        0x1 
 .text.i2c_hal_get_start_timing
                0x00000000400d3040       0x1d zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d3040                i2c_hal_get_start_timing
 *fill*         0x00000000400d305d        0x3 
 .text.i2c_hal_get_stop_timing
                0x00000000400d3060       0x1d zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d3060                i2c_hal_get_stop_timing
 *fill*         0x00000000400d307d        0x3 
 .text.i2c_hal_get_scl_timing
                0x00000000400d3080       0x1b zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d3080                i2c_hal_get_scl_timing
 *fill*         0x00000000400d309b        0x0 
 *fill*         0x00000000400d309b        0x0 
 *fill*         0x00000000400d309b        0x1 
 .text.i2c_hal_update_config
                0x00000000400d309c        0x5 zephyr/libzephyr.a(i2c_hal.c.obj)
                0x00000000400d309c                i2c_hal_update_config
 *fill*         0x00000000400d30a1        0x0 
 *fill*         0x00000000400d30a1        0x3 
 .text.uart_hal_set_stop_bits
                0x00000000400d30a4       0x55 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d30a4                uart_hal_set_stop_bits
 *fill*         0x00000000400d30f9        0x3 
 .text.uart_hal_get_stop_bits
                0x00000000400d30fc       0x28 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d30fc                uart_hal_get_stop_bits
 .text.uart_hal_set_data_bit_num
                0x00000000400d3124       0x1f zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d3124                uart_hal_set_data_bit_num
 *fill*         0x00000000400d3143        0x1 
 .text.uart_hal_get_data_bit_num
                0x00000000400d3144       0x11 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d3144                uart_hal_get_data_bit_num
 *fill*         0x00000000400d3155        0x3 
 .text.uart_hal_set_parity
                0x00000000400d3158       0x36 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d3158                uart_hal_set_parity
 *fill*         0x00000000400d318e        0x2 
 .text.uart_hal_get_parity
                0x00000000400d3190       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d3190                uart_hal_get_parity
 *fill*         0x00000000400d31b0        0x0 
 .text.uart_hal_get_hw_flow_ctrl
                0x00000000400d31b0       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d31b0                uart_hal_get_hw_flow_ctrl
 .text.uart_hal_set_rxfifo_full_thr
                0x00000000400d31d0       0x1d zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d31d0                uart_hal_set_rxfifo_full_thr
 *fill*         0x00000000400d31ed        0x3 
 .text.uart_hal_get_symb_len
                0x00000000400d31f0       0x5e zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000400d31f0                uart_hal_get_symb_len
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x0 
 *fill*         0x00000000400d324e        0x2 
 .text._stdout_hook_default
                0x00000000400d3250        0x7 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 *fill*         0x00000000400d3257        0x0 
 *fill*         0x00000000400d3257        0x1 
 .text.gpio_pin_set$constprop$1
                0x00000000400d3258       0x28 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 *fill*         0x00000000400d3280        0x0 
 *fill*         0x00000000400d3280        0x0 
 *fill*         0x00000000400d3280        0x0 
 *fill*         0x00000000400d3280        0x0 
 *fill*         0x00000000400d3280        0x0 
 *fill*         0x00000000400d3280        0x0 
 *fill*         0x00000000400d3280        0x0 
 *fill*         0x00000000400d3280        0x0 
 *fill*         0x00000000400d3280        0x0 
 .text.clock_control_esp32_async_on
                0x00000000400d3280        0x8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *fill*         0x00000000400d3288        0x0 
 *fill*         0x00000000400d3288        0x0 
 .text.gpio_esp32_port_get_raw
                0x00000000400d3288       0x23 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d32ab        0x1 
 .text.gpio_esp32_port_set_masked_raw
                0x00000000400d32ac       0x49 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d32f5        0x3 
 .text.gpio_esp32_port_set_bits_raw
                0x00000000400d32f8       0x21 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d3319        0x3 
 .text.gpio_esp32_port_clear_bits_raw
                0x00000000400d331c       0x21 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d333d        0x3 
 .text.gpio_esp32_port_toggle_bits
                0x00000000400d3340       0x3c zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d337c        0x0 
 .text.gpio_esp32_manage_callback
                0x00000000400d337c       0x5e zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d33da        0x0 
 *fill*         0x00000000400d33da        0x2 
 .text.gpio_esp32_get_pending_int
                0x00000000400d33dc       0x52 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000400d342e        0x0 
 *fill*         0x00000000400d342e        0x2 
 .text.z_impl_gpio_pin_configure
                0x00000000400d3430       0x25 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 *fill*         0x00000000400d3455        0x3 
 .text.gpio_pin_set
                0x00000000400d3458       0x2c zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 *fill*         0x00000000400d3484        0x0 
 *fill*         0x00000000400d3484        0x0 
 *fill*         0x00000000400d3484        0x0 
 *fill*         0x00000000400d3484        0x0 
 .text.z_impl_gpio_pin_configure
                0x00000000400d3484       0x25 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *fill*         0x00000000400d34a9        0x3 
 .text.uart_esp32_err_check
                0x00000000400d34ac       0x13 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *fill*         0x00000000400d34bf        0x0 
 *fill*         0x00000000400d34bf        0x0 
 *fill*         0x00000000400d34bf        0x0 
 *fill*         0x00000000400d34bf        0x0 
 *fill*         0x00000000400d34bf        0x0 
                0x00000000400d34c0                . = ALIGN (0x4)
 *fill*         0x00000000400d34bf        0x1 
                0x00000000400d34c0                _text_end = ABSOLUTE (.)
                0x00000000400d34c0                _etext = .
                0x0000000000000000                _flash_cache_start = ABSOLUTE (0x0)

.stab
 *(SORT_BY_ALIGNMENT(.stab))

.stabstr
 *(SORT_BY_ALIGNMENT(.stabstr))

.stab.excl
 *(SORT_BY_ALIGNMENT(.stab.excl))

.stab.exclstr
 *(SORT_BY_ALIGNMENT(.stab.exclstr))

.stab.index
 *(SORT_BY_ALIGNMENT(.stab.index))

.stab.indexstr
 *(SORT_BY_ALIGNMENT(.stab.indexstr))

.gnu.build.attributes
 *(SORT_BY_ALIGNMENT(.gnu.build.attributes) SORT_BY_ALIGNMENT(.gnu.build.attributes.*))

.comment        0x0000000000000000       0x25
 *(SORT_BY_ALIGNMENT(.comment))
 .comment       0x0000000000000000       0x25 zephyr/CMakeFiles/zephyr_pre1.dir/dev_handles.c.obj
                                         0x26 (size before relaxing)
 .comment       0x0000000000000025       0x26 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .comment       0x0000000000000025       0x26 app/libapp.a(main.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(printk.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(thread_entry.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(heap.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(configs.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(soc.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(loader.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(tracing_none.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(i2c_hal.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(uart_periph.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(uart_hal.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(gpio_periph.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(rtc_clk.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(rtc_time.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(clk.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/libzephyr.a(heap_caps.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/kernel/libkernel.a(device.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/kernel/libkernel.a(fatal.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/kernel/libkernel.a(init.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/kernel/libkernel.a(kheap.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/kernel/libkernel.a(thread.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/kernel/libkernel.a(idle.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/kernel/libkernel.a(sem.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/kernel/libkernel.a(sched.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/kernel/libkernel.a(timeout.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/kernel/libkernel.a(mempool.c.obj)
 .comment       0x0000000000000025       0x26 zephyr/kernel/libkernel.a(banner.c.obj)
 .comment       0x0000000000000025       0x26 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
 .comment       0x0000000000000025       0x26 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
 .comment       0x0000000000000025       0x26 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
 .comment       0x0000000000000025       0x26 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)
 .comment       0x0000000000000025       0x26 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug
 *(SORT_BY_ALIGNMENT(.debug))

.line
 *(SORT_BY_ALIGNMENT(.line))

.debug_srcinfo
 *(SORT_BY_ALIGNMENT(.debug_srcinfo))

.debug_sfnames
 *(SORT_BY_ALIGNMENT(.debug_sfnames))

.debug_aranges  0x0000000000000000     0x1400
 *(SORT_BY_ALIGNMENT(.debug_aranges))
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .debug_aranges
                0x0000000000000020       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_aranges
                0x0000000000000040       0x70 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
 .debug_aranges
                0x00000000000000b0       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .debug_aranges
                0x00000000000000d0       0x18 zephyr/CMakeFiles/zephyr_pre1.dir/dev_handles.c.obj
 .debug_aranges
                0x00000000000000e8       0x20 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_aranges
                0x0000000000000108       0x20 app/libapp.a(main.c.obj)
 .debug_aranges
                0x0000000000000128       0x68 zephyr/libzephyr.a(printk.c.obj)
 .debug_aranges
                0x0000000000000190       0x20 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_aranges
                0x00000000000001b0       0xb8 zephyr/libzephyr.a(heap.c.obj)
 .debug_aranges
                0x0000000000000268       0x30 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_aranges
                0x0000000000000298       0x20 zephyr/libzephyr.a(configs.c.obj)
 .debug_aranges
                0x00000000000002b8       0x40 zephyr/libzephyr.a(soc.c.obj)
 .debug_aranges
                0x00000000000002f8       0x20 zephyr/libzephyr.a(loader.c.obj)
 .debug_aranges
                0x0000000000000318       0x20 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_aranges
                0x0000000000000338       0x40 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .debug_aranges
                0x0000000000000378       0x38 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .debug_aranges
                0x00000000000003b0      0x138 zephyr/libzephyr.a(i2c_hal.c.obj)
 .debug_aranges
                0x00000000000004e8       0x18 zephyr/libzephyr.a(uart_periph.c.obj)
 .debug_aranges
                0x0000000000000500       0xf8 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_aranges
                0x00000000000005f8       0x40 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_aranges
                0x0000000000000638       0x18 zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_aranges
                0x0000000000000650       0x18 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_aranges
                0x0000000000000668      0x108 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_aranges
                0x0000000000000770       0x58 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_aranges
                0x00000000000007c8       0x28 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_aranges
                0x00000000000007f0       0x38 zephyr/libzephyr.a(clk.c.obj)
 .debug_aranges
                0x0000000000000828       0x68 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_aranges
                0x0000000000000890       0x30 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_aranges
                0x00000000000008c0       0x20 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_aranges
                0x00000000000008e0       0x30 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_aranges
                0x0000000000000910       0x28 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_aranges
                0x0000000000000938       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_aranges
                0x0000000000000960       0x30 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_aranges
                0x0000000000000990       0x78 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .debug_aranges
                0x0000000000000a08       0x38 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_aranges
                0x0000000000000a40       0x20 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
 .debug_aranges
                0x0000000000000a60       0x98 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .debug_aranges
                0x0000000000000af8       0x58 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .debug_aranges
                0x0000000000000b50       0x30 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .debug_aranges
                0x0000000000000b80       0xc0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_aranges
                0x0000000000000c40       0x48 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_aranges
                0x0000000000000c88       0x30 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_aranges
                0x0000000000000cb8       0x80 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_aranges
                0x0000000000000d38       0x80 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .debug_aranges
                0x0000000000000db8       0x50 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_aranges
                0x0000000000000e08       0x40 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_aranges
                0x0000000000000e48       0x58 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_aranges
                0x0000000000000ea0       0x58 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_aranges
                0x0000000000000ef8       0x48 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_aranges
                0x0000000000000f40       0x40 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_aranges
                0x0000000000000f80       0xb0 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_aranges
                0x0000000000001030       0x28 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_aranges
                0x0000000000001058       0x38 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_aranges
                0x0000000000001090      0x1f8 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_aranges
                0x0000000000001288       0x98 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_aranges
                0x0000000000001320       0x28 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_aranges
                0x0000000000001348       0x20 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_aranges
                0x0000000000001368       0x20 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
 .debug_aranges
                0x0000000000001388       0x20 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
 .debug_aranges
                0x00000000000013a8       0x20 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
 .debug_aranges
                0x00000000000013c8       0x20 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)
 .debug_aranges
                0x00000000000013e8       0x18 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_pubnames
 *(SORT_BY_ALIGNMENT(.debug_pubnames))

.debug_info     0x0000000000000000    0x8eedd
 *(SORT_BY_ALIGNMENT(.debug_info) SORT_BY_ALIGNMENT(.gnu.linkonce.wi.*))
 .debug_info    0x0000000000000000     0x1214 zephyr/CMakeFiles/zephyr_pre1.dir/dev_handles.c.obj
 .debug_info    0x0000000000001214     0x1107 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_info    0x000000000000231b     0x1a35 app/libapp.a(main.c.obj)
 .debug_info    0x0000000000003d50     0x13d8 zephyr/libzephyr.a(printk.c.obj)
 .debug_info    0x0000000000005128      0xf56 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_info    0x000000000000607e     0x3402 zephyr/libzephyr.a(heap.c.obj)
 .debug_info    0x0000000000009480     0x1047 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_info    0x000000000000a4c7       0x38 zephyr/libzephyr.a(configs.c.obj)
 .debug_info    0x000000000000a4ff     0x578c zephyr/libzephyr.a(soc.c.obj)
 .debug_info    0x000000000000fc8b      0xfd8 zephyr/libzephyr.a(loader.c.obj)
 .debug_info    0x0000000000010c63      0xe38 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_info    0x0000000000011a9b     0x61b6 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .debug_info    0x0000000000017c51       0x26 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .debug_info    0x0000000000017c77     0x1427 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .debug_info    0x000000000001909e     0x28ea zephyr/libzephyr.a(i2c_hal.c.obj)
 .debug_info    0x000000000001b988     0x152b zephyr/libzephyr.a(uart_periph.c.obj)
 .debug_info    0x000000000001ceb3     0x2e25 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_info    0x000000000001fcd8     0x1b34 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_info    0x000000000002180c      0x9e6 zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_info    0x00000000000221f2     0x3dad zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_info    0x0000000000025f9f     0x68c6 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_info    0x000000000002c865     0x4c6c zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_info    0x00000000000314d1     0x4d29 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_info    0x00000000000361fa     0x4bb1 zephyr/libzephyr.a(clk.c.obj)
 .debug_info    0x000000000003adab     0x1749 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_info    0x000000000003c4f4      0xa2f zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_info    0x000000000003cf23      0x968 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_info    0x000000000003d88b     0x1319 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_info    0x000000000003eba4      0xb73 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_info    0x000000000003f717      0xe63 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_info    0x000000000004057a     0x1974 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_info    0x0000000000041eee       0x26 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_info    0x0000000000041f14       0x22 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
 .debug_info    0x0000000000041f36     0x87e0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .debug_info    0x000000000004a716      0x5ea zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_info    0x000000000004ad00       0x26 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .debug_info    0x000000000004ad26      0xe93 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
 .debug_info    0x000000000004bbb9      0x7a5 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .debug_info    0x000000000004c35e      0x653 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .debug_info    0x000000000004c9b1     0x1af5 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .debug_info    0x000000000004e4a6     0x361c zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_info    0x0000000000051ac2     0x5acd zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_info    0x000000000005758f     0x16da zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_info    0x0000000000058c69     0x97a7 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_info    0x0000000000062410     0x957b zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .debug_info    0x000000000006b98b     0x3fd6 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_info    0x000000000006f961     0x18a7 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_info    0x0000000000071208     0x177d zephyr/kernel/libkernel.a(device.c.obj)
 .debug_info    0x0000000000072985     0x31ab zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_info    0x0000000000075b30     0x2490 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_info    0x0000000000077fc0     0x16c6 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_info    0x0000000000079686     0x2e37 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_info    0x000000000007c4bd     0x1058 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_info    0x000000000007d515     0x150f zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_info    0x000000000007ea24     0x6e71 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_info    0x0000000000085895     0x2471 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_info    0x0000000000087d06     0x1084 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_info    0x0000000000088d8a     0x1162 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_info    0x0000000000089eec     0x114b /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
 .debug_info    0x000000000008b037     0x11ac /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
 .debug_info    0x000000000008c1e3     0x10fd /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
 .debug_info    0x000000000008d2e0     0x1175 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)
 .debug_info    0x000000000008e455      0xa88 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_abbrev   0x0000000000000000     0xc209
 *(SORT_BY_ALIGNMENT(.debug_abbrev))
 .debug_abbrev  0x0000000000000000      0x1b3 zephyr/CMakeFiles/zephyr_pre1.dir/dev_handles.c.obj
 .debug_abbrev  0x00000000000001b3      0x19d zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_abbrev  0x0000000000000350      0x37c app/libapp.a(main.c.obj)
 .debug_abbrev  0x00000000000006cc      0x399 zephyr/libzephyr.a(printk.c.obj)
 .debug_abbrev  0x0000000000000a65      0x27b zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_abbrev  0x0000000000000ce0      0x492 zephyr/libzephyr.a(heap.c.obj)
 .debug_abbrev  0x0000000000001172      0x42f zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_abbrev  0x00000000000015a1       0x2e zephyr/libzephyr.a(configs.c.obj)
 .debug_abbrev  0x00000000000015cf      0x41a zephyr/libzephyr.a(soc.c.obj)
 .debug_abbrev  0x00000000000019e9      0x1c7 zephyr/libzephyr.a(loader.c.obj)
 .debug_abbrev  0x0000000000001bb0      0x1a0 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_abbrev  0x0000000000001d50      0x487 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .debug_abbrev  0x00000000000021d7       0x14 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .debug_abbrev  0x00000000000021eb      0x2f7 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .debug_abbrev  0x00000000000024e2      0x3ad zephyr/libzephyr.a(i2c_hal.c.obj)
 .debug_abbrev  0x000000000000288f      0x1c7 zephyr/libzephyr.a(uart_periph.c.obj)
 .debug_abbrev  0x0000000000002a56      0x40b zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_abbrev  0x0000000000002e61      0x389 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_abbrev  0x00000000000031ea      0x11d zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_abbrev  0x0000000000003307      0x1bc zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_abbrev  0x00000000000034c3      0x5b6 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_abbrev  0x0000000000003a79      0x2e3 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_abbrev  0x0000000000003d5c      0x385 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_abbrev  0x00000000000040e1      0x2a1 zephyr/libzephyr.a(clk.c.obj)
 .debug_abbrev  0x0000000000004382      0x38b zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_abbrev  0x000000000000470d      0x15e zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_abbrev  0x000000000000486b      0x127 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_abbrev  0x0000000000004992      0x334 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_abbrev  0x0000000000004cc6      0x217 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_abbrev  0x0000000000004edd      0x1b7 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_abbrev  0x0000000000005094      0x2b9 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_abbrev  0x000000000000534d       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_abbrev  0x0000000000005361       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
 .debug_abbrev  0x0000000000005373      0x475 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .debug_abbrev  0x00000000000057e8      0x241 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_abbrev  0x0000000000005a29       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .debug_abbrev  0x0000000000005a3d      0x1dd zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
 .debug_abbrev  0x0000000000005c1a      0x193 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .debug_abbrev  0x0000000000005dad      0x266 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .debug_abbrev  0x0000000000006013      0x3b5 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .debug_abbrev  0x00000000000063c8      0x5dd zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_abbrev  0x00000000000069a5      0x463 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_abbrev  0x0000000000006e08      0x3f5 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_abbrev  0x00000000000071fd      0x6c8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_abbrev  0x00000000000078c5      0x673 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .debug_abbrev  0x0000000000007f38      0x5d5 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_abbrev  0x000000000000850d      0x3d6 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_abbrev  0x00000000000088e3      0x376 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_abbrev  0x0000000000008c59      0x495 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_abbrev  0x00000000000090ee      0x581 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_abbrev  0x000000000000966f      0x3b5 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_abbrev  0x0000000000009a24      0x5ab zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_abbrev  0x0000000000009fcf      0x25d zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_abbrev  0x000000000000a22c      0x39c zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_abbrev  0x000000000000a5c8      0x6bf zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_abbrev  0x000000000000ac87      0x52a zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_abbrev  0x000000000000b1b1      0x2c6 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_abbrev  0x000000000000b477      0x1f8 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_abbrev  0x000000000000b66f      0x28e /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
 .debug_abbrev  0x000000000000b8fd      0x29b /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
 .debug_abbrev  0x000000000000bb98      0x27a /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
 .debug_abbrev  0x000000000000be12      0x294 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)
 .debug_abbrev  0x000000000000c0a6      0x163 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_line     0x0000000000000000    0x2e4df
 *(SORT_BY_ALIGNMENT(.debug_line) SORT_BY_ALIGNMENT(.debug_line.*) SORT_BY_ALIGNMENT(.debug_line_end))
 .debug_line    0x0000000000000000      0x3ce zephyr/CMakeFiles/zephyr_pre1.dir/dev_handles.c.obj
 .debug_line    0x00000000000003ce      0x4bf zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_line    0x000000000000088d      0x85e app/libapp.a(main.c.obj)
 .debug_line    0x00000000000010eb      0x86e zephyr/libzephyr.a(printk.c.obj)
 .debug_line    0x0000000000001959      0x47a zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_line    0x0000000000001dd3     0x20e3 zephyr/libzephyr.a(heap.c.obj)
 .debug_line    0x0000000000003eb6     0x19c5 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_line    0x000000000000587b      0x43b zephyr/libzephyr.a(configs.c.obj)
 .debug_line    0x0000000000005cb6      0xb3d zephyr/libzephyr.a(soc.c.obj)
 .debug_line    0x00000000000067f3      0x49b zephyr/libzephyr.a(loader.c.obj)
 .debug_line    0x0000000000006c8e      0x39c zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_line    0x000000000000702a      0xc39 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .debug_line    0x0000000000007c63      0x335 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .debug_line    0x0000000000007f98      0x6d7 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .debug_line    0x000000000000866f     0x15c0 zephyr/libzephyr.a(i2c_hal.c.obj)
 .debug_line    0x0000000000009c2f      0x1b2 zephyr/libzephyr.a(uart_periph.c.obj)
 .debug_line    0x0000000000009de1     0x18e4 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_line    0x000000000000b6c5      0x8ae zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_line    0x000000000000bf73      0x1a1 zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_line    0x000000000000c114      0x1cd zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_line    0x000000000000c2e1     0x1bfa zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_line    0x000000000000dedb      0x893 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_line    0x000000000000e76e      0x8c9 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_line    0x000000000000f037      0x55e zephyr/libzephyr.a(clk.c.obj)
 .debug_line    0x000000000000f595      0xf38 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_line    0x00000000000104cd      0x330 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_line    0x00000000000107fd      0x257 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_line    0x0000000000010a54      0x5ec zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_line    0x0000000000011040      0x34b zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_line    0x000000000001138b      0x41a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_line    0x00000000000117a5      0x536 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_line    0x0000000000011cdb      0x224 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_line    0x0000000000011eff      0x36c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
 .debug_line    0x000000000001226b     0x13a4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .debug_line    0x000000000001360f      0x752 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_line    0x0000000000013d61       0xad zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .debug_line    0x0000000000013e0e      0x3e0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
 .debug_line    0x00000000000141ee      0xcde zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .debug_line    0x0000000000014ecc      0x5a5 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .debug_line    0x0000000000015471      0x920 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .debug_line    0x0000000000015d91     0x25b0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_line    0x0000000000018341      0xbbf zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_line    0x0000000000018f00      0x681 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_line    0x0000000000019581     0x1efe zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_line    0x000000000001b47f     0x23c1 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .debug_line    0x000000000001d840     0x1494 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_line    0x000000000001ecd4      0xb12 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_line    0x000000000001f7e6      0xad8 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_line    0x00000000000202be      0x84b zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_line    0x0000000000020b09      0xb81 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_line    0x000000000002168a      0x981 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_line    0x000000000002200b     0x1136 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_line    0x0000000000023141      0x589 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_line    0x00000000000236ca      0x9b5 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_line    0x000000000002407f     0x5242 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_line    0x00000000000292c1     0x1a53 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_line    0x000000000002ad14      0x564 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_line    0x000000000002b278      0x454 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_line    0x000000000002b6cc      0xadc /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
 .debug_line    0x000000000002c1a8      0xb9b /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
 .debug_line    0x000000000002cd43      0xa33 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
 .debug_line    0x000000000002d776      0xb18 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)
 .debug_line    0x000000000002e28e      0x251 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_frame    0x0000000000000000     0x2d00
 *(SORT_BY_ALIGNMENT(.debug_frame))
 .debug_frame   0x0000000000000000       0x28 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_frame   0x0000000000000028       0x28 app/libapp.a(main.c.obj)
 .debug_frame   0x0000000000000050      0x100 zephyr/libzephyr.a(printk.c.obj)
 .debug_frame   0x0000000000000150       0x28 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_frame   0x0000000000000178      0x1f0 zephyr/libzephyr.a(heap.c.obj)
 .debug_frame   0x0000000000000368       0x58 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_frame   0x00000000000003c0       0x28 zephyr/libzephyr.a(configs.c.obj)
 .debug_frame   0x00000000000003e8       0x88 zephyr/libzephyr.a(soc.c.obj)
 .debug_frame   0x0000000000000470       0x28 zephyr/libzephyr.a(loader.c.obj)
 .debug_frame   0x0000000000000498       0x70 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_frame   0x0000000000000508       0x88 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .debug_frame   0x0000000000000590       0x70 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .debug_frame   0x0000000000000600      0x3a0 zephyr/libzephyr.a(i2c_hal.c.obj)
 .debug_frame   0x00000000000009a0      0x2b0 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_frame   0x0000000000000c50       0x88 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_frame   0x0000000000000cd8      0x2e0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_frame   0x0000000000000fb8       0xd0 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_frame   0x0000000000001088       0x40 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_frame   0x00000000000010c8       0x70 zephyr/libzephyr.a(clk.c.obj)
 .debug_frame   0x0000000000001138      0x100 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_frame   0x0000000000001238       0x58 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_frame   0x0000000000001290       0x28 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_frame   0x00000000000012b8       0x58 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_frame   0x0000000000001310       0x40 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_frame   0x0000000000001350       0x40 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_frame   0x0000000000001390       0x58 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_frame   0x00000000000013e8      0x130 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .debug_frame   0x0000000000001518       0x70 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_frame   0x0000000000001588       0x28 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
 .debug_frame   0x00000000000015b0      0x190 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .debug_frame   0x0000000000001740       0xd0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .debug_frame   0x0000000000001810       0x58 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .debug_frame   0x0000000000001868      0x208 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_frame   0x0000000000001a70       0xa0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_frame   0x0000000000001b10       0x58 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_frame   0x0000000000001b68      0x148 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_frame   0x0000000000001cb0      0x148 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .debug_frame   0x0000000000001df8       0xb8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_frame   0x0000000000001eb0       0x88 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_frame   0x0000000000001f38       0xd0 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_frame   0x0000000000002008       0xe8 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_frame   0x00000000000020f0       0xa0 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_frame   0x0000000000002190       0x88 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_frame   0x0000000000002218      0x1f0 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_frame   0x0000000000002408       0x40 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_frame   0x0000000000002448       0x70 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_frame   0x00000000000024b8      0x5b0 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_frame   0x0000000000002a68      0x190 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_frame   0x0000000000002bf8       0x40 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_frame   0x0000000000002c38       0x28 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_frame   0x0000000000002c60       0x28 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
 .debug_frame   0x0000000000002c88       0x28 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
 .debug_frame   0x0000000000002cb0       0x28 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
 .debug_frame   0x0000000000002cd8       0x28 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)

.debug_str      0x0000000000000000     0xd2cb
 *(SORT_BY_ALIGNMENT(.debug_str))
 .debug_str     0x0000000000000000     0x1443 zephyr/CMakeFiles/zephyr_pre1.dir/dev_handles.c.obj
                                       0x15ec (size before relaxing)
 .debug_str     0x0000000000001443       0x54 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
                                       0x13cd (size before relaxing)
 .debug_str     0x0000000000001497      0x2da app/libapp.a(main.c.obj)
                                       0x18bc (size before relaxing)
 .debug_str     0x0000000000001771      0x1a7 zephyr/libzephyr.a(printk.c.obj)
                                       0x12f5 (size before relaxing)
 .debug_str     0x0000000000001918       0x99 zephyr/libzephyr.a(thread_entry.c.obj)
                                       0x105b (size before relaxing)
 .debug_str     0x00000000000019b1      0x398 zephyr/libzephyr.a(heap.c.obj)
                                       0x13c2 (size before relaxing)
 .debug_str     0x0000000000001d49      0x361 zephyr/libzephyr.a(cbprintf_complete.c.obj)
                                        0x59b (size before relaxing)
 .debug_str     0x00000000000020aa       0x53 zephyr/libzephyr.a(configs.c.obj)
                                        0x139 (size before relaxing)
 .debug_str     0x00000000000020fd     0x272b zephyr/libzephyr.a(soc.c.obj)
                                       0x362f (size before relaxing)
 .debug_str     0x0000000000004828       0x44 zephyr/libzephyr.a(loader.c.obj)
                                       0x11b0 (size before relaxing)
 .debug_str     0x000000000000486c       0x96 zephyr/libzephyr.a(tracing_none.c.obj)
                                       0x1035 (size before relaxing)
 .debug_str     0x0000000000004902      0x441 zephyr/libzephyr.a(pinmux_esp32.c.obj)
                                       0x3e9c (size before relaxing)
 .debug_str     0x0000000000004d43       0x66 zephyr/libzephyr.a(windowspill_asm.S.obj)
                                         0x8a (size before relaxing)
 .debug_str     0x0000000000004da9      0x909 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
                                        0xc82 (size before relaxing)
 .debug_str     0x00000000000056b2      0x898 zephyr/libzephyr.a(i2c_hal.c.obj)
                                       0x1386 (size before relaxing)
 .debug_str     0x0000000000005f4a      0x5cf zephyr/libzephyr.a(uart_periph.c.obj)
                                        0xb5a (size before relaxing)
 .debug_str     0x0000000000006519      0x9d1 zephyr/libzephyr.a(uart_hal.c.obj)
                                       0x15a4 (size before relaxing)
 .debug_str     0x0000000000006eea      0x193 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                        0xcfc (size before relaxing)
 .debug_str     0x000000000000707d       0x54 zephyr/libzephyr.a(gpio_periph.c.obj)
                                        0x48b (size before relaxing)
 .debug_str     0x00000000000070d1       0x56 zephyr/libzephyr.a(rtc_io_periph.c.obj)
                                       0x2487 (size before relaxing)
 .debug_str     0x0000000000007127      0x850 zephyr/libzephyr.a(rtc_clk.c.obj)
                                       0x3c74 (size before relaxing)
 .debug_str     0x0000000000007977      0x370 zephyr/libzephyr.a(rtc_time.c.obj)
                                       0x2bff (size before relaxing)
 .debug_str     0x0000000000007ce7      0x13f zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                       0x353e (size before relaxing)
 .debug_str     0x0000000000007e26       0x9c zephyr/libzephyr.a(clk.c.obj)
                                       0x3328 (size before relaxing)
 .debug_str     0x0000000000007ec2      0x295 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                       0x1687 (size before relaxing)
 .debug_str     0x0000000000008157      0x180 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
                                        0xe48 (size before relaxing)
 .debug_str     0x00000000000082d7       0x7e zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
                                        0xddb (size before relaxing)
 .debug_str     0x0000000000008355      0x12d zephyr/libzephyr.a(heap_caps.c.obj)
                                       0x1251 (size before relaxing)
 .debug_str     0x0000000000008482       0x90 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                                        0xe28 (size before relaxing)
 .debug_str     0x0000000000008512       0x61 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                       0x100f (size before relaxing)
 .debug_str     0x0000000000008573      0x4af zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                       0x1557 (size before relaxing)
 .debug_str     0x0000000000008a22       0x44 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                                         0x76 (size before relaxing)
 .debug_str     0x0000000000008a66       0x46 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
                                         0x78 (size before relaxing)
 .debug_str     0x0000000000008aac      0x285 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
                                       0x177f (size before relaxing)
 .debug_str     0x0000000000008d31      0x200 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
                                        0x3ec (size before relaxing)
 .debug_str     0x0000000000008f31       0x47 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
                                         0x79 (size before relaxing)
 .debug_str     0x0000000000008f78       0x49 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
                                       0x1079 (size before relaxing)
 .debug_str     0x0000000000008fc1       0xf1 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
                                        0x2a4 (size before relaxing)
 .debug_str     0x00000000000090b2       0xc7 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
                                        0x291 (size before relaxing)
 .debug_str     0x0000000000009179       0xff zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
                                       0x1848 (size before relaxing)
 .debug_str     0x0000000000009278      0x5ae zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                       0x1c3a (size before relaxing)
 .debug_str     0x0000000000009826      0x42c zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                       0x441a (size before relaxing)
 .debug_str     0x0000000000009c52      0x16b zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                       0x171c (size before relaxing)
 .debug_str     0x0000000000009dbd      0x6b9 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                       0x4983 (size before relaxing)
 .debug_str     0x000000000000a476      0x67a zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
                                       0x33d7 (size before relaxing)
 .debug_str     0x000000000000aaf0      0x516 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                       0x2d7d (size before relaxing)
 .debug_str     0x000000000000b006      0x170 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                       0x16c1 (size before relaxing)
 .debug_str     0x000000000000b176      0x21a zephyr/kernel/libkernel.a(device.c.obj)
                                       0x15ff (size before relaxing)
 .debug_str     0x000000000000b390      0x384 zephyr/kernel/libkernel.a(fatal.c.obj)
                                       0x1924 (size before relaxing)
 .debug_str     0x000000000000b714      0x43f zephyr/kernel/libkernel.a(init.c.obj)
                                       0x1cd3 (size before relaxing)
 .debug_str     0x000000000000bb53      0x12a zephyr/kernel/libkernel.a(kheap.c.obj)
                                       0x14e3 (size before relaxing)
 .debug_str     0x000000000000bc7d      0x3d2 zephyr/kernel/libkernel.a(thread.c.obj)
                                       0x1a34 (size before relaxing)
 .debug_str     0x000000000000c04f       0x63 zephyr/kernel/libkernel.a(idle.c.obj)
                                       0x117b (size before relaxing)
 .debug_str     0x000000000000c0b2       0xa8 zephyr/kernel/libkernel.a(sem.c.obj)
                                       0x12ea (size before relaxing)
 .debug_str     0x000000000000c15a      0x891 zephyr/kernel/libkernel.a(sched.c.obj)
                                       0x2111 (size before relaxing)
 .debug_str     0x000000000000c9eb      0x17f zephyr/kernel/libkernel.a(timeout.c.obj)
                                       0x1527 (size before relaxing)
 .debug_str     0x000000000000cb6a       0x5f zephyr/kernel/libkernel.a(mempool.c.obj)
                                       0x1083 (size before relaxing)
 .debug_str     0x000000000000cbc9       0x3d zephyr/kernel/libkernel.a(banner.c.obj)
                                       0x13e2 (size before relaxing)
 .debug_str     0x000000000000cc06      0x649 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
                                        0x75a (size before relaxing)
 .debug_str     0x000000000000d24f        0x9 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
                                        0x75a (size before relaxing)
 .debug_str     0x000000000000d258        0xa /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
                                        0x75b (size before relaxing)
 .debug_str     0x000000000000d262        0xa /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)
                                        0x75b (size before relaxing)
 .debug_str     0x000000000000d26c       0x5f zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                                        0xdf8 (size before relaxing)

.debug_loc      0x0000000000000000    0x14d9f
 *(SORT_BY_ALIGNMENT(.debug_loc))
 .debug_loc     0x0000000000000000      0x133 app/libapp.a(main.c.obj)
 .debug_loc     0x0000000000000133      0x202 zephyr/libzephyr.a(printk.c.obj)
 .debug_loc     0x0000000000000335       0x15 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_loc     0x000000000000034a     0x19e6 zephyr/libzephyr.a(heap.c.obj)
 .debug_loc     0x0000000000001d30     0x1553 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_loc     0x0000000000003283      0x18a zephyr/libzephyr.a(soc.c.obj)
 .debug_loc     0x000000000000340d      0x4f0 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .debug_loc     0x00000000000038fd      0x1be zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .debug_loc     0x0000000000003abb      0xbb2 zephyr/libzephyr.a(i2c_hal.c.obj)
 .debug_loc     0x000000000000466d      0xf81 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_loc     0x00000000000055ee      0x373 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_loc     0x0000000000005961      0xd28 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_loc     0x0000000000006689      0x356 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_loc     0x00000000000069df      0x23c zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_loc     0x0000000000006c1b      0x34e zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_loc     0x0000000000006f69       0xd3 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_loc     0x000000000000703c      0x303 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_loc     0x000000000000733f       0x9e zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_loc     0x00000000000073dd       0x32 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_loc     0x000000000000740f      0x573 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .debug_loc     0x0000000000007982      0x3a2 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_loc     0x0000000000007d24      0xb63 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .debug_loc     0x0000000000008887      0x366 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .debug_loc     0x0000000000008bed      0x3bd zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .debug_loc     0x0000000000008faa     0x1273 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_loc     0x000000000000a21d      0x224 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_loc     0x000000000000a441       0xfb zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_loc     0x000000000000a53c     0x12bd zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_loc     0x000000000000b7f9     0x1392 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .debug_loc     0x000000000000cb8b      0x7dd zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_loc     0x000000000000d368      0x2dd zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_loc     0x000000000000d645      0x43a zephyr/kernel/libkernel.a(device.c.obj)
 .debug_loc     0x000000000000da7f       0x8e zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_loc     0x000000000000db0d      0x1b5 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_loc     0x000000000000dcc2      0x2ab zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_loc     0x000000000000df6d      0x5f5 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_loc     0x000000000000e562       0x3f zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_loc     0x000000000000e5a1      0x310 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_loc     0x000000000000e8b1     0x2f35 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_loc     0x00000000000117e6      0xcd0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_loc     0x00000000000124b6      0x1ef zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_loc     0x00000000000126a5      0xb09 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
 .debug_loc     0x00000000000131ae      0x7f3 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
 .debug_loc     0x00000000000139a1      0xa8a /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
 .debug_loc     0x000000000001442b      0x974 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)

.debug_macinfo
 *(SORT_BY_ALIGNMENT(.debug_macinfo))

.debug_weaknames
 *(SORT_BY_ALIGNMENT(.debug_weaknames))

.debug_funcnames
 *(SORT_BY_ALIGNMENT(.debug_funcnames))

.debug_typenames
 *(SORT_BY_ALIGNMENT(.debug_typenames))

.debug_varnames
 *(SORT_BY_ALIGNMENT(.debug_varnames))

.debug_pubtypes
 *(SORT_BY_ALIGNMENT(.debug_pubtypes))

.debug_ranges   0x0000000000000000     0x3838
 *(SORT_BY_ALIGNMENT(.debug_ranges))
 .debug_ranges  0x0000000000000000       0x68 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
 .debug_ranges  0x0000000000000068       0x10 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_ranges  0x0000000000000078       0x58 app/libapp.a(main.c.obj)
 .debug_ranges  0x00000000000000d0       0x58 zephyr/libzephyr.a(printk.c.obj)
 .debug_ranges  0x0000000000000128       0x28 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_ranges  0x0000000000000150      0x490 zephyr/libzephyr.a(heap.c.obj)
 .debug_ranges  0x00000000000005e0      0x128 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_ranges  0x0000000000000708       0x10 zephyr/libzephyr.a(configs.c.obj)
 .debug_ranges  0x0000000000000718       0x98 zephyr/libzephyr.a(soc.c.obj)
 .debug_ranges  0x00000000000007b0       0x10 zephyr/libzephyr.a(loader.c.obj)
 .debug_ranges  0x00000000000007c0       0x10 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_ranges  0x00000000000007d0       0x90 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .debug_ranges  0x0000000000000860       0x28 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .debug_ranges  0x0000000000000888      0x1a8 zephyr/libzephyr.a(i2c_hal.c.obj)
 .debug_ranges  0x0000000000000a30      0x168 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_ranges  0x0000000000000b98       0xa8 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_ranges  0x0000000000000c40      0x328 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_ranges  0x0000000000000f68       0x48 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_ranges  0x0000000000000fb0       0x30 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_ranges  0x0000000000000fe0       0x28 zephyr/libzephyr.a(clk.c.obj)
 .debug_ranges  0x0000000000001008      0x160 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_ranges  0x0000000000001168       0x20 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .debug_ranges  0x0000000000001188       0x10 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .debug_ranges  0x0000000000001198       0x38 zephyr/libzephyr.a(heap_caps.c.obj)
 .debug_ranges  0x00000000000011d0       0x18 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_ranges  0x00000000000011e8       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_ranges  0x0000000000001200       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_ranges  0x0000000000001220      0x160 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .debug_ranges  0x0000000000001380      0x100 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .debug_ranges  0x0000000000001480       0x10 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
 .debug_ranges  0x0000000000001490       0x88 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .debug_ranges  0x0000000000001518       0xc0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .debug_ranges  0x00000000000015d8       0x50 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .debug_ranges  0x0000000000001628      0x278 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_ranges  0x00000000000018a0       0x50 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_ranges  0x00000000000018f0       0x20 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_ranges  0x0000000000001910      0x318 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_ranges  0x0000000000001c28      0x160 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .debug_ranges  0x0000000000001d88       0xc8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_ranges  0x0000000000001e50       0xa8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_ranges  0x0000000000001ef8      0x128 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_ranges  0x0000000000002020       0x60 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_ranges  0x0000000000002080       0xa8 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_ranges  0x0000000000002128       0xc0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_ranges  0x00000000000021e8      0x1e0 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_ranges  0x00000000000023c8       0x18 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_ranges  0x00000000000023e0       0x88 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_ranges  0x0000000000002468      0xe28 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_ranges  0x0000000000003290      0x3a8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_ranges  0x0000000000003638       0x18 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_ranges  0x0000000000003650       0x10 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_ranges  0x0000000000003660       0xa0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
 .debug_ranges  0x0000000000003700       0x40 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
 .debug_ranges  0x0000000000003740       0xa0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
 .debug_ranges  0x00000000000037e0       0x58 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)

.debug_macro
 *(SORT_BY_ALIGNMENT(.debug_macro))

.debug_line_str
 *(SORT_BY_ALIGNMENT(.debug_line_str))

.debug_loclists
 *(SORT_BY_ALIGNMENT(.debug_loclists))

.debug_rnglists
 *(SORT_BY_ALIGNMENT(.debug_rnglists))

.xtensa.info    0x0000000000000000       0x38
 *(SORT_BY_ALIGNMENT(.xtensa.info))
 .xtensa.info   0x0000000000000000       0x38 zephyr/CMakeFiles/zephyr_pre1.dir/misc/empty_file.c.obj
 .xtensa.info   0x0000000000000038        0x0 zephyr/CMakeFiles/zephyr_pre1.dir/dev_handles.c.obj
 .xtensa.info   0x0000000000000038        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .xtensa.info   0x0000000000000038        0x0 app/libapp.a(main.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cbprintf.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(crc32c_sw.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(crc32_sw.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(crc16_sw.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(crc8_sw.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(crc7_sw.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(dec.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(fdtable.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(hex.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(notify.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(printk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(onoff.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rb.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(sem.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(heap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(heap-validate.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(multi_heap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(configs.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(soc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp32-mp.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(loader.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(pinmux_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(windowspill_asm.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(i2c_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(i2c_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(uart_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_timer_impl_lac.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(interrupt_controller_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(interrupt_descriptor_table.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_system_api.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(dport_access.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(heap_caps.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2-util.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa-asm2.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_backtrace.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(debug_helpers_asm.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(abort.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(atoi.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtol.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strtoul.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(malloc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(bsearch.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(exit.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(qsort.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strncasecmp.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strstr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(string.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(strspn.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(stdout_console.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(sprintf.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(fprintf.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/minimal/liblib__libc__minimal.a(gmtime.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/posix/liblib__posix.a(pthread_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/posix/liblib__posix.a(nanosleep.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a(board_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/i2c/libdrivers__i2c.a(i2c_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .xtensa.info   0x0000000000000038        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_addsubdf3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_muldf3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdf3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_fixdfdi.o)
 .xtensa.info   0x0000000000000038        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatsidf.o)
 .xtensa.info   0x0000000000000038        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_floatdidf.o)
 .xtensa.info   0x0000000000000038        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_truncdfsf2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_extendsfdf2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_divdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_moddi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_udivdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a(_umoddi3.o)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                0x0000000000000001                ASSERT (((_iram_end - ORIGIN (iram0_0_seg)) <= LENGTH (iram0_0_seg)), IRAM0 segment data does not fit.)
LOAD app/libapp.a
LOAD zephyr/libzephyr.a
LOAD zephyr/arch/common/libarch__common.a
LOAD zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a
LOAD zephyr/lib/libc/minimal/liblib__libc__minimal.a
LOAD zephyr/lib/posix/liblib__posix.a
LOAD zephyr/boards/boards/xtensa/esp_custom/lib..__..__Dev__zephyr__tut01__boards__xtensa__esp_custom.a
LOAD zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a
LOAD zephyr/drivers/clock_control/libdrivers__clock_control.a
LOAD zephyr/drivers/console/libdrivers__console.a
LOAD zephyr/drivers/gpio/libdrivers__gpio.a
LOAD zephyr/drivers/i2c/libdrivers__i2c.a
LOAD zephyr/drivers/serial/libdrivers__serial.a
LOAD zephyr/drivers/timer/libdrivers__timer.a
LOAD zephyr/kernel/libkernel.a
LOAD /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a
LOAD zephyr/arch/common/libisr_tables.a
LOAD /home/trevor/.espressif/tools/zephyr/xtensa-esp32-elf/bin/../lib/gcc/xtensa-esp32-elf/8.4.0/libgcc.a
                0x0000000040009200                PROVIDE (esp_rom_uart_tx_one_char = uart_tx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_rx_one_char = uart_rx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_attach = uartAttach)
                0x0000000040009278                PROVIDE (esp_rom_uart_tx_wait_idle = 0x40009278)
                [!provide]                        PROVIDE (esp_rom_intr_matrix_set = intr_matrix_set)
                0x0000000040009edc                PROVIDE (esp_rom_gpio_matrix_in = gpio_matrix_in)
                0x0000000040009f0c                PROVIDE (esp_rom_gpio_matrix_out = gpio_matrix_out)
                0x0000000040009a14                PROVIDE (esp_rom_Cache_Flush = Cache_Flush_rom)
                0x0000000040009a84                PROVIDE (esp_rom_Cache_Read_Enable = Cache_Read_Enable_rom)
                0x000000004000689c                PROVIDE (esp_rom_ets_set_appcpu_boot_addr = ets_set_appcpu_boot_addr)
                [!provide]                        PROVIDE (esp_rom_i2c_readReg = rom_i2c_readReg)
                [!provide]                        PROVIDE (esp_rom_i2c_writeReg = rom_i2c_writeReg)
                [!provide]                        PROVIDE (esp_rom_ets_printf = ets_printf)
                [!provide]                        PROVIDE (esp_rom_g_ticks_per_us_app = g_ticks_per_us_app)
                [!provide]                        PROVIDE (esp_rom_g_ticks_per_us_pro = g_ticks_per_us_app)
                [!provide]                        PROVIDE (esp_rom_ets_delay_us = ets_delay_us)
                [!provide]                        PROVIDE (Add2SelfBigHex256 = 0x40015b7c)
                [!provide]                        PROVIDE (AddBigHex256 = 0x40015b28)
                [!provide]                        PROVIDE (AddBigHexModP256 = 0x40015c98)
                [!provide]                        PROVIDE (AddP256 = 0x40015c74)
                [!provide]                        PROVIDE (AddPdiv2_256 = 0x40015ce0)
                [!provide]                        PROVIDE (app_gpio_arg = 0x3ffe003c)
                [!provide]                        PROVIDE (app_gpio_handler = 0x3ffe0040)
                [!provide]                        PROVIDE (BasePoint_x_256 = 0x3ff97488)
                [!provide]                        PROVIDE (BasePoint_y_256 = 0x3ff97468)
                [!provide]                        PROVIDE (bigHexInversion256 = 0x400168f0)
                [!provide]                        PROVIDE (bigHexP256 = 0x3ff973bc)
                [!provide]                        PROVIDE (btdm_r_ble_bt_handler_tab_p_get = 0x40019b0c)
                [!provide]                        PROVIDE (btdm_r_btdm_option_data_p_get = 0x40010004)
                [!provide]                        PROVIDE (btdm_r_btdm_rom_version_get = 0x40010078)
                [!provide]                        PROVIDE (btdm_r_data_init = 0x4001002c)
                [!provide]                        PROVIDE (btdm_r_import_rf_phy_func_p_get = 0x40054298)
                [!provide]                        PROVIDE (btdm_r_ip_func_p_get = 0x40019af0)
                [!provide]                        PROVIDE (btdm_r_ip_func_p_set = 0x40019afc)
                [!provide]                        PROVIDE (btdm_r_modules_func_p_get = 0x4005427c)
                [!provide]                        PROVIDE (btdm_r_modules_func_p_set = 0x40054270)
                [!provide]                        PROVIDE (btdm_r_plf_func_p_set = 0x40054288)
                [!provide]                        PROVIDE (bt_util_buf_env = 0x3ffb8bd4)
                [!provide]                        PROVIDE (cache_flash_mmu_set_rom = 0x400095e0)
                0x0000000040009a14                PROVIDE (Cache_Flush_rom = 0x40009a14)
                0x0000000040009ab8                PROVIDE (Cache_Read_Disable_rom = 0x40009ab8)
                0x0000000040009a84                PROVIDE (Cache_Read_Enable_rom = 0x40009a84)
                [!provide]                        PROVIDE (Cache_Read_Init_rom = 0x40009950)
                [!provide]                        PROVIDE (cache_sram_mmu_set_rom = 0x400097f4)
                [!provide]                        PROVIDE (calc_rtc_memory_crc = 0x40008170)
                [!provide]                        PROVIDE (__clear_cache = 0x40063860)
                [!provide]                        PROVIDE (co_default_bdaddr = 0x3ffae704)
                [!provide]                        PROVIDE (co_null_bdaddr = 0x3ffb80e0)
                [!provide]                        PROVIDE (co_sca2ppm = 0x3ff971e8)
                [!provide]                        PROVIDE (crc16_be = 0x4005d09c)
                [!provide]                        PROVIDE (crc16_le = 0x4005d05c)
                [!provide]                        PROVIDE (crc32_be = 0x4005d024)
                [!provide]                        PROVIDE (crc32_le = 0x4005cfec)
                [!provide]                        PROVIDE (crc8_be = 0x4005d114)
                [!provide]                        PROVIDE (crc8_le = 0x4005d0e0)
                [!provide]                        PROVIDE (_data_end_rom = 0x4000d5c8)
                [!provide]                        PROVIDE (_data_end_btdm_rom = 0x4000d4f8)
                [!provide]                        PROVIDE (_data_start_rom = 0x4000d4f8)
                [!provide]                        PROVIDE (_data_start_btdm_rom = 0x4000d4f4)
                [!provide]                        PROVIDE (_data_start_btdm = 0x3ffae6e0)
                [!provide]                        PROVIDE (_data_end_btdm = 0x3ffaff10)
                [!provide]                        PROVIDE (_bss_start_btdm = 0x3ffb8000)
                [!provide]                        PROVIDE (_bss_end_btdm = 0x3ffbff70)
                [!provide]                        PROVIDE (dbg_default_handler = 0x3ff97218)
                [!provide]                        PROVIDE (dbg_default_state = 0x3ff97220)
                [!provide]                        PROVIDE (dbg_state = 0x3ffb8d5d)
                [!provide]                        PROVIDE (DebugE256PublicKey_x = 0x3ff97428)
                [!provide]                        PROVIDE (DebugE256PublicKey_y = 0x3ff97408)
                [!provide]                        PROVIDE (DebugE256SecretKey = 0x3ff973e8)
                [!provide]                        PROVIDE (debug_timer = 0x3ffe042c)
                [!provide]                        PROVIDE (debug_timerfn = 0x3ffe0430)
                [!provide]                        PROVIDE (dh_group14_generator = 0x3ff9ac60)
                [!provide]                        PROVIDE (dh_group14_prime = 0x3ff9ab60)
                [!provide]                        PROVIDE (dh_group15_generator = 0x3ff9ab5f)
                [!provide]                        PROVIDE (dh_group15_prime = 0x3ff9a9df)
                [!provide]                        PROVIDE (dh_group16_generator = 0x3ff9a9de)
                [!provide]                        PROVIDE (dh_group16_prime = 0x3ff9a7de)
                [!provide]                        PROVIDE (dh_group17_generator = 0x3ff9a7dd)
                [!provide]                        PROVIDE (dh_group17_prime = 0x3ff9a4dd)
                [!provide]                        PROVIDE (dh_group18_generator = 0x3ff9a4dc)
                [!provide]                        PROVIDE (dh_group18_prime = 0x3ff9a0dc)
                [!provide]                        PROVIDE (dh_group1_generator = 0x3ff9ae03)
                [!provide]                        PROVIDE (dh_group1_prime = 0x3ff9ada3)
                [!provide]                        PROVIDE (dh_group2_generator = 0x3ff9ada2)
                [!provide]                        PROVIDE (dh_group2_prime = 0x3ff9ad22)
                [!provide]                        PROVIDE (dh_group5_generator = 0x3ff9ad21)
                [!provide]                        PROVIDE (dh_group5_prime = 0x3ff9ac61)
                [!provide]                        PROVIDE (g_rom_spiflash_dummy_len_plus = 0x3ffae290)
                [!provide]                        PROVIDE (ecc_env = 0x3ffb8d60)
                [!provide]                        PROVIDE (ecc_Jacobian_InfinityPoint256 = 0x3ff972e8)
                [!provide]                        PROVIDE (em_buf_env = 0x3ffb8d74)
                [!provide]                        PROVIDE (esp_crc8 = 0x4005d144)
                [!provide]                        PROVIDE (_etext = 0x4000d66c)
                [!provide]                        PROVIDE (ets_readySet_ = 0x3ffe01f0)
                [!provide]                        PROVIDE (ets_startup_callback = 0x3ffe0404)
                [!provide]                        PROVIDE (rwip_coex_cfg = 0x3ff9914c)
                [!provide]                        PROVIDE (rwip_priority = 0x3ff99159)
                [!provide]                        PROVIDE (exc_cause_table = 0x3ff991d0)
                [!provide]                        PROVIDE (GF_Jacobian_Point_Addition256 = 0x400163a4)
                [!provide]                        PROVIDE (GF_Jacobian_Point_Double256 = 0x40016260)
                [!provide]                        PROVIDE (GF_Point_Jacobian_To_Affine256 = 0x40016b0c)
                [!provide]                        PROVIDE (g_phyFuns_instance = 0x3ffae0c4)
                [!provide]                        PROVIDE (g_rom_flashchip = 0x3ffae270)
                [!provide]                        PROVIDE (gTxMsg = 0x3ffe0050)
                [!provide]                        PROVIDE (hci_cmd_desc_root_tab = 0x3ff976d4)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_ctrl_bb = 0x3ff97b70)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_info_par = 0x3ff97b1c)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_le = 0x3ff97870)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_lk_ctrl = 0x3ff97fc0)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_lk_pol = 0x3ff97f3c)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_stat_par = 0x3ff97ac8)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_testing = 0x3ff97a98)
                [!provide]                        PROVIDE (hci_cmd_desc_tab_vs = 0x3ff97714)
                [!provide]                        PROVIDE (hci_command_handler = 0x4004c928)
                [!provide]                        PROVIDE (hci_env = 0x3ffb9350)
                [!provide]                        PROVIDE (rwip_env = 0x3ffb8bcc)
                [!provide]                        PROVIDE (hci_evt_dbg_desc_tab = 0x3ff9750c)
                [!provide]                        PROVIDE (hci_evt_desc_tab = 0x3ff9751c)
                [!provide]                        PROVIDE (hci_evt_le_desc_tab = 0x3ff974b4)
                [!provide]                        PROVIDE (hci_fc_env = 0x3ffb9340)
                [!provide]                        PROVIDE (jd_decomp = 0x400613e8)
                [!provide]                        PROVIDE (jd_prepare = 0x40060fa8)
                [!provide]                        PROVIDE (ke_env = 0x3ffb93cc)
                [!provide]                        PROVIDE (ke_handler_search = 0x4001a430)
                [!provide]                        PROVIDE (ke_task_env = 0x3ffb81d4)
                [!provide]                        PROVIDE (lb_default_handler = 0x3ff982b8)
                [!provide]                        PROVIDE (lb_default_state_tab_p_get = 0x4001c198)
                [!provide]                        PROVIDE (lb_env = 0x3ffb9424)
                [!provide]                        PROVIDE (lb_hci_cmd_handler_tab_p_get = 0x4001c18c)
                [!provide]                        PROVIDE (lb_state = 0x3ffb94e8)
                [!provide]                        PROVIDE (lc_default_handler = 0x3ff98648)
                [!provide]                        PROVIDE (lc_default_state_tab_p_get = 0x4002f494)
                [!provide]                        PROVIDE (lc_env = 0x3ffb94ec)
                [!provide]                        PROVIDE (lc_hci_cmd_handler_tab_p_get = 0x4002f488)
                [!provide]                        PROVIDE (lc_state = 0x3ffb9508)
                [!provide]                        PROVIDE (ld_acl_br_sizes = 0x3ff98a2a)
                [!provide]                        PROVIDE (ld_acl_br_types = 0x3ff98a36)
                [!provide]                        PROVIDE (ld_acl_edr_sizes = 0x3ff98a14)
                [!provide]                        PROVIDE (ld_acl_edr_types = 0x3ff98a22)
                [!provide]                        PROVIDE (ld_env = 0x3ffb9510)
                [!provide]                        PROVIDE (ld_pcm_settings_dft = 0x3ff98a0c)
                [!provide]                        PROVIDE (ld_sched_params = 0x3ffb96c0)
                [!provide]                        PROVIDE (ld_sync_train_channels = 0x3ff98a3c)
                [!provide]                        PROVIDE (llc_default_handler = 0x3ff98b3c)
                [!provide]                        PROVIDE (llc_default_state_tab_p_get = 0x40046058)
                [!provide]                        PROVIDE (llc_env = 0x3ffb96d0)
                [!provide]                        PROVIDE (llc_hci_acl_data_tx_handler = 0x40042398)
                [!provide]                        PROVIDE (llc_hci_cmd_handler_tab_p_get = 0x40042358)
                [!provide]                        PROVIDE (llc_hci_command_handler = 0x40042360)
                [!provide]                        PROVIDE (llcp_pdu_handler_tab_p_get = 0x40043f64)
                [!provide]                        PROVIDE (llc_state = 0x3ffb96f8)
                [!provide]                        PROVIDE (lldesc_build_chain = 0x4000a850)
                [!provide]                        PROVIDE (lldesc_num2link = 0x4000a948)
                [!provide]                        PROVIDE (lldesc_set_owner = 0x4000a974)
                [!provide]                        PROVIDE (lld_evt_deferred_elt_push = 0x400466b4)
                [!provide]                        PROVIDE (lld_evt_deferred_elt_pop = 0x400466dc)
                [!provide]                        PROVIDE (lld_evt_winsize_change = 0x40046730)
                [!provide]                        PROVIDE (lld_evt_rxwin_compute = 0x400467c8)
                [!provide]                        PROVIDE (lld_evt_slave_time_compute = 0x40046818)
                [!provide]                        PROVIDE (lld_evt_env = 0x3ffb9704)
                [!provide]                        PROVIDE (lld_evt_elt_wait_get = 0x400468e4)
                [!provide]                        PROVIDE (lld_evt_get_next_free_slot = 0x4004692c)
                [!provide]                        PROVIDE (lld_pdu_adv_pk_desc_tab = 0x3ff98c70)
                [!provide]                        PROVIDE (lld_pdu_llcp_pk_desc_tab = 0x3ff98b68)
                [!provide]                        PROVIDE (lld_pdu_tx_flush_list = 0x4004a760)
                [!provide]                        PROVIDE (lld_pdu_pack = 0x4004ab14)
                [!provide]                        PROVIDE (LLM_AA_CT1 = 0x3ff98d8a)
                [!provide]                        PROVIDE (LLM_AA_CT2 = 0x3ff98d88)
                [!provide]                        PROVIDE (llm_default_handler = 0x3ff98d80)
                [!provide]                        PROVIDE (llm_default_state_tab_p_get = 0x4004e718)
                [!provide]                        PROVIDE (llm_hci_cmd_handler_tab_p_get = 0x4004c920)
                [!provide]                        PROVIDE (llm_le_env = 0x3ffb976c)
                [!provide]                        PROVIDE (llm_local_cmds = 0x3ff98d38)
                [!provide]                        PROVIDE (llm_local_data_len_values = 0x3ff98d1c)
                [!provide]                        PROVIDE (llm_local_le_feats = 0x3ff98d30)
                [!provide]                        PROVIDE (llm_local_le_states = 0x3ff98d28)
                [!provide]                        PROVIDE (llm_state = 0x3ffb985c)
                [!provide]                        PROVIDE (lm_default_handler = 0x3ff990e0)
                [!provide]                        PROVIDE (lm_default_state_tab_p_get = 0x40054268)
                [!provide]                        PROVIDE (lm_env = 0x3ffb9860)
                [!provide]                        PROVIDE (lm_hci_cmd_handler_tab_p_get = 0x4005425c)
                [!provide]                        PROVIDE (lm_local_supp_feats = 0x3ff990ee)
                [!provide]                        PROVIDE (lm_n_page_tab = 0x3ff990e8)
                [!provide]                        PROVIDE (lmp_desc_tab = 0x3ff96e6c)
                [!provide]                        PROVIDE (lmp_ext_desc_tab = 0x3ff96d9c)
                [!provide]                        PROVIDE (lm_state = 0x3ffb9a1c)
                [!provide]                        PROVIDE (maxSecretKey_256 = 0x3ff97448)
                [!provide]                        PROVIDE (mmu_init = 0x400095a4)
                [!provide]                        PROVIDE (MultiplyBigHexByUint32_256 = 0x40016214)
                [!provide]                        PROVIDE (MultiplyBigHexModP256 = 0x400160b8)
                [!provide]                        PROVIDE (MultiplyByU32ModP256 = 0x40015fdc)
                [!provide]                        PROVIDE (multofup = 0x4000ab8c)
                [!provide]                        PROVIDE (mz_adler32 = 0x4005edbc)
                [!provide]                        PROVIDE (mz_crc32 = 0x4005ee88)
                [!provide]                        PROVIDE (mz_free = 0x4005eed4)
                [!provide]                        PROVIDE (notEqual256 = 0x40015b04)
                [!provide]                        PROVIDE (one_bits = 0x3ff971f8)
                [!provide]                        PROVIDE (phy_get_romfuncs = 0x40004100)
                [!provide]                        PROVIDE (_Pri_4_HandlerAddress = 0x3ffe0648)
                [!provide]                        PROVIDE (_Pri_5_HandlerAddress = 0x3ffe064c)
                [!provide]                        PROVIDE (r_btdm_option_data = 0x3ffae6e0)
                [!provide]                        PROVIDE (r_bt_util_buf_acl_rx_alloc = 0x40010218)
                [!provide]                        PROVIDE (r_bt_util_buf_acl_rx_free = 0x40010234)
                [!provide]                        PROVIDE (r_bt_util_buf_acl_tx_alloc = 0x40010268)
                [!provide]                        PROVIDE (r_bt_util_buf_acl_tx_free = 0x40010280)
                [!provide]                        PROVIDE (r_bt_util_buf_init = 0x400100e4)
                [!provide]                        PROVIDE (r_bt_util_buf_lmp_tx_alloc = 0x400101d0)
                [!provide]                        PROVIDE (r_bt_util_buf_lmp_tx_free = 0x400101ec)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_clear = 0x400103c8)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_init = 0x400102c4)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_rx_alloc = 0x40010468)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_rx_free = 0x4001049c)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_tx_alloc = 0x400103ec)
                [!provide]                        PROVIDE (r_bt_util_buf_sync_tx_free = 0x40010428)
                [!provide]                        PROVIDE (r_co_bdaddr_compare = 0x40014324)
                [!provide]                        PROVIDE (r_co_bytes_to_string = 0x400142e4)
                [!provide]                        PROVIDE (r_co_list_check_size_available = 0x400142c4)
                [!provide]                        PROVIDE (r_co_list_extract = 0x4001404c)
                [!provide]                        PROVIDE (r_co_list_extract_after = 0x40014118)
                [!provide]                        PROVIDE (r_co_list_find = 0x4001419c)
                [!provide]                        PROVIDE (r_co_list_init = 0x40013f14)
                [!provide]                        PROVIDE (r_co_list_insert_after = 0x40014254)
                [!provide]                        PROVIDE (r_co_list_insert_before = 0x40014200)
                [!provide]                        PROVIDE (r_co_list_merge = 0x400141bc)
                [!provide]                        PROVIDE (r_co_list_pool_init = 0x40013f30)
                [!provide]                        PROVIDE (r_co_list_pop_front = 0x40014028)
                [!provide]                        PROVIDE (r_co_list_push_back = 0x40013fb8)
                [!provide]                        PROVIDE (r_co_list_push_front = 0x40013ff4)
                [!provide]                        PROVIDE (r_co_list_size = 0x400142ac)
                [!provide]                        PROVIDE (r_co_nb_good_channels = 0x40014360)
                [!provide]                        PROVIDE (r_co_slot_to_duration = 0x40014348)
                [!provide]                        PROVIDE (r_dbg_init = 0x40014394)
                [!provide]                        PROVIDE (r_dbg_platform_reset_complete = 0x400143d0)
                [!provide]                        PROVIDE (r_dbg_swdiag_init = 0x40014470)
                [!provide]                        PROVIDE (r_dbg_swdiag_read = 0x400144a4)
                [!provide]                        PROVIDE (r_dbg_swdiag_write = 0x400144d0)
                [!provide]                        PROVIDE (r_E1 = 0x400108e8)
                [!provide]                        PROVIDE (r_E21 = 0x40010968)
                [!provide]                        PROVIDE (r_E22 = 0x400109b4)
                [!provide]                        PROVIDE (r_E3 = 0x40010a58)
                [!provide]                        PROVIDE (lm_n192_mod_mul = 0x40011dc0)
                [!provide]                        PROVIDE (lm_n192_mod_add = 0x40011e9c)
                [!provide]                        PROVIDE (lm_n192_mod_sub = 0x40011eec)
                [!provide]                        PROVIDE (r_ea_alarm_clear = 0x40015ab4)
                [!provide]                        PROVIDE (r_ea_alarm_set = 0x40015a10)
                [!provide]                        PROVIDE (r_ea_elt_cancel = 0x400150d0)
                [!provide]                        PROVIDE (r_ea_elt_create = 0x40015264)
                [!provide]                        PROVIDE (r_ea_elt_insert = 0x400152a8)
                [!provide]                        PROVIDE (r_ea_elt_remove = 0x400154f0)
                [!provide]                        PROVIDE (r_ea_finetimer_isr = 0x400155d4)
                [!provide]                        PROVIDE (r_ea_init = 0x40015228)
                [!provide]                        PROVIDE (r_ea_interval_create = 0x4001555c)
                [!provide]                        PROVIDE (r_ea_interval_delete = 0x400155a8)
                [!provide]                        PROVIDE (r_ea_interval_duration_req = 0x4001597c)
                [!provide]                        PROVIDE (r_ea_interval_insert = 0x4001557c)
                [!provide]                        PROVIDE (r_ea_interval_remove = 0x40015590)
                [!provide]                        PROVIDE (ea_conflict_check = 0x40014e9c)
                [!provide]                        PROVIDE (ea_prog_timer = 0x40014f88)
                [!provide]                        PROVIDE (r_ea_offset_req = 0x40015748)
                [!provide]                        PROVIDE (r_ea_sleep_check = 0x40015928)
                [!provide]                        PROVIDE (r_ea_sw_isr = 0x40015724)
                [!provide]                        PROVIDE (r_ea_time_get_halfslot_rounded = 0x40015894)
                [!provide]                        PROVIDE (r_ea_time_get_slot_rounded = 0x400158d4)
                [!provide]                        PROVIDE (r_ecc_abort_key256_generation = 0x40017070)
                [!provide]                        PROVIDE (r_ecc_generate_key256 = 0x40016e00)
                [!provide]                        PROVIDE (r_ecc_gen_new_public_key = 0x400170c0)
                [!provide]                        PROVIDE (r_ecc_gen_new_secret_key = 0x400170e4)
                [!provide]                        PROVIDE (r_ecc_get_debug_Keys = 0x40017224)
                [!provide]                        PROVIDE (r_ecc_init = 0x40016dbc)
                [!provide]                        PROVIDE (ecc_point_multiplication_uint8_256 = 0x40016804)
                [!provide]                        PROVIDE (RecvBuff = 0x3ffe009c)
                [!provide]                        PROVIDE (r_em_buf_init = 0x4001729c)
                [!provide]                        PROVIDE (r_em_buf_rx_buff_addr_get = 0x400173e8)
                [!provide]                        PROVIDE (r_em_buf_rx_free = 0x400173c4)
                [!provide]                        PROVIDE (r_em_buf_tx_buff_addr_get = 0x40017404)
                [!provide]                        PROVIDE (r_em_buf_tx_free = 0x4001741c)
                [!provide]                        PROVIDE (r_F1_256 = 0x400133e4)
                [!provide]                        PROVIDE (r_F2_256 = 0x40013568)
                [!provide]                        PROVIDE (r_F3_256 = 0x40013664)
                [!provide]                        PROVIDE (RFPLL_ICP_TABLE = 0x3ffb8b7c)
                [!provide]                        PROVIDE (r_G_256 = 0x40013470)
                [!provide]                        PROVIDE (r_H3 = 0x40013760)
                [!provide]                        PROVIDE (r_H4 = 0x40013830)
                [!provide]                        PROVIDE (r_h4tl_init = 0x40017878)
                [!provide]                        PROVIDE (r_h4tl_start = 0x40017924)
                [!provide]                        PROVIDE (r_h4tl_stop = 0x40017934)
                [!provide]                        PROVIDE (r_h4tl_write = 0x400178d0)
                [!provide]                        PROVIDE (r_H5 = 0x400138dc)
                [!provide]                        PROVIDE (r_hashConcat = 0x40013a38)
                [!provide]                        PROVIDE (r_hci_acl_tx_data_alloc = 0x4001951c)
                [!provide]                        PROVIDE (r_hci_acl_tx_data_received = 0x40019654)
                [!provide]                        PROVIDE (r_hci_bt_acl_bdaddr_register = 0x40018900)
                [!provide]                        PROVIDE (r_hci_bt_acl_bdaddr_unregister = 0x400189ac)
                [!provide]                        PROVIDE (r_hci_bt_acl_conhdl_register = 0x4001895c)
                [!provide]                        PROVIDE (r_hci_cmd_get_max_param_size = 0x400192d0)
                [!provide]                        PROVIDE (r_hci_cmd_received = 0x400192f8)
                [!provide]                        PROVIDE (r_hci_evt_filter_add = 0x40018a64)
                [!provide]                        PROVIDE (r_hci_evt_mask_set = 0x400189e4)
                [!provide]                        PROVIDE (r_hci_fc_acl_buf_size_set = 0x40017988)
                [!provide]                        PROVIDE (r_hci_fc_acl_en = 0x400179d8)
                [!provide]                        PROVIDE (r_hci_fc_acl_packet_sent = 0x40017a3c)
                [!provide]                        PROVIDE (r_hci_fc_check_host_available_nb_acl_packets = 0x40017aa4)
                [!provide]                        PROVIDE (r_hci_fc_check_host_available_nb_sync_packets = 0x40017ac8)
                [!provide]                        PROVIDE (r_hci_fc_host_nb_acl_pkts_complete = 0x40017a6c)
                [!provide]                        PROVIDE (r_hci_fc_host_nb_sync_pkts_complete = 0x40017a88)
                [!provide]                        PROVIDE (r_hci_fc_init = 0x40017974)
                [!provide]                        PROVIDE (r_hci_fc_sync_buf_size_set = 0x400179b0)
                [!provide]                        PROVIDE (r_hci_fc_sync_en = 0x40017a30)
                [!provide]                        PROVIDE (r_hci_fc_sync_packet_sent = 0x40017a54)
                [!provide]                        PROVIDE (r_hci_init = 0x40018538)
                [!provide]                        PROVIDE (r_hci_look_for_cmd_desc = 0x40018454)
                [!provide]                        PROVIDE (r_hci_look_for_dbg_evt_desc = 0x400184c4)
                [!provide]                        PROVIDE (r_hci_look_for_evt_desc = 0x400184a0)
                [!provide]                        PROVIDE (r_hci_look_for_le_evt_desc = 0x400184e0)
                [!provide]                        PROVIDE (r_hci_reset = 0x4001856c)
                [!provide]                        PROVIDE (r_hci_send_2_host = 0x400185bc)
                [!provide]                        PROVIDE (r_hci_sync_tx_data_alloc = 0x40019754)
                [!provide]                        PROVIDE (r_hci_sync_tx_data_received = 0x400197c0)
                [!provide]                        PROVIDE (r_hci_tl_init = 0x40019290)
                [!provide]                        PROVIDE (r_hci_tl_send = 0x40019228)
                [!provide]                        PROVIDE (r_hci_util_pack = 0x40019874)
                [!provide]                        PROVIDE (r_hci_util_unpack = 0x40019998)
                [!provide]                        PROVIDE (r_hci_voice_settings_get = 0x40018bdc)
                [!provide]                        PROVIDE (r_hci_voice_settings_set = 0x40018be8)
                [!provide]                        PROVIDE (r_HMAC = 0x40013968)
                [!provide]                        PROVIDE (r_import_rf_phy_func = 0x3ffb8354)
                [!provide]                        PROVIDE (r_import_rf_phy_func_p = 0x3ffafd64)
                [!provide]                        PROVIDE (r_ip_funcs = 0x3ffae710)
                [!provide]                        PROVIDE (r_ip_funcs_p = 0x3ffae70c)
                [!provide]                        PROVIDE (r_ke_check_malloc = 0x40019de0)
                [!provide]                        PROVIDE (r_ke_event_callback_set = 0x40019ba8)
                [!provide]                        PROVIDE (r_ke_event_clear = 0x40019c2c)
                [!provide]                        PROVIDE (r_ke_event_flush = 0x40019ccc)
                [!provide]                        PROVIDE (r_ke_event_get = 0x40019c78)
                [!provide]                        PROVIDE (r_ke_event_get_all = 0x40019cc0)
                [!provide]                        PROVIDE (r_ke_event_init = 0x40019b90)
                [!provide]                        PROVIDE (r_ke_event_schedule = 0x40019cdc)
                [!provide]                        PROVIDE (r_ke_event_set = 0x40019be0)
                [!provide]                        PROVIDE (r_ke_flush = 0x4001a374)
                [!provide]                        PROVIDE (r_ke_free = 0x4001a014)
                [!provide]                        PROVIDE (r_ke_get_max_mem_usage = 0x4001a1c8)
                [!provide]                        PROVIDE (r_ke_get_mem_usage = 0x4001a1a0)
                [!provide]                        PROVIDE (r_ke_init = 0x4001a318)
                [!provide]                        PROVIDE (r_ke_is_free = 0x4001a184)
                [!provide]                        PROVIDE (r_ke_malloc = 0x40019eb4)
                [!provide]                        PROVIDE (r_ke_mem_init = 0x40019d3c)
                [!provide]                        PROVIDE (r_ke_mem_is_empty = 0x40019d8c)
                [!provide]                        PROVIDE (r_ke_msg_alloc = 0x4001a1e0)
                [!provide]                        PROVIDE (r_ke_msg_dest_id_get = 0x4001a2e0)
                [!provide]                        PROVIDE (r_ke_msg_discard = 0x4001a850)
                [!provide]                        PROVIDE (r_ke_msg_forward = 0x4001a290)
                [!provide]                        PROVIDE (r_ke_msg_forward_new_id = 0x4001a2ac)
                [!provide]                        PROVIDE (r_ke_msg_free = 0x4001a2cc)
                [!provide]                        PROVIDE (r_ke_msg_in_queue = 0x4001a2f8)
                [!provide]                        PROVIDE (r_ke_msg_save = 0x4001a858)
                [!provide]                        PROVIDE (r_ke_msg_send = 0x4001a234)
                [!provide]                        PROVIDE (r_ke_msg_send_basic = 0x4001a26c)
                [!provide]                        PROVIDE (r_ke_msg_src_id_get = 0x4001a2ec)
                [!provide]                        PROVIDE (r_ke_queue_extract = 0x40055fd0)
                [!provide]                        PROVIDE (r_ke_queue_insert = 0x40056020)
                [!provide]                        PROVIDE (r_ke_sleep_check = 0x4001a3d8)
                [!provide]                        PROVIDE (r_ke_state_get = 0x4001a7d8)
                [!provide]                        PROVIDE (r_ke_state_set = 0x4001a6fc)
                [!provide]                        PROVIDE (r_ke_stats_get = 0x4001a3f0)
                [!provide]                        PROVIDE (r_ke_task_check = 0x4001a8a4)
                [!provide]                        PROVIDE (r_ke_task_create = 0x4001a674)
                [!provide]                        PROVIDE (r_ke_task_delete = 0x4001a6c0)
                [!provide]                        PROVIDE (r_ke_task_init = 0x4001a650)
                [!provide]                        PROVIDE (r_ke_task_msg_flush = 0x4001a860)
                [!provide]                        PROVIDE (r_ke_timer_active = 0x4001ac08)
                [!provide]                        PROVIDE (r_ke_timer_adjust_all = 0x4001ac30)
                [!provide]                        PROVIDE (r_ke_timer_clear = 0x4001ab90)
                [!provide]                        PROVIDE (r_ke_timer_init = 0x4001aa9c)
                [!provide]                        PROVIDE (r_ke_timer_set = 0x4001aac0)
                [!provide]                        PROVIDE (r_ke_timer_sleep_check = 0x4001ac50)
                [!provide]                        PROVIDE (r_KPrimC = 0x40010ad4)
                [!provide]                        PROVIDE (r_lb_clk_adj_activate = 0x4001ae70)
                [!provide]                        PROVIDE (r_lb_clk_adj_id_get = 0x4001af14)
                [!provide]                        PROVIDE (r_lb_clk_adj_period_update = 0x4001af20)
                [!provide]                        PROVIDE (r_lb_init = 0x4001acd4)
                [!provide]                        PROVIDE (r_lb_mst_key = 0x4001afc0)
                [!provide]                        PROVIDE (r_lb_mst_key_cmp = 0x4001af74)
                [!provide]                        PROVIDE (r_lb_mst_key_restart_enc = 0x4001b0d4)
                [!provide]                        PROVIDE (r_lb_mst_start_act_bcst_enc = 0x4001b198)
                [!provide]                        PROVIDE (r_lb_mst_stop_act_bcst_enc = 0x4001b24c)
                [!provide]                        PROVIDE (r_lb_reset = 0x4001ad38)
                [!provide]                        PROVIDE (r_lb_send_lmp = 0x4001adbc)
                [!provide]                        PROVIDE (r_lb_send_pdu_clk_adj = 0x4001af3c)
                [!provide]                        PROVIDE (r_lb_util_get_csb_mode = 0x4001ada4)
                [!provide]                        PROVIDE (r_lb_util_get_nb_broadcast = 0x4001ad80)
                [!provide]                        PROVIDE (r_lb_util_get_res_lt_addr = 0x4001ad98)
                [!provide]                        PROVIDE (r_lb_util_set_nb_broadcast = 0x4001ad8c)
                [!provide]                        PROVIDE (r_lc_afh_set = 0x4001cc74)
                [!provide]                        PROVIDE (r_lc_afh_start = 0x4001d240)
                [!provide]                        PROVIDE (r_lc_auth_cmp = 0x4001cd54)
                [!provide]                        PROVIDE (r_lc_calc_link_key = 0x4001ce7c)
                [!provide]                        PROVIDE (r_lc_chg_pkt_type_cmp = 0x4001d038)
                [!provide]                        PROVIDE (r_lc_chg_pkt_type_cont = 0x4001cfbc)
                [!provide]                        PROVIDE (r_lc_chg_pkt_type_retry = 0x4001d0ac)
                [!provide]                        PROVIDE (r_lc_chk_to = 0x4001d2a8)
                [!provide]                        PROVIDE (r_lc_cmd_stat_send = 0x4001c914)
                [!provide]                        PROVIDE (r_lc_comb_key_svr = 0x4001d30c)
                [!provide]                        PROVIDE (r_lc_con_cmp = 0x4001d44c)
                [!provide]                        PROVIDE (r_lc_con_cmp_evt_send = 0x4001d4fc)
                [!provide]                        PROVIDE (r_lc_conn_seq_done = 0x40021334)
                [!provide]                        PROVIDE (r_lc_detach = 0x4002037c)
                [!provide]                        PROVIDE (r_lc_dhkey = 0x4001d564)
                [!provide]                        PROVIDE (r_lc_enc_cmp = 0x4001d8bc)
                [!provide]                        PROVIDE (r_lc_enc_key_refresh = 0x4001d720)
                [!provide]                        PROVIDE (r_lc_end_chk_colli = 0x4001d858)
                [!provide]                        PROVIDE (r_lc_end_of_sniff_nego = 0x4001d9a4)
                [!provide]                        PROVIDE (r_lc_enter_sniff_mode = 0x4001ddb8)
                [!provide]                        PROVIDE (r_lc_epr_change_lk = 0x4001db38)
                [!provide]                        PROVIDE (r_lc_epr_cmp = 0x4001da88)
                [!provide]                        PROVIDE (r_lc_epr_resp = 0x4001e0b4)
                [!provide]                        PROVIDE (r_lc_epr_rsw_cmp = 0x4001dd40)
                [!provide]                        PROVIDE (r_lc_ext_feat = 0x40020d6c)
                [!provide]                        PROVIDE (r_lc_feat = 0x40020984)
                [!provide]                        PROVIDE (r_lc_hl_connect = 0x400209e8)
                [!provide]                        PROVIDE (r_lc_init = 0x4001c948)
                [!provide]                        PROVIDE (r_lc_init_calc_f3 = 0x4001deb0)
                [!provide]                        PROVIDE (r_lc_initiator_epr = 0x4001e064)
                [!provide]                        PROVIDE (r_lc_init_passkey_loop = 0x4001dfc0)
                [!provide]                        PROVIDE (r_lc_init_start_mutual_auth = 0x4001df60)
                [!provide]                        PROVIDE (r_lc_key_exch_end = 0x4001e140)
                [!provide]                        PROVIDE (r_lc_legacy_pair = 0x4001e1c0)
                [!provide]                        PROVIDE (r_lc_local_switch = 0x4001e22c)
                [!provide]                        PROVIDE (r_lc_local_trans_mode = 0x4001e2e4)
                [!provide]                        PROVIDE (r_lc_local_untrans_mode = 0x4001e3a0)
                [!provide]                        PROVIDE (r_lc_loc_auth = 0x40020ecc)
                [!provide]                        PROVIDE (r_lc_locepr_lkref = 0x4001d648)
                [!provide]                        PROVIDE (r_lc_locepr_rsw = 0x4001d5d0)
                [!provide]                        PROVIDE (r_lc_loc_sniff = 0x40020a6c)
                [!provide]                        PROVIDE (r_lc_max_slot_mgt = 0x4001e410)
                [!provide]                        PROVIDE (r_lc_mst_key = 0x4001e7c0)
                [!provide]                        PROVIDE (r_lc_mst_qos_done = 0x4001ea80)
                [!provide]                        PROVIDE (r_lc_mst_send_mst_key = 0x4001e8f4)
                [!provide]                        PROVIDE (r_lc_mutual_auth_end = 0x4001e670)
                [!provide]                        PROVIDE (r_lc_mutual_auth_end2 = 0x4001e4f4)
                [!provide]                        PROVIDE (r_lc_packet_type = 0x40021038)
                [!provide]                        PROVIDE (r_lc_pair = 0x40020ddc)
                [!provide]                        PROVIDE (r_lc_pairing_cont = 0x4001eafc)
                [!provide]                        PROVIDE (r_lc_passkey_comm = 0x4001ed20)
                [!provide]                        PROVIDE (r_lc_prepare_all_links_for_clk_adj = 0x40021430)
                [!provide]                        PROVIDE (r_lc_proc_rcv_dhkey = 0x4001edec)
                [!provide]                        PROVIDE (r_lc_ptt = 0x4001ee2c)
                [!provide]                        PROVIDE (r_lc_ptt_cmp = 0x4001eeec)
                [!provide]                        PROVIDE (r_lc_qos_setup = 0x4001ef50)
                [!provide]                        PROVIDE (r_lc_rd_rem_name = 0x4001efd0)
                [!provide]                        PROVIDE (r_lc_release = 0x4001f8a8)
                [!provide]                        PROVIDE (r_lc_rem_enc = 0x4001f124)
                [!provide]                        PROVIDE (r_lc_rem_name_cont = 0x4001f290)
                [!provide]                        PROVIDE (r_lc_rem_nego_trans_mode = 0x4001f1b4)
                [!provide]                        PROVIDE (r_lc_rem_sniff = 0x40020ca4)
                [!provide]                        PROVIDE (r_lc_rem_sniff_sub_rate = 0x40020b10)
                [!provide]                        PROVIDE (r_lc_rem_switch = 0x4001f070)
                [!provide]                        PROVIDE (r_lc_rem_trans_mode = 0x4001f314)
                [!provide]                        PROVIDE (r_lc_rem_unsniff = 0x400207a0)
                [!provide]                        PROVIDE (r_lc_rem_untrans_mode = 0x4001f36c)
                [!provide]                        PROVIDE (r_lc_reset = 0x4001c99c)
                [!provide]                        PROVIDE (r_lc_resp_auth = 0x4001f518)
                [!provide]                        PROVIDE (r_lc_resp_calc_f3 = 0x4001f710)
                [!provide]                        PROVIDE (r_lc_resp_num_comp = 0x40020074)
                [!provide]                        PROVIDE (r_lc_resp_oob_nonce = 0x4001f694)
                [!provide]                        PROVIDE (r_lc_resp_oob_wait_nonce = 0x4001f66c)
                [!provide]                        PROVIDE (r_lc_resp_pair = 0x400208a4)
                [!provide]                        PROVIDE (r_lc_resp_sec_auth = 0x4001f4a0)
                [!provide]                        PROVIDE (r_lc_resp_wait_dhkey_cont = 0x4001f86c)
                [!provide]                        PROVIDE (r_lc_restart_enc = 0x4001f8ec)
                [!provide]                        PROVIDE (r_lc_restart_enc_cont = 0x4001f940)
                [!provide]                        PROVIDE (r_lc_restore_afh_reporting = 0x4001f028)
                [!provide]                        PROVIDE (r_lc_restore_to = 0x4001f9e0)
                [!provide]                        PROVIDE (r_lc_ret_sniff_max_slot_chg = 0x4001fa30)
                [!provide]                        PROVIDE (r_lc_rsw_clean_up = 0x4001dc70)
                [!provide]                        PROVIDE (r_lc_rsw_done = 0x4001db94)
                [!provide]                        PROVIDE (r_lc_sco_baseband_ack = 0x40022b00)
                [!provide]                        PROVIDE (r_lc_sco_detach = 0x40021e40)
                [!provide]                        PROVIDE (r_lc_sco_host_accept = 0x40022118)
                [!provide]                        PROVIDE (r_lc_sco_host_reject = 0x400222b8)
                [!provide]                        PROVIDE (r_lc_sco_host_request = 0x40021f4c)
                [!provide]                        PROVIDE (r_lc_sco_host_request_disc = 0x4002235c)
                [!provide]                        PROVIDE (r_lc_sco_init = 0x40021dc8)
                [!provide]                        PROVIDE (r_lc_sco_peer_accept = 0x40022780)
                [!provide]                        PROVIDE (r_lc_sco_peer_accept_disc = 0x40022a08)
                [!provide]                        PROVIDE (r_lc_sco_peer_reject = 0x40022824)
                [!provide]                        PROVIDE (r_lc_sco_peer_reject_disc = 0x40022a8c)
                [!provide]                        PROVIDE (r_lc_sco_peer_request = 0x4002240c)
                [!provide]                        PROVIDE (r_lc_sco_peer_request_disc = 0x400228ec)
                [!provide]                        PROVIDE (r_lc_sco_release = 0x40021eec)
                [!provide]                        PROVIDE (r_lc_sco_reset = 0x40021dfc)
                [!provide]                        PROVIDE (r_lc_sco_timeout = 0x40022bd4)
                [!provide]                        PROVIDE (r_lc_sec_auth_compute_sres = 0x4001f3ec)
                [!provide]                        PROVIDE (r_lc_semi_key_cmp = 0x40020294)
                [!provide]                        PROVIDE (r_lc_send_enc_chg_evt = 0x4002134c)
                [!provide]                        PROVIDE (r_lc_send_enc_mode = 0x40020220)
                [!provide]                        PROVIDE (r_lc_send_lmp = 0x4001c1a8)
                [!provide]                        PROVIDE (r_lc_send_pdu_acc = 0x4001c21c)
                [!provide]                        PROVIDE (r_lc_send_pdu_acc_ext4 = 0x4001c240)
                [!provide]                        PROVIDE (r_lc_send_pdu_au_rand = 0x4001c308)
                [!provide]                        PROVIDE (r_lc_send_pdu_auto_rate = 0x4001c5d0)
                [!provide]                        PROVIDE (r_lc_send_pdu_clk_adj_ack = 0x4001c46c)
                [!provide]                        PROVIDE (r_lc_send_pdu_clk_adj_req = 0x4001c494)
                [!provide]                        PROVIDE (r_lc_send_pdu_comb_key = 0x4001c368)
                [!provide]                        PROVIDE (r_lc_send_pdu_dhkey_chk = 0x4001c8e8)
                [!provide]                        PROVIDE (r_lc_send_pdu_encaps_head = 0x4001c440)
                [!provide]                        PROVIDE (r_lc_send_pdu_encaps_payl = 0x4001c410)
                [!provide]                        PROVIDE (r_lc_send_pdu_enc_key_sz_req = 0x4001c670)
                [!provide]                        PROVIDE (r_lc_send_pdu_esco_lk_rem_req = 0x4001c5a8)
                [!provide]                        PROVIDE (r_lc_send_pdu_feats_ext_req = 0x4001c6ec)
                [!provide]                        PROVIDE (r_lc_send_pdu_feats_res = 0x4001c694)
                [!provide]                        PROVIDE (r_lc_send_pdu_in_rand = 0x4001c338)
                [!provide]                        PROVIDE (r_lc_send_pdu_io_cap_res = 0x4001c72c)
                [!provide]                        PROVIDE (r_lc_send_pdu_lsto = 0x4001c64c)
                [!provide]                        PROVIDE (r_lc_send_pdu_max_slot = 0x4001c3c8)
                [!provide]                        PROVIDE (r_lc_send_pdu_max_slot_req = 0x4001c3ec)
                [!provide]                        PROVIDE (r_lc_send_pdu_not_acc = 0x4001c26c)
                [!provide]                        PROVIDE (r_lc_send_pdu_not_acc_ext4 = 0x4001c294)
                [!provide]                        PROVIDE (r_lc_send_pdu_num_comp_fail = 0x4001c770)
                [!provide]                        PROVIDE (r_lc_send_pdu_pause_enc_aes_req = 0x4001c794)
                [!provide]                        PROVIDE (r_lc_send_pdu_paus_enc_req = 0x4001c7c0)
                [!provide]                        PROVIDE (r_lc_send_pdu_ptt_req = 0x4001c4c0)
                [!provide]                        PROVIDE (r_lc_send_pdu_qos_req = 0x4001c82c)
                [!provide]                        PROVIDE (r_lc_send_pdu_resu_enc_req = 0x4001c7e4)
                [!provide]                        PROVIDE (r_lc_send_pdu_sco_lk_rem_req = 0x4001c580)
                [!provide]                        PROVIDE (r_lc_send_pdu_set_afh = 0x4001c2c8)
                [!provide]                        PROVIDE (r_lc_send_pdu_setup_cmp = 0x4001c808)
                [!provide]                        PROVIDE (r_lc_send_pdu_slot_off = 0x4001c854)
                [!provide]                        PROVIDE (r_lc_send_pdu_sniff_req = 0x4001c5f0)
                [!provide]                        PROVIDE (r_lc_send_pdu_sp_cfm = 0x4001c518)
                [!provide]                        PROVIDE (r_lc_send_pdu_sp_nb = 0x4001c4e8)
                [!provide]                        PROVIDE (r_lc_send_pdu_sres = 0x4001c548)
                [!provide]                        PROVIDE (r_lc_send_pdu_tim_acc = 0x4001c6cc)
                [!provide]                        PROVIDE (r_lc_send_pdu_unit_key = 0x4001c398)
                [!provide]                        PROVIDE (r_lc_send_pdu_unsniff_req = 0x4001c894)
                [!provide]                        PROVIDE (r_lc_send_pdu_vers_req = 0x4001c8b4)
                [!provide]                        PROVIDE (r_lc_skip_hl_oob_req = 0x400201bc)
                [!provide]                        PROVIDE (r_lc_sniff_init = 0x40022cac)
                [!provide]                        PROVIDE (r_lc_sniff_max_slot_chg = 0x40020590)
                [!provide]                        PROVIDE (r_lc_sniff_reset = 0x40022cc8)
                [!provide]                        PROVIDE (r_lc_sniff_slot_unchange = 0x40021100)
                [!provide]                        PROVIDE (r_lc_sniff_sub_mode = 0x400204fc)
                [!provide]                        PROVIDE (r_lc_sp_end = 0x400213a8)
                [!provide]                        PROVIDE (r_lc_sp_fail = 0x40020470)
                [!provide]                        PROVIDE (r_lc_sp_oob_tid_fail = 0x400204cc)
                [!provide]                        PROVIDE (r_lc_ssr_nego = 0x4002125c)
                [!provide]                        PROVIDE (r_lc_start = 0x4001ca28)
                [!provide]                        PROVIDE (r_lc_start_enc = 0x4001fb28)
                [!provide]                        PROVIDE (r_lc_start_enc_key_size = 0x4001fd9c)
                [!provide]                        PROVIDE (r_lc_start_key_exch = 0x4001fe10)
                [!provide]                        PROVIDE (r_lc_start_lmp_to = 0x4001fae8)
                [!provide]                        PROVIDE (r_lc_start_oob = 0x4001fffc)
                [!provide]                        PROVIDE (r_lc_start_passkey = 0x4001feac)
                [!provide]                        PROVIDE (r_lc_start_passkey_loop = 0x4001ff88)
                [!provide]                        PROVIDE (r_lc_stop_afh_report = 0x40020184)
                [!provide]                        PROVIDE (r_lc_stop_enc = 0x40020110)
                [!provide]                        PROVIDE (r_lc_switch_cmp = 0x40020448)
                [!provide]                        PROVIDE (r_lc_unit_key_svr = 0x400206d8)
                [!provide]                        PROVIDE (r_lc_unsniff = 0x40020c50)
                [!provide]                        PROVIDE (r_lc_unsniff_cmp = 0x40020810)
                [!provide]                        PROVIDE (r_lc_unsniff_cont = 0x40020750)
                [!provide]                        PROVIDE (r_lc_upd_to = 0x4002065c)
                [!provide]                        PROVIDE (r_lc_util_convert_pref_rate_to_packet_type = 0x4002f9b0)
                [!provide]                        PROVIDE (r_lc_util_get_max_packet_size = 0x4002f4ac)
                [!provide]                        PROVIDE (r_lc_util_get_offset_clke = 0x4002f538)
                [!provide]                        PROVIDE (r_lc_util_get_offset_clkn = 0x4002f51c)
                [!provide]                        PROVIDE (r_lc_util_set_loc_trans_coll = 0x4002f500)
                [!provide]                        PROVIDE (r_lc_version = 0x40020a30)
                [!provide]                        PROVIDE (lc_set_encap_pdu_data_p192 = 0x4002e4c8)
                [!provide]                        PROVIDE (lc_set_encap_pdu_data_p256 = 0x4002e454)
                [!provide]                        PROVIDE (lm_get_auth_method = 0x40023420)
                [!provide]                        PROVIDE (lmp_accepted_ext_handler = 0x40027290)
                [!provide]                        PROVIDE (lmp_not_accepted_ext_handler = 0x40029c54)
                [!provide]                        PROVIDE (lmp_clk_adj_handler = 0x40027468)
                [!provide]                        PROVIDE (lmp_clk_adj_ack_handler = 0x400274f4)
                [!provide]                        PROVIDE (lm_get_auth_method = 0x40023420)
                [!provide]                        PROVIDE (lmp_accepted_ext_handler = 0x40027290)
                [!provide]                        PROVIDE (lmp_not_accepted_ext_handler = 0x40029c54)
                [!provide]                        PROVIDE (lmp_clk_adj_handler = 0x40027468)
                [!provide]                        PROVIDE (lmp_clk_adj_ack_handler = 0x400274f4)
                [!provide]                        PROVIDE (lmp_clk_adj_req_handler = 0x4002751c)
                [!provide]                        PROVIDE (lmp_feats_res_ext_handler = 0x4002cac4)
                [!provide]                        PROVIDE (lmp_feats_req_ext_handler = 0x4002ccb0)
                [!provide]                        PROVIDE (lmp_pkt_type_tbl_req_handler = 0x40027574)
                [!provide]                        PROVIDE (lmp_esco_link_req_handler = 0x40027610)
                [!provide]                        PROVIDE (lmp_rmv_esco_link_req_handler = 0x400276e8)
                [!provide]                        PROVIDE (lmp_ch_class_req_handler = 0x40027730)
                [!provide]                        PROVIDE (lmp_ch_class_handler = 0x4002ca18)
                [!provide]                        PROVIDE (lmp_ssr_req_handler = 0x4002780c)
                [!provide]                        PROVIDE (lmp_ssr_res_handler = 0x40027900)
                [!provide]                        PROVIDE (lmp_pause_enc_aes_req_handler = 0x400279a4)
                [!provide]                        PROVIDE (lmp_pause_enc_req_handler = 0x4002df90)
                [!provide]                        PROVIDE (lmp_resume_enc_req_handler = 0x4002e084)
                [!provide]                        PROVIDE (lmp_num_comparison_fail_handler = 0x40027a74)
                [!provide]                        PROVIDE (lmp_passkey_fail_handler = 0x40027aec)
                [!provide]                        PROVIDE (lmp_keypress_notif_handler = 0x4002c5c8)
                [!provide]                        PROVIDE (lmp_pwr_ctrl_req_handler = 0x400263bc)
                [!provide]                        PROVIDE (lmp_pwr_ctrl_res_handler = 0x40026480)
                [!provide]                        PROVIDE (lmp_auto_rate_handler = 0x40026548)
                [!provide]                        PROVIDE (lmp_pref_rate_handler = 0x4002657c)
                [!provide]                        PROVIDE (lmp_name_req_handler = 0x40025050)
                [!provide]                        PROVIDE (lmp_name_res_handler = 0x400250bc)
                [!provide]                        PROVIDE (lmp_not_accepted_handler = 0x400251d0)
                [!provide]                        PROVIDE (lmp_accepted_handler = 0x4002e894)
                [!provide]                        PROVIDE (lmp_clk_off_req_handler = 0x40025a44)
                [!provide]                        PROVIDE (lmp_clk_off_res_handler = 0x40025ab8)
                [!provide]                        PROVIDE (lmp_detach_handler = 0x40025b74)
                [!provide]                        PROVIDE (lmp_tempkey_handler = 0x4002b6b0)
                [!provide]                        PROVIDE (lmp_temprand_handler = 0x4002b74c)
                [!provide]                        PROVIDE (lmp_sres_handler = 0x4002b840)
                [!provide]                        PROVIDE (lmp_aurand_handler = 0x4002bda0)
                [!provide]                        PROVIDE (lmp_unitkey_handler = 0x4002c13c)
                [!provide]                        PROVIDE (lmp_combkey_handler = 0x4002c234)
                [!provide]                        PROVIDE (lmp_inrand_handler = 0x4002c414)
                [!provide]                        PROVIDE (lmp_oob_fail_handler = 0x40027b84)
                [!provide]                        PROVIDE (lmp_ping_req_handler = 0x40027c08)
                [!provide]                        PROVIDE (lmp_ping_res_handler = 0x40027c5c)
                [!provide]                        PROVIDE (lmp_enc_mode_req_handler = 0x40025c60)
                [!provide]                        PROVIDE (lmp_enc_key_size_req_handler = 0x40025e54)
                [!provide]                        PROVIDE (lmp_switch_req_handler = 0x40025f84)
                [!provide]                        PROVIDE (lmp_start_enc_req_handler = 0x4002e124)
                [!provide]                        PROVIDE (lmp_stop_enc_req_handler = 0x4002de30)
                [!provide]                        PROVIDE (lmp_sniff_req_handler = 0x400260c8)
                [!provide]                        PROVIDE (lmp_unsniff_req_handler = 0x400261e0)
                [!provide]                        PROVIDE (lmp_incr_pwr_req_handler = 0x4002629c)
                [!provide]                        PROVIDE (lmp_decr_pwr_req_handler = 0x400262f8)
                [!provide]                        PROVIDE (lmp_max_pwr_handler = 0x40026354)
                [!provide]                        PROVIDE (lmp_min_pwr_handler = 0x40026388)
                [!provide]                        PROVIDE (lmp_ver_req_handler = 0x400265f0)
                [!provide]                        PROVIDE (lmp_ver_res_handler = 0x40026670)
                [!provide]                        PROVIDE (lmp_qos_handler = 0x40026790)
                [!provide]                        PROVIDE (lmp_qos_req_handler = 0x40026844)
                [!provide]                        PROVIDE (lmp_sco_link_req_handler = 0x40026930)
                [!provide]                        PROVIDE (lmp_rmv_sco_link_req_handler = 0x40026a10)
                [!provide]                        PROVIDE (lmp_max_slot_handler = 0x40026a54)
                [!provide]                        PROVIDE (lmp_max_slot_req_handler = 0x40026aac)
                [!provide]                        PROVIDE (lmp_timing_accu_req_handler = 0x40026b54)
                [!provide]                        PROVIDE (lmp_timing_accu_res_handler = 0x40026bcc)
                [!provide]                        PROVIDE (lmp_setup_cmp_handler = 0x40026c84)
                [!provide]                        PROVIDE (lmp_feats_res_handler = 0x4002b548)
                [!provide]                        PROVIDE (lmp_feats_req_handler = 0x4002b620)
                [!provide]                        PROVIDE (lmp_host_con_req_handler = 0x4002b3d8)
                [!provide]                        PROVIDE (lmp_use_semi_perm_key_handler = 0x4002b4c4)
                [!provide]                        PROVIDE (lmp_slot_off_handler = 0x40026cc8)
                [!provide]                        PROVIDE (lmp_page_mode_req_handler = 0x40026d0c)
                [!provide]                        PROVIDE (lmp_page_scan_mode_req_handler = 0x40026d4c)
                [!provide]                        PROVIDE (lmp_supv_to_handler = 0x40026d94)
                [!provide]                        PROVIDE (lmp_test_activate_handler = 0x40026e7c)
                [!provide]                        PROVIDE (lmp_test_ctrl_handler = 0x40026ee4)
                [!provide]                        PROVIDE (lmp_enc_key_size_mask_req_handler = 0x40027038)
                [!provide]                        PROVIDE (lmp_enc_key_size_mask_res_handler = 0x400270a4)
                [!provide]                        PROVIDE (lmp_set_afh_handler = 0x4002b2e4)
                [!provide]                        PROVIDE (lmp_encaps_hdr_handler = 0x40027120)
                [!provide]                        PROVIDE (lmp_encaps_payl_handler = 0x4002e590)
                [!provide]                        PROVIDE (lmp_sp_nb_handler = 0x4002acf0)
                [!provide]                        PROVIDE (lmp_sp_cfm_handler = 0x4002b170)
                [!provide]                        PROVIDE (lmp_dhkey_chk_handler = 0x4002ab48)
                [!provide]                        PROVIDE (lmp_pause_enc_aes_req_handler = 0x400279a4)
                [!provide]                        PROVIDE (lmp_io_cap_res_handler = 0x4002c670)
                [!provide]                        PROVIDE (lmp_io_cap_req_handler = 0x4002c7a4)
                [!provide]                        PROVIDE (lc_cmd_cmp_bd_addr_send = 0x4002cec4)
                [!provide]                        PROVIDE (ld_acl_tx_packet_type_select = 0x4002fb40)
                [!provide]                        PROVIDE (ld_acl_sched = 0x40033268)
                [!provide]                        PROVIDE (ld_acl_sniff_sched = 0x4003340c)
                [!provide]                        PROVIDE (ld_acl_rx = 0x4003274c)
                [!provide]                        PROVIDE (ld_acl_tx = 0x4002ffdc)
                [!provide]                        PROVIDE (ld_acl_rx_sync = 0x4002fbec)
                [!provide]                        PROVIDE (ld_acl_rx_sync2 = 0x4002fd8c)
                [!provide]                        PROVIDE (ld_acl_rx_no_sync = 0x4002fe78)
                [!provide]                        PROVIDE (ld_acl_clk_isr = 0x40030cf8)
                [!provide]                        PROVIDE (ld_acl_rsw_frm_cbk = 0x40033bb0)
                [!provide]                        PROVIDE (ld_sco_modify = 0x40031778)
                [!provide]                        PROVIDE (lm_cmd_cmp_send = 0x40051838)
                [!provide]                        PROVIDE (ld_sco_frm_cbk = 0x400349dc)
                [!provide]                        PROVIDE (ld_acl_sco_rsvd_check = 0x4002fa94)
                [!provide]                        PROVIDE (ld_acl_sniff_frm_cbk = 0x4003482c)
                [!provide]                        PROVIDE (ld_inq_end = 0x4003ab48)
                [!provide]                        PROVIDE (ld_inq_sched = 0x4003aba4)
                [!provide]                        PROVIDE (ld_inq_frm_cbk = 0x4003ae4c)
                [!provide]                        PROVIDE (ld_pscan_frm_cbk = 0x4003ebe4)
                [!provide]                        PROVIDE (r_ld_acl_active_hop_types_get = 0x40036e10)
                [!provide]                        PROVIDE (r_ld_acl_afh_confirm = 0x40036d40)
                [!provide]                        PROVIDE (r_ld_acl_afh_prepare = 0x40036c84)
                [!provide]                        PROVIDE (r_ld_acl_afh_set = 0x40036b60)
                [!provide]                        PROVIDE (r_ld_acl_allowed_tx_packet_types_set = 0x40036810)
                [!provide]                        PROVIDE (r_ld_acl_bcst_rx_dec = 0x40036394)
                [!provide]                        PROVIDE (r_ld_acl_bit_off_get = 0x40036b18)
                [!provide]                        PROVIDE (r_ld_acl_clk_adj_set = 0x40036a00)
                [!provide]                        PROVIDE (r_ld_acl_clk_off_get = 0x40036b00)
                [!provide]                        PROVIDE (r_ld_acl_clk_set = 0x40036950)
                [!provide]                        PROVIDE (r_ld_acl_clock_offset_get = 0x400364c0)
                [!provide]                        PROVIDE (r_ld_acl_current_tx_power_get = 0x400368f0)
                [!provide]                        PROVIDE (r_ld_acl_data_flush = 0x400357bc)
                [!provide]                        PROVIDE (r_ld_acl_data_tx = 0x4003544c)
                [!provide]                        PROVIDE (r_ld_acl_edr_set = 0x4003678c)
                [!provide]                        PROVIDE (r_ld_acl_enc_key_load = 0x40036404)
                [!provide]                        PROVIDE (r_ld_acl_flow_off = 0x40035400)
                [!provide]                        PROVIDE (r_ld_acl_flow_on = 0x4003541c)
                [!provide]                        PROVIDE (r_ld_acl_flush_timeout_get = 0x40035f9c)
                [!provide]                        PROVIDE (r_ld_acl_flush_timeout_set = 0x40035fe0)
                [!provide]                        PROVIDE (r_ld_acl_init = 0x40034d08)
                [!provide]                        PROVIDE (r_ld_acl_lmp_flush = 0x40035d80)
                [!provide]                        PROVIDE (r_ld_acl_lmp_tx = 0x40035b34)
                [!provide]                        PROVIDE (r_ld_acl_lsto_get = 0x400366b4)
                [!provide]                        PROVIDE (r_ld_acl_lsto_set = 0x400366f8)
                [!provide]                        PROVIDE (r_ld_acl_reset = 0x40034d24)
                [!provide]                        PROVIDE (r_ld_acl_role_get = 0x40036b30)
                [!provide]                        PROVIDE (r_ld_acl_rssi_delta_get = 0x40037028)
                [!provide]                        PROVIDE (r_ld_acl_rsw_req = 0x40035e74)
                [!provide]                        PROVIDE (r_ld_acl_rx_enc = 0x40036344)
                [!provide]                        PROVIDE (r_ld_acl_rx_max_slot_get = 0x40036e58)
                [!provide]                        PROVIDE (r_ld_acl_rx_max_slot_set = 0x40036ea0)
                [!provide]                        PROVIDE (r_ld_acl_slot_offset_get = 0x4003653c)
                [!provide]                        PROVIDE (r_ld_acl_slot_offset_set = 0x40036658)
                [!provide]                        PROVIDE (r_ld_acl_sniff = 0x4003617c)
                [!provide]                        PROVIDE (r_ld_acl_sniff_trans = 0x400360a8)
                [!provide]                        PROVIDE (r_ld_acl_ssr_set = 0x40036274)
                [!provide]                        PROVIDE (r_ld_acl_start = 0x40034ddc)
                [!provide]                        PROVIDE (r_ld_acl_stop = 0x4003532c)
                [!provide]                        PROVIDE (r_ld_acl_test_mode_set = 0x40036f24)
                [!provide]                        PROVIDE (r_ld_acl_timing_accuracy_set = 0x4003673c)
                [!provide]                        PROVIDE (r_ld_acl_t_poll_get = 0x40036024)
                [!provide]                        PROVIDE (r_ld_acl_t_poll_set = 0x40036068)
                [!provide]                        PROVIDE (r_ld_acl_tx_enc = 0x400362f8)
                [!provide]                        PROVIDE (ld_acl_frm_cbk = 0x40034414)
                [!provide]                        PROVIDE (ld_acl_rsw_end = 0x40032bc0)
                [!provide]                        PROVIDE (ld_acl_end = 0x40033140)
                [!provide]                        PROVIDE (ld_acl_resched = 0x40033814)
                [!provide]                        PROVIDE (ld_acl_test_mode_update = 0x40032050)
                [!provide]                        PROVIDE (r_ld_acl_unsniff = 0x400361e0)
                [!provide]                        PROVIDE (r_ld_active_check = 0x4003cac4)
                [!provide]                        PROVIDE (r_ld_afh_ch_assess_data_get = 0x4003caec)
                [!provide]                        PROVIDE (r_ld_bcst_acl_data_tx = 0x40038d3c)
                [!provide]                        PROVIDE (r_ld_bcst_acl_init = 0x40038bd0)
                [!provide]                        PROVIDE (r_ld_bcst_acl_reset = 0x40038bdc)
                [!provide]                        PROVIDE (r_ld_bcst_acl_start = 0x4003882c)
                [!provide]                        PROVIDE (r_ld_bcst_afh_update = 0x40038f3c)
                [!provide]                        PROVIDE (r_ld_bcst_enc_key_load = 0x4003906c)
                [!provide]                        PROVIDE (r_ld_bcst_lmp_tx = 0x40038bf8)
                [!provide]                        PROVIDE (r_ld_bcst_tx_enc = 0x40038ff8)
                [!provide]                        PROVIDE (r_ld_bd_addr_get = 0x4003ca20)
                [!provide]                        PROVIDE (r_ld_channel_assess = 0x4003c184)
                [!provide]                        PROVIDE (r_ld_class_of_dev_get = 0x4003ca34)
                [!provide]                        PROVIDE (r_ld_class_of_dev_set = 0x4003ca50)
                [!provide]                        PROVIDE (r_ld_csb_rx_afh_update = 0x40039af4)
                [!provide]                        PROVIDE (r_ld_csb_rx_init = 0x40039690)
                [!provide]                        PROVIDE (r_ld_csb_rx_reset = 0x4003969c)
                [!provide]                        PROVIDE (r_ld_csb_rx_start = 0x4003972c)
                [!provide]                        PROVIDE (r_ld_csb_rx_stop = 0x40039bb8)
                [!provide]                        PROVIDE (r_ld_csb_tx_afh_update = 0x4003a5fc)
                [!provide]                        PROVIDE (r_ld_csb_tx_clr_data = 0x4003a71c)
                [!provide]                        PROVIDE (r_ld_csb_tx_dis = 0x4003a5e8)
                [!provide]                        PROVIDE (r_ld_csb_tx_en = 0x4003a1c0)
                [!provide]                        PROVIDE (r_ld_csb_tx_init = 0x4003a0e8)
                [!provide]                        PROVIDE (r_ld_csb_tx_reset = 0x4003a0f8)
                [!provide]                        PROVIDE (r_ld_csb_tx_set_data = 0x4003a6c0)
                [!provide]                        PROVIDE (r_ld_fm_clk_isr = 0x4003a7a8)
                [!provide]                        PROVIDE (r_ld_fm_frame_isr = 0x4003a82c)
                [!provide]                        PROVIDE (r_ld_fm_init = 0x4003a760)
                [!provide]                        PROVIDE (r_ld_fm_prog_check = 0x4003ab28)
                [!provide]                        PROVIDE (r_ld_fm_prog_disable = 0x4003a984)
                [!provide]                        PROVIDE (r_ld_fm_prog_enable = 0x4003a944)
                [!provide]                        PROVIDE (r_ld_fm_prog_push = 0x4003a9d4)
                [!provide]                        PROVIDE (r_ld_fm_reset = 0x4003a794)
                [!provide]                        PROVIDE (r_ld_fm_rx_isr = 0x4003a7f4)
                [!provide]                        PROVIDE (r_ld_fm_sket_isr = 0x4003a8a4)
                [!provide]                        PROVIDE (r_ld_init = 0x4003c294)
                [!provide]                        PROVIDE (r_ld_inq_init = 0x4003b15c)
                [!provide]                        PROVIDE (r_ld_inq_reset = 0x4003b168)
                [!provide]                        PROVIDE (r_ld_inq_start = 0x4003b1f0)
                [!provide]                        PROVIDE (r_ld_inq_stop = 0x4003b4f0)
                [!provide]                        PROVIDE (r_ld_iscan_eir_get = 0x4003c118)
                [!provide]                        PROVIDE (r_ld_iscan_eir_set = 0x4003bfa0)
                [!provide]                        PROVIDE (r_ld_iscan_init = 0x4003b9f0)
                [!provide]                        PROVIDE (r_ld_iscan_reset = 0x4003ba14)
                [!provide]                        PROVIDE (r_ld_iscan_restart = 0x4003ba44)
                [!provide]                        PROVIDE (r_ld_iscan_start = 0x4003bb28)
                [!provide]                        PROVIDE (r_ld_iscan_stop = 0x4003bf1c)
                [!provide]                        PROVIDE (r_ld_iscan_tx_pwr_get = 0x4003c138)
                [!provide]                        PROVIDE (r_ld_page_init = 0x4003d808)
                [!provide]                        PROVIDE (r_ld_page_reset = 0x4003d814)
                [!provide]                        PROVIDE (r_ld_page_start = 0x4003d848)
                [!provide]                        PROVIDE (r_ld_page_stop = 0x4003da54)
                [!provide]                        PROVIDE (r_ld_pca_coarse_clock_adjust = 0x4003e324)
                [!provide]                        PROVIDE (r_ld_pca_init = 0x4003deb4)
                [!provide]                        PROVIDE (r_ld_pca_initiate_clock_dragging = 0x4003e4ac)
                [!provide]                        PROVIDE (r_ld_pca_local_config = 0x4003df6c)
                [!provide]                        PROVIDE (r_ld_pca_mws_frame_sync = 0x4003e104)
                [!provide]                        PROVIDE (r_ld_pca_mws_moment_offset_gt = 0x4003e278)
                [!provide]                        PROVIDE (r_ld_pca_mws_moment_offset_lt = 0x4003e280)
                [!provide]                        PROVIDE (r_ld_pca_reporting_enable = 0x4003e018)
                [!provide]                        PROVIDE (r_ld_pca_reset = 0x4003df0c)
                [!provide]                        PROVIDE (r_ld_pca_update_target_offset = 0x4003e050)
                [!provide]                        PROVIDE (r_ld_pscan_evt_handler = 0x4003f238)
                [!provide]                        PROVIDE (r_ld_pscan_init = 0x4003f474)
                [!provide]                        PROVIDE (r_ld_pscan_reset = 0x4003f498)
                [!provide]                        PROVIDE (r_ld_pscan_restart = 0x4003f4b8)
                [!provide]                        PROVIDE (r_ld_pscan_start = 0x4003f514)
                [!provide]                        PROVIDE (r_ld_pscan_stop = 0x4003f618)
                [!provide]                        PROVIDE (r_ld_read_clock = 0x4003c9e4)
                [!provide]                        PROVIDE (r_ld_reset = 0x4003c714)
                [!provide]                        PROVIDE (r_ld_sched_acl_add = 0x4003f978)
                [!provide]                        PROVIDE (r_ld_sched_acl_remove = 0x4003f99c)
                [!provide]                        PROVIDE (r_ld_sched_compute = 0x4003f6f8)
                [!provide]                        PROVIDE (r_ld_sched_init = 0x4003f7ac)
                [!provide]                        PROVIDE (r_ld_sched_inq_add = 0x4003f8a8)
                [!provide]                        PROVIDE (r_ld_sched_inq_remove = 0x4003f8d0)
                [!provide]                        PROVIDE (r_ld_sched_iscan_add = 0x4003f7e8)
                [!provide]                        PROVIDE (r_ld_sched_iscan_remove = 0x4003f808)
                [!provide]                        PROVIDE (r_ld_sched_page_add = 0x4003f910)
                [!provide]                        PROVIDE (r_ld_sched_page_remove = 0x4003f938)
                [!provide]                        PROVIDE (r_ld_sched_pscan_add = 0x4003f828)
                [!provide]                        PROVIDE (r_ld_sched_pscan_remove = 0x4003f848)
                [!provide]                        PROVIDE (r_ld_sched_reset = 0x4003f7d4)
                [!provide]                        PROVIDE (r_ld_sched_sco_add = 0x4003fa4c)
                [!provide]                        PROVIDE (r_ld_sched_sco_remove = 0x4003fa9c)
                [!provide]                        PROVIDE (r_ld_sched_sniff_add = 0x4003f9c4)
                [!provide]                        PROVIDE (r_ld_sched_sniff_remove = 0x4003fa0c)
                [!provide]                        PROVIDE (r_ld_sched_sscan_add = 0x4003f868)
                [!provide]                        PROVIDE (r_ld_sched_sscan_remove = 0x4003f888)
                [!provide]                        PROVIDE (r_ld_sco_audio_isr = 0x40037cc8)
                [!provide]                        PROVIDE (r_ld_sco_data_tx = 0x40037ee8)
                [!provide]                        PROVIDE (r_ld_sco_start = 0x40037110)
                [!provide]                        PROVIDE (r_ld_sco_stop = 0x40037c40)
                [!provide]                        PROVIDE (r_ld_sco_update = 0x40037a74)
                [!provide]                        PROVIDE (r_ld_sscan_activated = 0x4004031c)
                [!provide]                        PROVIDE (r_ld_sscan_init = 0x400402f0)
                [!provide]                        PROVIDE (r_ld_sscan_reset = 0x400402fc)
                [!provide]                        PROVIDE (r_ld_sscan_start = 0x40040384)
                [!provide]                        PROVIDE (r_ld_strain_init = 0x400409f4)
                [!provide]                        PROVIDE (r_ld_strain_reset = 0x40040a00)
                [!provide]                        PROVIDE (r_ld_strain_start = 0x40040a8c)
                [!provide]                        PROVIDE (r_ld_strain_stop = 0x40040df0)
                [!provide]                        PROVIDE (r_ld_timing_accuracy_get = 0x4003caac)
                [!provide]                        PROVIDE (r_ld_util_active_master_afh_map_get = 0x4004131c)
                [!provide]                        PROVIDE (r_ld_util_active_master_afh_map_set = 0x40041308)
                [!provide]                        PROVIDE (r_ld_util_bch_create = 0x40040fcc)
                [!provide]                        PROVIDE (r_ld_util_fhs_pk = 0x400411c8)
                [!provide]                        PROVIDE (r_ld_util_fhs_unpk = 0x40040e54)
                [!provide]                        PROVIDE (r_ld_util_stp_pk = 0x400413f4)
                [!provide]                        PROVIDE (r_ld_util_stp_unpk = 0x40041324)
                [!provide]                        PROVIDE (r_ld_version_get = 0x4003ca6c)
                [!provide]                        PROVIDE (r_ld_wlcoex_set = 0x4003caf8)
                [!provide]                        PROVIDE (r_llc_ch_assess_get_current_ch_map = 0x40041574)
                [!provide]                        PROVIDE (r_llc_ch_assess_get_local_ch_map = 0x4004150c)
                [!provide]                        PROVIDE (r_llc_ch_assess_local = 0x40041494)
                [!provide]                        PROVIDE (r_llc_ch_assess_merge_ch = 0x40041588)
                [!provide]                        PROVIDE (r_llc_ch_assess_reass_ch = 0x400415c0)
                [!provide]                        PROVIDE (r_llc_common_cmd_complete_send = 0x40044eac)
                [!provide]                        PROVIDE (r_llc_common_cmd_status_send = 0x40044ee0)
                [!provide]                        PROVIDE (r_llc_common_enc_change_evt_send = 0x40044f6c)
                [!provide]                        PROVIDE (r_llc_common_enc_key_ref_comp_evt_send = 0x40044f38)
                [!provide]                        PROVIDE (r_llc_common_flush_occurred_send = 0x40044f0c)
                [!provide]                        PROVIDE (r_llc_common_nb_of_pkt_comp_evt_send = 0x40045000)
                [!provide]                        PROVIDE (r_llc_con_update_complete_send = 0x40044d68)
                [!provide]                        PROVIDE (r_llc_con_update_finished = 0x4004518c)
                [!provide]                        PROVIDE (r_llc_con_update_ind = 0x40045038)
                [!provide]                        PROVIDE (r_llc_discon_event_complete_send = 0x40044a30)
                [!provide]                        PROVIDE (r_llc_end_evt_defer = 0x40046330)
                [!provide]                        PROVIDE (r_llc_feats_rd_event_send = 0x40044e0c)
                [!provide]                        PROVIDE (r_llc_init = 0x40044778)
                [!provide]                        PROVIDE (r_llc_le_con_cmp_evt_send = 0x40044a78)
                [!provide]                        PROVIDE (r_llc_llcp_ch_map_update_pdu_send = 0x40043f94)
                [!provide]                        PROVIDE (r_llc_llcp_con_param_req_pdu_send = 0x400442fc)
                [!provide]                        PROVIDE (r_llc_llcp_con_param_rsp_pdu_send = 0x40044358)
                [!provide]                        PROVIDE (r_llc_llcp_con_update_pdu_send = 0x400442c4)
                [!provide]                        PROVIDE (r_llc_llcp_enc_req_pdu_send = 0x40044064)
                [!provide]                        PROVIDE (r_llc_llcp_enc_rsp_pdu_send = 0x40044160)
                [!provide]                        PROVIDE (r_llc_llcp_feats_req_pdu_send = 0x400443b4)
                [!provide]                        PROVIDE (r_llc_llcp_feats_rsp_pdu_send = 0x400443f0)
                [!provide]                        PROVIDE (r_llc_llcp_get_autorize = 0x4004475c)
                [!provide]                        PROVIDE (r_llc_llcp_length_req_pdu_send = 0x40044574)
                [!provide]                        PROVIDE (r_llc_llcp_length_rsp_pdu_send = 0x400445ac)
                [!provide]                        PROVIDE (r_llc_llcp_pause_enc_req_pdu_send = 0x40043fd8)
                [!provide]                        PROVIDE (r_llc_llcp_pause_enc_rsp_pdu_send = 0x40044010)
                [!provide]                        PROVIDE (r_llc_llcp_ping_req_pdu_send = 0x4004454c)
                [!provide]                        PROVIDE (r_llc_llcp_ping_rsp_pdu_send = 0x40044560)
                [!provide]                        PROVIDE (r_llc_llcp_recv_handler = 0x40044678)
                [!provide]                        PROVIDE (r_llc_llcp_reject_ind_pdu_send = 0x4004425c)
                [!provide]                        PROVIDE (r_llc_llcp_start_enc_req_pdu_send = 0x4004441c)
                [!provide]                        PROVIDE (r_llc_llcp_start_enc_rsp_pdu_send = 0x400441f8)
                [!provide]                        PROVIDE (r_llc_llcp_terminate_ind_pdu_send = 0x400444b0)
                [!provide]                        PROVIDE (r_llc_llcp_tester_send = 0x400445e4)
                [!provide]                        PROVIDE (r_llc_llcp_unknown_rsp_send_pdu = 0x40044534)
                [!provide]                        PROVIDE (r_llc_llcp_version_ind_pdu_send = 0x40043f6c)
                [!provide]                        PROVIDE (r_llc_lsto_con_update = 0x40045098)
                [!provide]                        PROVIDE (r_llc_ltk_req_send = 0x40044dc0)
                [!provide]                        PROVIDE (r_llc_map_update_finished = 0x40045260)
                [!provide]                        PROVIDE (r_llc_map_update_ind = 0x400450f0)
                [!provide]                        PROVIDE (r_llc_pdu_acl_tx_ack_defer = 0x400464dc)
                [!provide]                        PROVIDE (r_llc_pdu_defer = 0x40046528)
                [!provide]                        PROVIDE (r_llc_pdu_llcp_tx_ack_defer = 0x400463ac)
                [!provide]                        PROVIDE (r_llc_reset = 0x400447b8)
                [!provide]                        PROVIDE (r_llc_start = 0x400447f4)
                [!provide]                        PROVIDE (r_llc_stop = 0x400449ac)
                [!provide]                        PROVIDE (r_llc_util_bw_mgt = 0x4004629c)
                [!provide]                        PROVIDE (r_llc_util_clear_operation_ptr = 0x40046234)
                [!provide]                        PROVIDE (r_llc_util_dicon_procedure = 0x40046130)
                [!provide]                        PROVIDE (r_llc_util_get_free_conhdl = 0x400460c8)
                [!provide]                        PROVIDE (r_llc_util_get_nb_active_link = 0x40046100)
                [!provide]                        PROVIDE (r_llc_util_set_auth_payl_to_margin = 0x400461f4)
                [!provide]                        PROVIDE (r_llc_util_set_llcp_discard_enable = 0x400461c8)
                [!provide]                        PROVIDE (r_llc_util_update_channel_map = 0x400461ac)
                [!provide]                        PROVIDE (r_llc_version_rd_event_send = 0x40044e60)
                [!provide]                        PROVIDE (r_lld_adv_start = 0x40048b38)
                [!provide]                        PROVIDE (r_lld_adv_stop = 0x40048ea0)
                [!provide]                        PROVIDE (r_lld_ch_map_ind = 0x4004a2f4)
                [!provide]                        PROVIDE (r_lld_con_param_req = 0x40049f0c)
                [!provide]                        PROVIDE (r_lld_con_param_rsp = 0x40049e00)
                [!provide]                        PROVIDE (r_lld_con_start = 0x400491f8)
                [!provide]                        PROVIDE (r_lld_con_stop = 0x40049fdc)
                [!provide]                        PROVIDE (r_lld_con_update_after_param_req = 0x40049bcc)
                [!provide]                        PROVIDE (r_lld_con_update_ind = 0x4004a30c)
                [!provide]                        PROVIDE (r_lld_con_update_req = 0x40049b60)
                [!provide]                        PROVIDE (r_lld_core_reset = 0x40048a9c)
                [!provide]                        PROVIDE (r_lld_crypt_isr = 0x4004a324)
                [!provide]                        PROVIDE (r_lld_evt_adv_create = 0x400481f4)
                [!provide]                        PROVIDE (r_lld_evt_canceled = 0x400485c8)
                [!provide]                        PROVIDE (r_lld_evt_channel_next = 0x40046aac)
                [!provide]                        PROVIDE (r_lld_evt_deffered_elt_handler = 0x400482bc)
                [!provide]                        PROVIDE (r_lld_evt_delete_elt_handler = 0x40046974)
                [!provide]                        PROVIDE (r_lld_evt_delete_elt_push = 0x40046a3c)
                [!provide]                        PROVIDE (r_lld_evt_drift_compute = 0x40047670)
                [!provide]                        PROVIDE (r_lld_evt_elt_delete = 0x40047538)
                [!provide]                        PROVIDE (r_lld_evt_elt_insert = 0x400474c8)
                [!provide]                        PROVIDE (r_lld_evt_end = 0x400483e8)
                [!provide]                        PROVIDE (r_lld_evt_end_isr = 0x4004862c)
                [!provide]                        PROVIDE (r_lld_evt_init = 0x40046b3c)
                [!provide]                        PROVIDE (r_lld_evt_init_evt = 0x40046cd0)
                [!provide]                        PROVIDE (r_lld_evt_move_to_master = 0x40047ba0)
                [!provide]                        PROVIDE (r_lld_evt_move_to_slave = 0x40047e18)
                [!provide]                        PROVIDE (r_lld_evt_prevent_stop = 0x40047adc)
                [!provide]                        PROVIDE (r_lld_evt_restart = 0x40046d50)
                [!provide]                        PROVIDE (r_lld_evt_rx = 0x40048578)
                [!provide]                        PROVIDE (r_lld_evt_rx_isr = 0x40048678)
                [!provide]                        PROVIDE (r_lld_evt_scan_create = 0x40047ae8)
                [!provide]                        PROVIDE (r_lld_evt_schedule = 0x40047908)
                [!provide]                        PROVIDE (r_lld_evt_schedule_next = 0x400477dc)
                [!provide]                        PROVIDE (r_lld_evt_schedule_next_instant = 0x400476a8)
                [!provide]                        PROVIDE (r_lld_evt_slave_update = 0x40048138)
                [!provide]                        PROVIDE (r_lld_evt_update_create = 0x40047cd8)
                [!provide]                        PROVIDE (r_lld_get_mode = 0x40049ff8)
                [!provide]                        PROVIDE (r_lld_init = 0x4004873c)
                [!provide]                        PROVIDE (r_lld_move_to_master = 0x400499e0)
                [!provide]                        PROVIDE (r_lld_move_to_slave = 0x4004a024)
                [!provide]                        PROVIDE (r_lld_pdu_adv_pack = 0x4004b488)
                [!provide]                        PROVIDE (r_lld_pdu_check = 0x4004ac34)
                [!provide]                        PROVIDE (r_lld_pdu_data_send = 0x4004b018)
                [!provide]                        PROVIDE (r_lld_pdu_data_tx_push = 0x4004aecc)
                [!provide]                        PROVIDE (r_lld_pdu_rx_handler = 0x4004b4d4)
                [!provide]                        PROVIDE (r_lld_pdu_send_packet = 0x4004b774)
                [!provide]                        PROVIDE (r_lld_pdu_tx_flush = 0x4004b414)
                [!provide]                        PROVIDE (r_lld_pdu_tx_loop = 0x4004ae40)
                [!provide]                        PROVIDE (r_lld_pdu_tx_prog = 0x4004b120)
                [!provide]                        PROVIDE (r_lld_pdu_tx_push = 0x4004b080)
                [!provide]                        PROVIDE (r_lld_ral_renew_req = 0x4004a73c)
                [!provide]                        PROVIDE (r_lld_scan_start = 0x40048ee0)
                [!provide]                        PROVIDE (r_lld_scan_stop = 0x40049190)
                [!provide]                        PROVIDE (r_lld_test_mode_rx = 0x4004a540)
                [!provide]                        PROVIDE (r_lld_test_mode_tx = 0x4004a350)
                [!provide]                        PROVIDE (r_lld_test_stop = 0x4004a710)
                [!provide]                        PROVIDE (r_lld_util_anchor_point_move = 0x4004bacc)
                [!provide]                        PROVIDE (r_lld_util_compute_ce_max = 0x4004bc0c)
                [!provide]                        PROVIDE (r_lld_util_connection_param_set = 0x4004ba40)
                [!provide]                        PROVIDE (r_lld_util_dle_set_cs_fields = 0x4004ba90)
                [!provide]                        PROVIDE (r_lld_util_eff_tx_time_set = 0x4004bd88)
                [!provide]                        PROVIDE (r_lld_util_elt_programmed = 0x4004bce0)
                [!provide]                        PROVIDE (r_lld_util_flush_list = 0x4004bbd8)
                [!provide]                        PROVIDE (r_lld_util_freq2chnl = 0x4004b9e4)
                [!provide]                        PROVIDE (r_lld_util_get_bd_address = 0x4004b8ac)
                [!provide]                        PROVIDE (r_lld_util_get_local_offset = 0x4004ba10)
                [!provide]                        PROVIDE (r_lld_util_get_peer_offset = 0x4004ba24)
                [!provide]                        PROVIDE (r_lld_util_get_tx_pkt_cnt = 0x4004bd80)
                [!provide]                        PROVIDE (r_lld_util_instant_get = 0x4004b890)
                [!provide]                        PROVIDE (r_lld_util_instant_ongoing = 0x4004bbfc)
                [!provide]                        PROVIDE (r_lld_util_priority_set = 0x4004bd10)
                [!provide]                        PROVIDE (r_lld_util_priority_update = 0x4004bd78)
                [!provide]                        PROVIDE (r_lld_util_ral_force_rpa_renew = 0x4004b980)
                [!provide]                        PROVIDE (r_lld_util_set_bd_address = 0x4004b8f8)
                [!provide]                        PROVIDE (r_lld_wlcoex_set = 0x4004bd98)
                [!provide]                        PROVIDE (r_llm_ble_ready = 0x4004cc34)
                [!provide]                        PROVIDE (r_llm_common_cmd_complete_send = 0x4004d288)
                [!provide]                        PROVIDE (r_llm_common_cmd_status_send = 0x4004d2b4)
                [!provide]                        PROVIDE (r_llm_con_req_ind = 0x4004cc54)
                [!provide]                        PROVIDE (r_llm_con_req_tx_cfm = 0x4004d158)
                [!provide]                        PROVIDE (r_llm_create_con = 0x4004de78)
                [!provide]                        PROVIDE (r_llm_encryption_done = 0x4004dff8)
                [!provide]                        PROVIDE (r_llm_encryption_start = 0x4004e128)
                [!provide]                        PROVIDE (r_llm_end_evt_defer = 0x4004eb6c)
                [!provide]                        PROVIDE (r_llm_init = 0x4004c9f8)
                [!provide]                        PROVIDE (r_llm_le_adv_report_ind = 0x4004cdf4)
                [!provide]                        PROVIDE (r_llm_pdu_defer = 0x4004ec48)
                [!provide]                        PROVIDE (r_llm_ral_clear = 0x4004e1fc)
                [!provide]                        PROVIDE (r_llm_ral_dev_add = 0x4004e23c)
                [!provide]                        PROVIDE (r_llm_ral_dev_rm = 0x4004e3bc)
                [!provide]                        PROVIDE (r_llm_ral_get_rpa = 0x4004e400)
                [!provide]                        PROVIDE (r_llm_ral_set_timeout = 0x4004e4a0)
                [!provide]                        PROVIDE (r_llm_ral_update = 0x4004e4f8)
                [!provide]                        PROVIDE (r_llm_set_adv_data = 0x4004d960)
                [!provide]                        PROVIDE (r_llm_set_adv_en = 0x4004d7ec)
                [!provide]                        PROVIDE (r_llm_set_adv_param = 0x4004d5f4)
                [!provide]                        PROVIDE (r_llm_set_scan_en = 0x4004db64)
                [!provide]                        PROVIDE (r_llm_set_scan_param = 0x4004dac8)
                [!provide]                        PROVIDE (r_llm_set_scan_rsp_data = 0x4004da14)
                [!provide]                        PROVIDE (r_llm_test_mode_start_rx = 0x4004d534)
                [!provide]                        PROVIDE (r_llm_test_mode_start_tx = 0x4004d2fc)
                [!provide]                        PROVIDE (r_llm_util_adv_data_update = 0x4004e8fc)
                [!provide]                        PROVIDE (r_llm_util_apply_bd_addr = 0x4004e868)
                [!provide]                        PROVIDE (r_llm_util_bd_addr_in_ral = 0x4004eb08)
                [!provide]                        PROVIDE (r_llm_util_bd_addr_in_wl = 0x4004e788)
                [!provide]                        PROVIDE (r_llm_util_bd_addr_wl_position = 0x4004e720)
                [!provide]                        PROVIDE (r_llm_util_bl_add = 0x4004e9ac)
                [!provide]                        PROVIDE (r_llm_util_bl_check = 0x4004e930)
                [!provide]                        PROVIDE (r_llm_util_bl_rem = 0x4004ea70)
                [!provide]                        PROVIDE (r_llm_util_check_address_validity = 0x4004e7e4)
                [!provide]                        PROVIDE (r_llm_util_check_evt_mask = 0x4004e8b0)
                [!provide]                        PROVIDE (r_llm_util_check_map_validity = 0x4004e800)
                [!provide]                        PROVIDE (r_llm_util_get_channel_map = 0x4004e8d4)
                [!provide]                        PROVIDE (r_llm_util_get_supp_features = 0x4004e8e8)
                [!provide]                        PROVIDE (r_llm_util_set_public_addr = 0x4004e89c)
                [!provide]                        PROVIDE (r_llm_wl_clr = 0x4004dc54)
                [!provide]                        PROVIDE (r_llm_wl_dev_add = 0x4004dcc0)
                [!provide]                        PROVIDE (r_llm_wl_dev_add_hdl = 0x4004dd38)
                [!provide]                        PROVIDE (r_llm_wl_dev_rem = 0x4004dcfc)
                [!provide]                        PROVIDE (r_llm_wl_dev_rem_hdl = 0x4004dde0)
                [!provide]                        PROVIDE (r_lm_acl_disc = 0x4004f148)
                [!provide]                        PROVIDE (r_LM_AddSniff = 0x40022d20)
                [!provide]                        PROVIDE (r_lm_add_sync = 0x40051358)
                [!provide]                        PROVIDE (r_lm_afh_activate_timer = 0x4004f444)
                [!provide]                        PROVIDE (r_lm_afh_ch_ass_en_get = 0x4004f3f8)
                [!provide]                        PROVIDE (r_lm_afh_host_ch_class_get = 0x4004f410)
                [!provide]                        PROVIDE (r_lm_afh_master_ch_map_get = 0x4004f43c)
                [!provide]                        PROVIDE (r_lm_afh_peer_ch_class_set = 0x4004f418)
                [!provide]                        PROVIDE (r_lm_check_active_sync = 0x40051334)
                [!provide]                        PROVIDE (r_LM_CheckEdrFeatureRequest = 0x4002f90c)
                [!provide]                        PROVIDE (r_LM_CheckSwitchInstant = 0x4002f8c0)
                [!provide]                        PROVIDE (r_lm_check_sync_hl_rsp = 0x4005169c)
                [!provide]                        PROVIDE (r_lm_clk_adj_ack_pending_clear = 0x4004f514)
                [!provide]                        PROVIDE (r_lm_clk_adj_instant_pending_set = 0x4004f4d8)
                [!provide]                        PROVIDE (r_LM_ComputePacketType = 0x4002f554)
                [!provide]                        PROVIDE (r_LM_ComputeSniffSubRate = 0x400233ac)
                [!provide]                        PROVIDE (r_lm_debug_key_compare_192 = 0x4004f3a8)
                [!provide]                        PROVIDE (r_lm_debug_key_compare_256 = 0x4004f3d0)
                [!provide]                        PROVIDE (r_lm_dhkey_calc_init = 0x40013234)
                [!provide]                        PROVIDE (r_lm_dhkey_compare = 0x400132d8)
                [!provide]                        PROVIDE (r_lm_dut_mode_en_get = 0x4004f3ec)
                [!provide]                        PROVIDE (r_LM_ExtractMaxEncKeySize = 0x4001aca4)
                [!provide]                        PROVIDE (r_lm_f1 = 0x40012bb8)
                [!provide]                        PROVIDE (r_lm_f2 = 0x40012cfc)
                [!provide]                        PROVIDE (r_lm_f3 = 0x40013050)
                [!provide]                        PROVIDE (r_lm_g = 0x40012f90)
                [!provide]                        PROVIDE (r_LM_GetAFHSwitchInstant = 0x4002f86c)
                [!provide]                        PROVIDE (r_lm_get_auth_en = 0x4004f1ac)
                [!provide]                        PROVIDE (r_lm_get_common_pkt_types = 0x4002fa1c)
                [!provide]                        PROVIDE (r_LM_GetConnectionAcceptTimeout = 0x4004f1f4)
                [!provide]                        PROVIDE (r_LM_GetFeature = 0x4002f924)
                [!provide]                        PROVIDE (r_LM_GetLinkTimeout = 0x400233ec)
                [!provide]                        PROVIDE (r_LM_GetLocalNameSeg = 0x4004f200)
                [!provide]                        PROVIDE (r_lm_get_loopback_mode = 0x4004f248)
                [!provide]                        PROVIDE (r_LM_GetMasterEncKeySize = 0x4001b29c)
                [!provide]                        PROVIDE (r_LM_GetMasterEncRand = 0x4001b288)
                [!provide]                        PROVIDE (r_LM_GetMasterKey = 0x4001b260)
                [!provide]                        PROVIDE (r_LM_GetMasterKeyRand = 0x4001b274)
                [!provide]                        PROVIDE (r_lm_get_min_sync_intv = 0x400517a8)
                [!provide]                        PROVIDE (r_lm_get_nb_acl = 0x4004ef9c)
                [!provide]                        PROVIDE (r_lm_get_nb_sync_link = 0x4005179c)
                [!provide]                        PROVIDE (r_lm_get_nonce = 0x400131c4)
                [!provide]                        PROVIDE (r_lm_get_oob_local_commit = 0x4004f374)
                [!provide]                        PROVIDE (r_lm_get_oob_local_data_192 = 0x4004f2d4)
                [!provide]                        PROVIDE (r_lm_get_oob_local_data_256 = 0x4004f318)
                [!provide]                        PROVIDE (r_LM_GetPINType = 0x4004f1e8)
                [!provide]                        PROVIDE (r_lm_get_priv_key_192 = 0x4004f278)
                [!provide]                        PROVIDE (r_lm_get_priv_key_256 = 0x4004f2b8)
                [!provide]                        PROVIDE (r_lm_get_pub_key_192 = 0x4004f258)
                [!provide]                        PROVIDE (r_lm_get_pub_key_256 = 0x4004f298)
                [!provide]                        PROVIDE (r_LM_GetQoSParam = 0x4002f6e0)
                [!provide]                        PROVIDE (r_lm_get_sec_con_host_supp = 0x4004f1d4)
                [!provide]                        PROVIDE (r_LM_GetSniffSubratingParam = 0x4002325c)
                [!provide]                        PROVIDE (r_lm_get_sp_en = 0x4004f1c0)
                [!provide]                        PROVIDE (r_LM_GetSwitchInstant = 0x4002f7f8)
                [!provide]                        PROVIDE (r_lm_get_synchdl = 0x4005175c)
                [!provide]                        PROVIDE (r_lm_get_sync_param = 0x400503b4)
                [!provide]                        PROVIDE (r_lm_init = 0x4004ed34)
                [!provide]                        PROVIDE (r_lm_init_sync = 0x400512d8)
                [!provide]                        PROVIDE (r_lm_is_acl_con = 0x4004f47c)
                [!provide]                        PROVIDE (r_lm_is_acl_con_role = 0x4004f49c)
                [!provide]                        PROVIDE (r_lm_is_clk_adj_ack_pending = 0x4004f4e8)
                [!provide]                        PROVIDE (r_lm_is_clk_adj_instant_pending = 0x4004f4c8)
                [!provide]                        PROVIDE (r_lm_local_ext_fr_configured = 0x4004f540)
                [!provide]                        PROVIDE (r_lm_look_for_stored_link_key = 0x4002f948)
                [!provide]                        PROVIDE (r_lm_look_for_sync = 0x40051774)
                [!provide]                        PROVIDE (r_lm_lt_addr_alloc = 0x4004ef1c)
                [!provide]                        PROVIDE (r_lm_lt_addr_free = 0x4004ef74)
                [!provide]                        PROVIDE (r_lm_lt_addr_reserve = 0x4004ef48)
                [!provide]                        PROVIDE (r_LM_MakeCof = 0x4002f84c)
                [!provide]                        PROVIDE (r_LM_MakeRandVec = 0x400112d8)
                [!provide]                        PROVIDE (r_lm_master_clk_adj_req_handler = 0x40054180)
                [!provide]                        PROVIDE (r_LM_MaxSlot = 0x4002f694)
                [!provide]                        PROVIDE (r_lm_modif_sync = 0x40051578)
                [!provide]                        PROVIDE (r_lm_n_is_zero = 0x40012170)
                [!provide]                        PROVIDE (r_lm_num_clk_adj_ack_pending_set = 0x4004f500)
                [!provide]                        PROVIDE (r_lm_oob_f1 = 0x40012e54)
                [!provide]                        PROVIDE (r_lm_pca_sscan_link_get = 0x4004f560)
                [!provide]                        PROVIDE (r_lm_pca_sscan_link_set = 0x4004f550)
                [!provide]                        PROVIDE (nvds_null_read = 0x400542a0)
                [!provide]                        PROVIDE (nvds_null_write = 0x400542a8)
                [!provide]                        PROVIDE (nvds_null_erase = 0x400542b0)
                [!provide]                        PROVIDE (nvds_read = 0x400542c4)
                [!provide]                        PROVIDE (nvds_write = 0x400542fc)
                [!provide]                        PROVIDE (nvds_erase = 0x40054334)
                [!provide]                        PROVIDE (nvds_init_memory = 0x40054358)
                [!provide]                        PROVIDE (r_lmp_pack = 0x4001135c)
                [!provide]                        PROVIDE (r_lmp_unpack = 0x4001149c)
                [!provide]                        PROVIDE (r_lm_read_features = 0x4004f0d8)
                [!provide]                        PROVIDE (r_LM_RemoveSniff = 0x40023124)
                [!provide]                        PROVIDE (r_LM_RemoveSniffSubrating = 0x400233c4)
                [!provide]                        PROVIDE (r_lm_remove_sync = 0x400517c8)
                [!provide]                        PROVIDE (r_lm_reset_sync = 0x40051304)
                [!provide]                        PROVIDE (r_lm_role_switch_finished = 0x4004f028)
                [!provide]                        PROVIDE (r_lm_role_switch_start = 0x4004efe0)
                [!provide]                        PROVIDE (r_lm_sco_nego_end = 0x40051828)
                [!provide]                        PROVIDE (r_LM_SniffSubrateNegoRequired = 0x40023334)
                [!provide]                        PROVIDE (r_LM_SniffSubratingHlReq = 0x40023154)
                [!provide]                        PROVIDE (r_LM_SniffSubratingPeerReq = 0x400231dc)
                [!provide]                        PROVIDE (r_lm_sp_debug_mode_get = 0x4004f398)
                [!provide]                        PROVIDE (r_lm_sp_n192_convert_wnaf = 0x400123c0)
                [!provide]                        PROVIDE (r_lm_sp_n_one = 0x400123a4)
                [!provide]                        PROVIDE (r_lm_sp_p192_add = 0x40012828)
                [!provide]                        PROVIDE (r_lm_sp_p192_dbl = 0x4001268c)
                [!provide]                        PROVIDE (r_lm_sp_p192_invert = 0x40012b6c)
                [!provide]                        PROVIDE (r_lm_sp_p192_point_jacobian_to_affine = 0x40012468)
                [!provide]                        PROVIDE (r_lm_sp_p192_points_jacobian_to_affine = 0x400124e4)
                [!provide]                        PROVIDE (r_lm_sp_p192_point_to_inf = 0x40012458)
                [!provide]                        PROVIDE (r_lm_sp_pre_compute_points = 0x40012640)
                [!provide]                        PROVIDE (r_lm_sp_sha256_calculate = 0x400121a0)
                [!provide]                        PROVIDE (r_LM_SuppressAclPacket = 0x4002f658)
                [!provide]                        PROVIDE (r_lm_sync_flow_ctrl_en_get = 0x4004f404)
                [!provide]                        PROVIDE (r_LM_UpdateAclEdrPacketType = 0x4002f5d8)
                [!provide]                        PROVIDE (r_LM_UpdateAclPacketType = 0x4002f584)
                [!provide]                        PROVIDE (r_modules_funcs = 0x3ffafd6c)
                [!provide]                        PROVIDE (r_modules_funcs_p = 0x3ffafd68)
                [!provide]                        PROVIDE (r_nvds_del = 0x400544c4)
                [!provide]                        PROVIDE (r_nvds_get = 0x40054488)
                [!provide]                        PROVIDE (r_nvds_init = 0x40054410)
                [!provide]                        PROVIDE (r_nvds_lock = 0x400544fc)
                [!provide]                        PROVIDE (r_nvds_put = 0x40054534)
                [!provide]                        PROVIDE (rom_abs_temp = 0x400054f0)
                [!provide]                        PROVIDE (rom_bb_bss_bw_40_en = 0x4000401c)
                [!provide]                        PROVIDE (rom_bb_bss_cbw40_dig = 0x40003bac)
                [!provide]                        PROVIDE (rom_bb_rx_ht20_cen_bcov_en = 0x40003734)
                [!provide]                        PROVIDE (rom_bb_tx_ht20_cen = 0x40003760)
                [!provide]                        PROVIDE (rom_bb_wdg_test_en = 0x40003b70)
                [!provide]                        PROVIDE (rom_cbw2040_cfg = 0x400040b0)
                [!provide]                        PROVIDE (rom_check_noise_floor = 0x40003c78)
                [!provide]                        PROVIDE (rom_chip_i2c_readReg = 0x40004110)
                [!provide]                        PROVIDE (rom_chip_i2c_writeReg = 0x40004168)
                [!provide]                        PROVIDE (rom_chip_v7_bt_init = 0x40004d8c)
                [!provide]                        PROVIDE (rom_chip_v7_rx_init = 0x40004cec)
                [!provide]                        PROVIDE (rom_chip_v7_rx_rifs_en = 0x40003d90)
                [!provide]                        PROVIDE (rom_chip_v7_tx_init = 0x40004d18)
                [!provide]                        PROVIDE (rom_clk_force_on_vit = 0x40003710)
                [!provide]                        PROVIDE (rom_correct_rf_ana_gain = 0x400062a8)
                [!provide]                        PROVIDE (rom_dc_iq_est = 0x400055c8)
                [!provide]                        PROVIDE (rom_disable_agc = 0x40002fa4)
                [!provide]                        PROVIDE (rom_enable_agc = 0x40002fcc)
                [!provide]                        PROVIDE (rom_en_pwdet = 0x4000506c)
                [!provide]                        PROVIDE (rom_gen_rx_gain_table = 0x40003e3c)
                [!provide]                        PROVIDE (rom_get_data_sat = 0x4000312c)
                [!provide]                        PROVIDE (rom_get_fm_sar_dout = 0x40005204)
                [!provide]                        PROVIDE (rom_get_power_db = 0x40005fc8)
                [!provide]                        PROVIDE (rom_get_pwctrl_correct = 0x400065d4)
                [!provide]                        PROVIDE (rom_get_rfcal_rxiq_data = 0x40005bbc)
                [!provide]                        PROVIDE (rom_get_rf_gain_qdb = 0x40006290)
                [!provide]                        PROVIDE (rom_get_sar_dout = 0x40006564)
                [!provide]                        PROVIDE (rom_i2c_readReg = 0x40004148)
                0x00000000400041c0                PROVIDE (rom_i2c_readReg_Mask = 0x400041c0)
                0x00000000400041a4                PROVIDE (rom_i2c_writeReg = 0x400041a4)
                0x00000000400041fc                PROVIDE (rom_i2c_writeReg_Mask = 0x400041fc)
                [!provide]                        PROVIDE (rom_index_to_txbbgain = 0x40004df8)
                [!provide]                        PROVIDE (rom_iq_est_disable = 0x40005590)
                [!provide]                        PROVIDE (rom_iq_est_enable = 0x40005514)
                [!provide]                        PROVIDE (rom_linear_to_db = 0x40005f64)
                [!provide]                        PROVIDE (rom_loopback_mode_en = 0x400030f8)
                [!provide]                        PROVIDE (rom_meas_tone_pwr_db = 0x40006004)
                [!provide]                        PROVIDE (rom_mhz2ieee = 0x4000404c)
                [!provide]                        PROVIDE (rom_noise_floor_auto_set = 0x40003bdc)
                [!provide]                        PROVIDE (rom_pbus_debugmode = 0x40004458)
                [!provide]                        PROVIDE (rom_pbus_force_mode = 0x40004270)
                [!provide]                        PROVIDE (rom_pbus_force_test = 0x400043c0)
                [!provide]                        PROVIDE (rom_pbus_rd = 0x40004414)
                [!provide]                        PROVIDE (rom_pbus_rd_addr = 0x40004334)
                [!provide]                        PROVIDE (rom_pbus_rd_shift = 0x40004374)
                [!provide]                        PROVIDE (rom_pbus_rx_dco_cal = 0x40005620)
                [!provide]                        PROVIDE (rom_pbus_set_dco = 0x40004638)
                [!provide]                        PROVIDE (rom_pbus_set_rxgain = 0x40004480)
                [!provide]                        PROVIDE (rom_pbus_workmode = 0x4000446c)
                [!provide]                        PROVIDE (rom_pbus_xpd_rx_off = 0x40004508)
                [!provide]                        PROVIDE (rom_pbus_xpd_rx_on = 0x4000453c)
                [!provide]                        PROVIDE (rom_pbus_xpd_tx_off = 0x40004590)
                [!provide]                        PROVIDE (rom_pbus_xpd_tx_on = 0x400045e0)
                [!provide]                        PROVIDE (rom_phy_disable_agc = 0x40002f6c)
                [!provide]                        PROVIDE (rom_phy_disable_cca = 0x40003000)
                [!provide]                        PROVIDE (rom_phy_enable_agc = 0x40002f88)
                [!provide]                        PROVIDE (rom_phy_enable_cca = 0x4000302c)
                [!provide]                        PROVIDE (rom_phy_freq_correct = 0x40004b44)
                [!provide]                        PROVIDE (rom_phyFuns = 0x3ffae0c0)
                [!provide]                        PROVIDE (rom_phy_get_noisefloor = 0x40003c2c)
                [!provide]                        PROVIDE (rom_phy_get_vdd33 = 0x4000642c)
                [!provide]                        PROVIDE (rom_pow_usr = 0x40003044)
                [!provide]                        PROVIDE (rom_read_sar_dout = 0x400051c0)
                [!provide]                        PROVIDE (rom_restart_cal = 0x400046e0)
                [!provide]                        PROVIDE (rom_rfcal_pwrctrl = 0x40006058)
                [!provide]                        PROVIDE (rom_rfcal_rxiq = 0x40005b4c)
                [!provide]                        PROVIDE (rom_rfcal_txcap = 0x40005dec)
                [!provide]                        PROVIDE (rom_rfpll_reset = 0x40004680)
                [!provide]                        PROVIDE (rom_rfpll_set_freq = 0x400047f8)
                [!provide]                        PROVIDE (rom_rtc_mem_backup = 0x40003db4)
                [!provide]                        PROVIDE (rom_rtc_mem_recovery = 0x40003df4)
                [!provide]                        PROVIDE (rom_rx_gain_force = 0x4000351c)
                [!provide]                        PROVIDE (rom_rxiq_cover_mg_mp = 0x40005a68)
                [!provide]                        PROVIDE (rom_rxiq_get_mis = 0x400058e4)
                [!provide]                        PROVIDE (rom_rxiq_set_reg = 0x40005a00)
                [!provide]                        PROVIDE (rom_set_cal_rxdc = 0x400030b8)
                [!provide]                        PROVIDE (rom_set_chan_cal_interp = 0x40005ce0)
                [!provide]                        PROVIDE (rom_set_channel_freq = 0x40004880)
                [!provide]                        PROVIDE (rom_set_loopback_gain = 0x40003060)
                [!provide]                        PROVIDE (rom_set_noise_floor = 0x40003d48)
                [!provide]                        PROVIDE (rom_set_pbus_mem = 0x400031a4)
                [!provide]                        PROVIDE (rom_set_rf_freq_offset = 0x40004ca8)
                [!provide]                        PROVIDE (rom_set_rxclk_en = 0x40003594)
                [!provide]                        PROVIDE (rom_set_txcap_reg = 0x40005d50)
                [!provide]                        PROVIDE (rom_set_txclk_en = 0x40003564)
                [!provide]                        PROVIDE (rom_spur_coef_cfg = 0x40003ac8)
                [!provide]                        PROVIDE (rom_spur_reg_write_one_tone = 0x400037f0)
                [!provide]                        PROVIDE (rom_start_tx_tone = 0x400036b4)
                [!provide]                        PROVIDE (rom_start_tx_tone_step = 0x400035d0)
                [!provide]                        PROVIDE (rom_stop_tx_tone = 0x40003f98)
                [!provide]                        PROVIDE (_rom_store = 0x4000d66c)
                [!provide]                        PROVIDE (_rom_store_table = 0x4000d4f8)
                [!provide]                        PROVIDE (rom_target_power_add_backoff = 0x40006268)
                [!provide]                        PROVIDE (rom_tx_atten_set_interp = 0x400061cc)
                [!provide]                        PROVIDE (rom_txbbgain_to_index = 0x40004dc0)
                [!provide]                        PROVIDE (rom_txcal_work_mode = 0x4000510c)
                [!provide]                        PROVIDE (rom_txdc_cal_init = 0x40004e10)
                [!provide]                        PROVIDE (rom_txdc_cal_v70 = 0x40004ea4)
                [!provide]                        PROVIDE (rom_txiq_cover = 0x4000538c)
                [!provide]                        PROVIDE (rom_txiq_get_mis_pwr = 0x400052dc)
                [!provide]                        PROVIDE (rom_txiq_set_reg = 0x40005154)
                [!provide]                        PROVIDE (rom_tx_pwctrl_bg_init = 0x4000662c)
                [!provide]                        PROVIDE (rom_txtone_linear_pwr = 0x40005290)
                [!provide]                        PROVIDE (rom_wait_rfpll_cal_end = 0x400047a8)
                [!provide]                        PROVIDE (rom_write_gain_mem = 0x4000348c)
                [!provide]                        PROVIDE (rom_write_rfpll_sdm = 0x40004740)
                [!provide]                        PROVIDE (roundup2 = 0x4000ab7c)
                [!provide]                        PROVIDE (r_plf_funcs_p = 0x3ffb8360)
                [!provide]                        PROVIDE (r_rf_rw_bt_init = 0x40054868)
                [!provide]                        PROVIDE (r_rf_rw_init = 0x40054b0c)
                [!provide]                        PROVIDE (r_rf_rw_le_init = 0x400549d0)
                [!provide]                        PROVIDE (r_rwble_activity_ongoing_check = 0x40054d8c)
                [!provide]                        PROVIDE (r_rwble_init = 0x40054bf4)
                [!provide]                        PROVIDE (r_rwble_isr = 0x40054e08)
                [!provide]                        PROVIDE (r_rwble_reset = 0x40054ce8)
                [!provide]                        PROVIDE (r_rwble_sleep_check = 0x40054d78)
                [!provide]                        PROVIDE (r_rwble_version = 0x40054dac)
                [!provide]                        PROVIDE (r_rwbt_init = 0x40055160)
                [!provide]                        PROVIDE (r_rwbt_isr = 0x40055248)
                [!provide]                        PROVIDE (r_rwbt_reset = 0x400551bc)
                [!provide]                        PROVIDE (r_rwbt_sleep_check = 0x4005577c)
                [!provide]                        PROVIDE (r_rwbt_sleep_enter = 0x400557a4)
                [!provide]                        PROVIDE (r_rwbt_sleep_wakeup = 0x400557fc)
                [!provide]                        PROVIDE (r_rwbt_sleep_wakeup_end = 0x400558cc)
                [!provide]                        PROVIDE (r_rwbt_version = 0x4005520c)
                [!provide]                        PROVIDE (r_rwip_assert_err = 0x40055f88)
                [!provide]                        PROVIDE (r_rwip_check_wakeup_boundary = 0x400558fc)
                [!provide]                        PROVIDE (r_rwip_ext_wakeup_enable = 0x40055f3c)
                [!provide]                        PROVIDE (r_rwip_init = 0x4005595c)
                [!provide]                        PROVIDE (r_rwip_pca_clock_dragging_only = 0x40055f48)
                [!provide]                        PROVIDE (r_rwip_prevent_sleep_clear = 0x40055ec8)
                [!provide]                        PROVIDE (r_rwip_prevent_sleep_set = 0x40055e64)
                [!provide]                        PROVIDE (r_rwip_reset = 0x40055ab8)
                [!provide]                        PROVIDE (r_rwip_schedule = 0x40055b38)
                [!provide]                        PROVIDE (r_rwip_sleep = 0x40055b5c)
                [!provide]                        PROVIDE (r_rwip_sleep_enable = 0x40055f30)
                [!provide]                        PROVIDE (r_rwip_version = 0x40055b20)
                [!provide]                        PROVIDE (r_rwip_wakeup = 0x40055dc4)
                [!provide]                        PROVIDE (r_rwip_wakeup_delay_set = 0x40055e4c)
                [!provide]                        PROVIDE (r_rwip_wakeup_end = 0x40055e18)
                [!provide]                        PROVIDE (r_rwip_wlcoex_set = 0x40055f60)
                [!provide]                        PROVIDE (r_SHA_256 = 0x40013a90)
                [!provide]                        PROVIDE (rwip_coex_cfg = 0x3ff9914c)
                [!provide]                        PROVIDE (rwip_priority = 0x3ff99159)
                [!provide]                        PROVIDE (rwip_rf = 0x3ffbdb28)
                [!provide]                        PROVIDE (rwip_rf_p_get = 0x400558f4)
                [!provide]                        PROVIDE (r_XorKey = 0x400112c0)
                [!provide]                        PROVIDE (sha_blk_bits = 0x3ff99290)
                [!provide]                        PROVIDE (sha_blk_bits_bytes = 0x3ff99288)
                [!provide]                        PROVIDE (sha_blk_hash_bytes = 0x3ff9928c)
                [!provide]                        PROVIDE (sig_matrix = 0x3ffae293)
                [!provide]                        PROVIDE (sip_after_tx_complete = 0x4000b358)
                [!provide]                        PROVIDE (sip_alloc_to_host_evt = 0x4000ab9c)
                [!provide]                        PROVIDE (sip_get_ptr = 0x4000b34c)
                [!provide]                        PROVIDE (sip_get_state = 0x4000ae2c)
                [!provide]                        PROVIDE (sip_init_attach = 0x4000ae58)
                [!provide]                        PROVIDE (sip_install_rx_ctrl_cb = 0x4000ae10)
                [!provide]                        PROVIDE (sip_install_rx_data_cb = 0x4000ae20)
                [!provide]                        PROVIDE (sip_is_active = 0x4000b3c0)
                [!provide]                        PROVIDE (sip_post_init = 0x4000aed8)
                [!provide]                        PROVIDE (sip_reclaim_from_host_cmd = 0x4000adbc)
                [!provide]                        PROVIDE (sip_reclaim_tx_data_pkt = 0x4000ad5c)
                [!provide]                        PROVIDE (sip_send = 0x4000af54)
                [!provide]                        PROVIDE (sip_to_host_chain_append = 0x4000aef8)
                [!provide]                        PROVIDE (sip_to_host_evt_send_done = 0x4000ac04)
                [!provide]                        PROVIDE (slc_add_credits = 0x4000baf4)
                [!provide]                        PROVIDE (slc_enable = 0x4000b64c)
                [!provide]                        PROVIDE (slc_from_host_chain_fetch = 0x4000b7e8)
                [!provide]                        PROVIDE (slc_from_host_chain_recycle = 0x4000bb10)
                [!provide]                        PROVIDE (slc_has_pkt_to_host = 0x4000b5fc)
                [!provide]                        PROVIDE (slc_init_attach = 0x4000b918)
                [!provide]                        PROVIDE (slc_init_credit = 0x4000badc)
                [!provide]                        PROVIDE (slc_reattach = 0x4000b62c)
                [!provide]                        PROVIDE (slc_send_to_host_chain = 0x4000b6a0)
                [!provide]                        PROVIDE (slc_set_host_io_max_window = 0x4000b89c)
                [!provide]                        PROVIDE (slc_to_host_chain_recycle = 0x4000b758)
                [!provide]                        PROVIDE (specialModP256 = 0x4001600c)
                [!provide]                        PROVIDE (__stack = 0x3ffe3f20)
                [!provide]                        PROVIDE (__stack_app = 0x3ffe7e30)
                [!provide]                        PROVIDE (_stack_sentry = 0x3ffe1320)
                [!provide]                        PROVIDE (_stack_sentry_app = 0x3ffe5230)
                [!provide]                        PROVIDE (_start = 0x40000704)
                [!provide]                        PROVIDE (start_tb_console = 0x4005a980)
                [!provide]                        PROVIDE (_stat_r = 0x4000bcb4)
                [!provide]                        PROVIDE (_stext = 0x40000560)
                [!provide]                        PROVIDE (SubtractBigHex256 = 0x40015bcc)
                [!provide]                        PROVIDE (SubtractBigHexMod256 = 0x40015e8c)
                [!provide]                        PROVIDE (SubtractBigHexUint32_256 = 0x40015f8c)
                [!provide]                        PROVIDE (SubtractFromSelfBigHex256 = 0x40015c20)
                [!provide]                        PROVIDE (SubtractFromSelfBigHexSign256 = 0x40015dc8)
                [!provide]                        PROVIDE (sw_to_hw = 0x3ffb8d40)
                [!provide]                        PROVIDE (syscall_table_ptr_app = 0x3ffae020)
                [!provide]                        PROVIDE (syscall_table_ptr_pro = 0x3ffae024)
                [!provide]                        PROVIDE (tdefl_compress = 0x400600bc)
                [!provide]                        PROVIDE (tdefl_compress_buffer = 0x400607f4)
                [!provide]                        PROVIDE (tdefl_compress_mem_to_mem = 0x40060900)
                [!provide]                        PROVIDE (tdefl_compress_mem_to_output = 0x400608e0)
                [!provide]                        PROVIDE (tdefl_get_adler32 = 0x400608d8)
                [!provide]                        PROVIDE (tdefl_get_prev_return_status = 0x400608d0)
                [!provide]                        PROVIDE (tdefl_init = 0x40060810)
                [!provide]                        PROVIDE (tdefl_write_image_to_png_file_in_memory = 0x4006091c)
                [!provide]                        PROVIDE (tdefl_write_image_to_png_file_in_memory_ex = 0x40060910)
                [!provide]                        PROVIDE (tinfl_decompress = 0x4005ef30)
                [!provide]                        PROVIDE (tinfl_decompress_mem_to_callback = 0x40060090)
                [!provide]                        PROVIDE (tinfl_decompress_mem_to_mem = 0x40060050)
                [!provide]                        PROVIDE (UartDev = 0x3ffe019c)
                [!provide]                        PROVIDE (user_code_start = 0x3ffe0400)
                [!provide]                        PROVIDE (veryBigHexP256 = 0x3ff9736c)
                [!provide]                        PROVIDE (xthal_bcopy = 0x4000c098)
                [!provide]                        PROVIDE (xthal_copy123 = 0x4000c124)
                [!provide]                        PROVIDE (xthal_get_ccompare = 0x4000c078)
                [!provide]                        PROVIDE (xthal_get_ccount = 0x4000c050)
                [!provide]                        PROVIDE (xthal_get_interrupt = 0x4000c1e4)
                [!provide]                        PROVIDE (xthal_get_intread = 0x4000c1e4)
                [!provide]                        PROVIDE (Xthal_intlevel = 0x3ff9c2b4)
                [!provide]                        PROVIDE (xthal_memcpy = 0x4000c0bc)
                [!provide]                        PROVIDE (xthal_set_ccompare = 0x4000c058)
                0x000000004000c1ec                PROVIDE (xthal_set_intclear = 0x4000c1ec)
                [!provide]                        PROVIDE (_xtos_set_intlevel = 0x4000bfdc)
                0x000000003ffe01e0                PROVIDE (g_ticks_per_us_pro = 0x3ffe01e0)
                [!provide]                        PROVIDE (g_ticks_per_us_app = 0x3ffe40f0)
                [!provide]                        PROVIDE (esp_rom_spiflash_config_param = 0x40063238)
                [!provide]                        PROVIDE (esp_rom_spiflash_read_user_cmd = 0x400621b0)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted_disable = 0x40062e60)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted_enable = 0x40062df4)
                [!provide]                        PROVIDE (esp_rom_spiflash_prepare_encrypted_data = 0x40062e1c)
                [!provide]                        PROVIDE (esp_rom_spiflash_select_qio_pins = 0x40061ddc)
                [!provide]                        PROVIDE (esp_rom_spiflash_attach = 0x40062a6c)
                [!provide]                        PROVIDE (esp_rom_spiflash_config_clk = 0x40062bc8)
                [!provide]                        PROVIDE (g_rom_spiflash_chip = 0x3ffae270)
                [!provide]                        PROVIDE (hci_le_rd_rem_used_feats_cmd_handler = 0x400417b4)
                [!provide]                        PROVIDE (llcp_length_req_handler = 0x40043808)
                [!provide]                        PROVIDE (llcp_unknown_rsp_handler = 0x40043ba8)
                [!provide]                        PROVIDE (llcp_channel_map_req_handler = 0x4004291c)
                [!provide]                        PROVIDE (llcp_con_up_req_handler = 0x400426f0)
                [!provide]                        PROVIDE (FilePacketSendDeflatedReqMsgProc = 0x40008b24)
                [!provide]                        PROVIDE (FilePacketSendReqMsgProc = 0x40008860)
                [!provide]                        PROVIDE (FlashDwnLdDeflatedStartMsgProc = 0x40008ad8)
                [!provide]                        PROVIDE (FlashDwnLdParamCfgMsgProc = 0x4000891c)
                [!provide]                        PROVIDE (FlashDwnLdStartMsgProc = 0x40008820)
                [!provide]                        PROVIDE (FlashDwnLdStopDeflatedReqMsgProc = 0x40008c18)
                [!provide]                        PROVIDE (FlashDwnLdStopReqMsgProc = 0x400088ec)
                [!provide]                        PROVIDE (MemDwnLdStartMsgProc = 0x40008948)
                [!provide]                        PROVIDE (MemDwnLdStopReqMsgProc = 0x400089dc)
                [!provide]                        PROVIDE (MemPacketSendReqMsgProc = 0x40008978)
                [!provide]                        PROVIDE (uart_baudrate_detect = 0x40009034)
                [!provide]                        PROVIDE (uart_buff_switch = 0x400093c0)
                [!provide]                        PROVIDE (UartConnCheck = 0x40008738)
                [!provide]                        PROVIDE (UartConnectProc = 0x40008a04)
                [!provide]                        PROVIDE (UartDwnLdProc = 0x40008ce8)
                [!provide]                        PROVIDE (UartRegReadProc = 0x40008a58)
                [!provide]                        PROVIDE (UartRegWriteProc = 0x40008a14)
                [!provide]                        PROVIDE (UartSetBaudProc = 0x40008aac)
                [!provide]                        PROVIDE (UartSpiAttachProc = 0x40008a6c)
                [!provide]                        PROVIDE (UartSpiReadProc = 0x40008a80)
                [!provide]                        PROVIDE (VerifyFlashMd5Proc = 0x40008c44)
                [!provide]                        PROVIDE (GetUartDevice = 0x40009598)
                [!provide]                        PROVIDE (RcvMsg = 0x4000954c)
                [!provide]                        PROVIDE (SendMsg = 0x40009384)
                [!provide]                        PROVIDE (UartGetCmdLn = 0x40009564)
                [!provide]                        PROVIDE (UartRxString = 0x400092fc)
                [!provide]                        PROVIDE (Uart_Init = 0x40009120)
                [!provide]                        PROVIDE (recv_packet = 0x40009424)
                [!provide]                        PROVIDE (send_packet = 0x40009340)
                [!provide]                        PROVIDE (uartAttach = 0x40008fd0)
                [!provide]                        PROVIDE (uart_div_modify = 0x400090cc)
                [!provide]                        PROVIDE (uart_rx_intr_handler = 0x40008f4c)
                [!provide]                        PROVIDE (uart_rx_one_char = 0x400092d0)
                [!provide]                        PROVIDE (uart_rx_one_char_block = 0x400092a4)
                [!provide]                        PROVIDE (uart_rx_readbuff = 0x40009394)
                [!provide]                        PROVIDE (uart_tx_flush = 0x40009258)
                0x0000000040009200                PROVIDE (uart_tx_one_char = 0x40009200)
                [!provide]                        PROVIDE (uart_tx_one_char2 = 0x4000922c)
                [!provide]                        PROVIDE (uart_tx_switch = 0x40009028)
                [!provide]                        PROVIDE (gpio_output_set = 0x40009b24)
                [!provide]                        PROVIDE (gpio_output_set_high = 0x40009b5c)
                [!provide]                        PROVIDE (gpio_input_get = 0x40009b88)
                [!provide]                        PROVIDE (gpio_input_get_high = 0x40009b9c)
                0x0000000040009edc                PROVIDE (gpio_matrix_in = 0x40009edc)
                0x0000000040009f0c                PROVIDE (gpio_matrix_out = 0x40009f0c)
                0x0000000040009fdc                PROVIDE (gpio_pad_select_gpio = 0x40009fdc)
                [!provide]                        PROVIDE (gpio_pad_set_drv = 0x4000a11c)
                [!provide]                        PROVIDE (gpio_pad_pulldown = 0x4000a348)
                [!provide]                        PROVIDE (gpio_pad_pullup = 0x4000a22c)
                [!provide]                        PROVIDE (gpio_pad_hold = 0x4000a734)
                [!provide]                        PROVIDE (gpio_pad_unhold = 0x4000a484)
                [!provide]                        PROVIDE (ets_aes_crypt = 0x4005c9b8)
                [!provide]                        PROVIDE (ets_aes_disable = 0x4005c8f8)
                [!provide]                        PROVIDE (ets_aes_enable = 0x4005c8cc)
                [!provide]                        PROVIDE (ets_aes_set_endian = 0x4005c928)
                [!provide]                        PROVIDE (ets_aes_setkey_dec = 0x4005c994)
                [!provide]                        PROVIDE (ets_aes_setkey_enc = 0x4005c97c)
                [!provide]                        PROVIDE (ets_bigint_disable = 0x4005c4e0)
                [!provide]                        PROVIDE (ets_bigint_enable = 0x4005c498)
                [!provide]                        PROVIDE (ets_bigint_mod_mult_getz = 0x4005c818)
                [!provide]                        PROVIDE (ets_bigint_mod_mult_prepare = 0x4005c7b4)
                [!provide]                        PROVIDE (ets_bigint_mod_power_getz = 0x4005c614)
                [!provide]                        PROVIDE (ets_bigint_mod_power_prepare = 0x4005c54c)
                [!provide]                        PROVIDE (ets_bigint_montgomery_mult_getz = 0x4005c7a4)
                [!provide]                        PROVIDE (ets_bigint_montgomery_mult_prepare = 0x4005c6fc)
                [!provide]                        PROVIDE (ets_bigint_mult_getz = 0x4005c6e8)
                [!provide]                        PROVIDE (ets_bigint_mult_prepare = 0x4005c630)
                [!provide]                        PROVIDE (ets_bigint_wait_finish = 0x4005c520)
                [!provide]                        PROVIDE (ets_post = 0x4000673c)
                [!provide]                        PROVIDE (ets_run = 0x400066bc)
                [!provide]                        PROVIDE (ets_set_idle_cb = 0x40006674)
                [!provide]                        PROVIDE (ets_task = 0x40006688)
                [!provide]                        PROVIDE (ets_efuse_get_8M_clock = 0x40008710)
                [!provide]                        PROVIDE (ets_efuse_get_spiconfig = 0x40008658)
                [!provide]                        PROVIDE (ets_efuse_program_op = 0x40008628)
                [!provide]                        PROVIDE (ets_efuse_read_op = 0x40008600)
                [!provide]                        PROVIDE (ets_intr_lock = 0x400067b0)
                [!provide]                        PROVIDE (ets_intr_unlock = 0x400067c4)
                [!provide]                        PROVIDE (ets_isr_attach = 0x400067ec)
                [!provide]                        PROVIDE (ets_waiti0 = 0x400067d8)
                0x000000004000681c                PROVIDE (intr_matrix_set = 0x4000681c)
                [!provide]                        PROVIDE (check_pos = 0x400068b8)
                0x000000004000689c                PROVIDE (ets_set_appcpu_boot_addr = 0x4000689c)
                [!provide]                        PROVIDE (ets_set_startup_callback = 0x4000688c)
                [!provide]                        PROVIDE (ets_set_user_start = 0x4000687c)
                [!provide]                        PROVIDE (ets_unpack_flash_code = 0x40007018)
                [!provide]                        PROVIDE (ets_unpack_flash_code_legacy = 0x4000694c)
                [!provide]                        PROVIDE (rom_main = 0x400076c4)
                [!provide]                        PROVIDE (ets_write_char_uart = 0x40007cf8)
                [!provide]                        PROVIDE (ets_install_putc1 = 0x40007d18)
                [!provide]                        PROVIDE (ets_install_putc2 = 0x40007d38)
                [!provide]                        PROVIDE (ets_install_uart_printf = 0x40007d28)
                0x0000000040007d54                PROVIDE (ets_printf = 0x40007d54)
                [!provide]                        PROVIDE (rtc_boot_control = 0x4000821c)
                0x00000000400081d4                PROVIDE (rtc_get_reset_reason = 0x400081d4)
                [!provide]                        PROVIDE (rtc_get_wakeup_cause = 0x400081f4)
                [!provide]                        PROVIDE (rtc_select_apb_bridge = 0x40008288)
                [!provide]                        PROVIDE (set_rtc_memory_crc = 0x40008208)
                [!provide]                        PROVIDE (software_reset = 0x4000824c)
                [!provide]                        PROVIDE (software_reset_cpu = 0x40008264)
                [!provide]                        PROVIDE (ets_secure_boot_check = 0x4005cb40)
                [!provide]                        PROVIDE (ets_secure_boot_check_finish = 0x4005cc04)
                [!provide]                        PROVIDE (ets_secure_boot_check_start = 0x4005cbcc)
                [!provide]                        PROVIDE (ets_secure_boot_finish = 0x4005ca84)
                [!provide]                        PROVIDE (ets_secure_boot_hash = 0x4005cad4)
                [!provide]                        PROVIDE (ets_secure_boot_obtain = 0x4005cb14)
                [!provide]                        PROVIDE (ets_secure_boot_rd_abstract = 0x4005cba8)
                [!provide]                        PROVIDE (ets_secure_boot_rd_iv = 0x4005cb84)
                [!provide]                        PROVIDE (ets_secure_boot_start = 0x4005ca34)
                [!provide]                        PROVIDE (ets_sha_disable = 0x4005c0a8)
                [!provide]                        PROVIDE (ets_sha_enable = 0x4005c07c)
                [!provide]                        PROVIDE (ets_sha_finish = 0x4005c104)
                [!provide]                        PROVIDE (ets_sha_init = 0x4005c0d4)
                [!provide]                        PROVIDE (ets_sha_update = 0x4005c2a0)
                0x0000000040008534                PROVIDE (ets_delay_us = 0x40008534)
                [!provide]                        PROVIDE (ets_get_cpu_frequency = 0x4000855c)
                [!provide]                        PROVIDE (ets_get_detected_xtal_freq = 0x40008588)
                [!provide]                        PROVIDE (ets_get_xtal_scale = 0x4000856c)
                [!provide]                        PROVIDE (ets_update_cpu_frequency_rom = 0x40008550)
                [!provide]                        PROVIDE (hci_tl_env = 0x3ffb8154)
                [!provide]                        PROVIDE (ld_acl_env = 0x3ffb8258)
                [!provide]                        PROVIDE (ea_env = 0x3ffb80ec)
                [!provide]                        PROVIDE (lc_sco_data_path_config = 0x3ffb81f8)
                [!provide]                        PROVIDE (lc_sco_env = 0x3ffb81fc)
                [!provide]                        PROVIDE (ld_active_ch_map = 0x3ffb8334)
                [!provide]                        PROVIDE (ld_bcst_acl_env = 0x3ffb8274)
                [!provide]                        PROVIDE (ld_csb_rx_env = 0x3ffb8278)
                [!provide]                        PROVIDE (ld_csb_tx_env = 0x3ffb827c)
                [!provide]                        PROVIDE (ld_env = 0x3ffb9510)
                [!provide]                        PROVIDE (ld_fm_env = 0x3ffb8284)
                [!provide]                        PROVIDE (ld_inq_env = 0x3ffb82e4)
                [!provide]                        PROVIDE (ld_iscan_env = 0x3ffb82e8)
                [!provide]                        PROVIDE (ld_page_env = 0x3ffb82f0)
                [!provide]                        PROVIDE (ld_pca_env = 0x3ffb82f4)
                [!provide]                        PROVIDE (ld_pscan_env = 0x3ffb8308)
                [!provide]                        PROVIDE (ld_sched_env = 0x3ffb830c)
                [!provide]                        PROVIDE (ld_sched_params = 0x3ffb96c0)
                [!provide]                        PROVIDE (ld_sco_env = 0x3ffb824c)
                [!provide]                        PROVIDE (ld_sscan_env = 0x3ffb832c)
                [!provide]                        PROVIDE (ld_strain_env = 0x3ffb8330)
                [!provide]                        PROVIDE (LM_Sniff = 0x3ffb8230)
                [!provide]                        PROVIDE (LM_SniffSubRate = 0x3ffb8214)
                [!provide]                        PROVIDE (prbs_64bytes = 0x3ff98992)
                [!provide]                        PROVIDE (nvds_env = 0x3ffb8364)
                [!provide]                        PROVIDE (nvds_magic_number = 0x3ff9912a)
                [!provide]                        PROVIDE (TASK_DESC_LLD = 0x3ff98b58)
                [!provide]                        PROVIDE (esp_rom_crc32_le = crc32_le)
                [!provide]                        PROVIDE (esp_rom_crc16_le = crc16_le)
                [!provide]                        PROVIDE (esp_rom_crc8_le = crc8_le)
                [!provide]                        PROVIDE (esp_rom_crc32_be = crc32_be)
                [!provide]                        PROVIDE (esp_rom_crc16_be = crc16_be)
                [!provide]                        PROVIDE (esp_rom_crc8_be = crc8_be)
                0x0000000040009fdc                PROVIDE (esp_rom_gpio_pad_select_gpio = gpio_pad_select_gpio)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_pullup_only = gpio_pad_pullup)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_set_drv = gpio_pad_set_drv)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_unhold = gpio_pad_unhold)
                [!provide]                        PROVIDE (esp_rom_gpio_connect_in_signal = gpio_matrix_in)
                [!provide]                        PROVIDE (esp_rom_gpio_connect_out_signal = gpio_matrix_out)
                [!provide]                        PROVIDE (esp_rom_efuse_mac_address_crc8 = esp_crc8)
                [!provide]                        PROVIDE (esp_rom_efuse_get_flash_gpio_info = ets_efuse_get_spiconfig)
                [!provide]                        PROVIDE (esp_rom_efuse_is_secure_boot_enabled = ets_efuse_secure_boot_enabled)
                [!provide]                        PROVIDE (esp_rom_uart_flush_tx = uart_tx_flush)
                0x0000000040009200                PROVIDE (esp_rom_uart_tx_one_char = uart_tx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_tx_wait_idle = uart_tx_wait_idle)
                [!provide]                        PROVIDE (esp_rom_uart_rx_one_char = uart_rx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_rx_string = UartRxString)
                [!provide]                        PROVIDE (esp_rom_uart_set_as_console = uart_tx_switch)
                [!provide]                        PROVIDE (esp_rom_uart_putc = ets_write_char_uart)
                [!provide]                        PROVIDE (esp_rom_md5_init = 0x4005da7c)
                [!provide]                        PROVIDE (esp_rom_md5_update = 0x4005da9c)
                [!provide]                        PROVIDE (esp_rom_md5_final = 0x4005db1c)
                0x0000000040007d54                PROVIDE (esp_rom_printf = ets_printf)
                0x0000000040008534                PROVIDE (esp_rom_delay_us = ets_delay_us)
                [!provide]                        PROVIDE (esp_rom_install_uart_printf = ets_install_uart_printf)
                0x000000004006387c                __absvdi2 = 0x4006387c
                0x0000000040063868                __absvsi2 = 0x40063868
                0x0000000040002590                __adddf3 = 0x40002590
                0x00000000400020e8                __addsf3 = 0x400020e8
                0x0000000040002cbc                __addvdi3 = 0x40002cbc
                0x0000000040002c98                __addvsi3 = 0x40002c98
                0x000000004000c818                __ashldi3 = 0x4000c818
                0x000000004000c830                __ashrdi3 = 0x4000c830
                0x0000000040064b08                __bswapdi2 = 0x40064b08
                0x0000000040064ae0                __bswapsi2 = 0x40064ae0
                0x0000000040064b7c                __clrsbdi2 = 0x40064b7c
                0x0000000040064b64                __clrsbsi2 = 0x40064b64
                0x000000004000ca50                __clzdi2 = 0x4000ca50
                0x000000004000c7e8                __clzsi2 = 0x4000c7e8
                0x0000000040063820                __cmpdi2 = 0x40063820
                0x000000004000ca64                __ctzdi2 = 0x4000ca64
                0x000000004000c7f0                __ctzsi2 = 0x4000c7f0
                0x00000000400645a4                __divdc3 = 0x400645a4
                0x0000000040002954                __divdf3 = 0x40002954
                0x000000004000ca84                __divdi3 = 0x4000ca84
                0x000000004000c7b8                __divsi3 = 0x4000c7b8
                0x00000000400636a8                __eqdf2 = 0x400636a8
                0x0000000040063374                __eqsf2 = 0x40063374
                0x0000000040002c34                __extendsfdf2 = 0x40002c34
                0x000000004000ca2c                __ffsdi2 = 0x4000ca2c
                0x000000004000c804                __ffssi2 = 0x4000c804
                0x0000000040002ac4                __fixdfdi = 0x40002ac4
                0x0000000040002a78                __fixdfsi = 0x40002a78
                0x000000004000244c                __fixsfdi = 0x4000244c
                0x000000004000240c                __fixsfsi = 0x4000240c
                0x0000000040002b30                __fixunsdfsi = 0x40002b30
                0x0000000040002504                __fixunssfdi = 0x40002504
                0x00000000400024ac                __fixunssfsi = 0x400024ac
                0x000000004000c988                __floatdidf = 0x4000c988
                0x000000004000c8c0                __floatdisf = 0x4000c8c0
                0x000000004000c944                __floatsidf = 0x4000c944
                0x000000004000c870                __floatsisf = 0x4000c870
                0x000000004000c978                __floatundidf = 0x4000c978
                0x000000004000c8b0                __floatundisf = 0x4000c8b0
                0x000000004000c938                __floatunsidf = 0x4000c938
                0x000000004000c864                __floatunsisf = 0x4000c864
                0x0000000040064a70                __gcc_bcmp = 0x40064a70
                0x0000000040063768                __gedf2 = 0x40063768
                0x000000004006340c                __gesf2 = 0x4006340c
                0x00000000400636dc                __gtdf2 = 0x400636dc
                0x00000000400633a0                __gtsf2 = 0x400633a0
                0x0000000040063704                __ledf2 = 0x40063704
                0x00000000400633c0                __lesf2 = 0x400633c0
                0x000000004000c84c                __lshrdi3 = 0x4000c84c
                0x0000000040063790                __ltdf2 = 0x40063790
                0x000000004006342c                __ltsf2 = 0x4006342c
                0x000000004000cd4c                __moddi3 = 0x4000cd4c
                0x000000004000c7c0                __modsi3 = 0x4000c7c0
                0x0000000040063c90                __muldc3 = 0x40063c90
                0x000000004006358c                __muldf3 = 0x4006358c
                0x000000004000c9fc                __muldi3 = 0x4000c9fc
                0x00000000400632c8                __mulsf3 = 0x400632c8
                0x000000004000c7b0                __mulsi3 = 0x4000c7b0
                0x0000000040002d78                __mulvdi3 = 0x40002d78
                0x0000000040002d60                __mulvsi3 = 0x40002d60
                0x00000000400636a8                __nedf2 = 0x400636a8
                0x00000000400634a0                __negdf2 = 0x400634a0
                0x000000004000ca14                __negdi2 = 0x4000ca14
                0x00000000400020c0                __negsf2 = 0x400020c0
                0x0000000040002e98                __negvdi2 = 0x40002e98
                0x0000000040002e78                __negvsi2 = 0x40002e78
                0x0000000040063374                __nesf2 = 0x40063374
                0x000000003ff96544                __nsau_data = 0x3ff96544
                0x0000000040002f3c                __paritysi2 = 0x40002f3c
                0x000000003ff96544                __popcount_tab = 0x3ff96544
                0x0000000040002ef8                __popcountdi2 = 0x40002ef8
                0x0000000040002ed0                __popcountsi2 = 0x40002ed0
                0x00000000400638e4                __powidf2 = 0x400638e4
                0x00000000400026e4                __subdf3 = 0x400026e4
                0x00000000400021d0                __subsf3 = 0x400021d0
                0x0000000040002d20                __subvdi3 = 0x40002d20
                0x0000000040002cf8                __subvsi3 = 0x40002cf8
                0x0000000040002b90                __truncdfsf2 = 0x40002b90
                0x0000000040063840                __ucmpdi2 = 0x40063840
                0x0000000040064bec                __udiv_w_sdiv = 0x40064bec
                0x000000004000cff8                __udivdi3 = 0x4000cff8
                0x0000000040064bf4                __udivmoddi4 = 0x40064bf4
                0x000000004000c7c8                __udivsi3 = 0x4000c7c8
                0x000000004000d280                __umoddi3 = 0x4000d280
                0x000000004000c7d0                __umodsi3 = 0x4000c7d0
                0x000000004000c7d8                __umulsidi3 = 0x4000c7d8
                0x00000000400637f4                __unorddf2 = 0x400637f4
                0x0000000040063478                __unordsf2 = 0x40063478
                [!provide]                        PROVIDE (abort = 0x4000bba4)
                [!provide]                        PROVIDE (aes_128_cbc_decrypt = 0x4005cc7c)
                [!provide]                        PROVIDE (aes_128_cbc_encrypt = 0x4005cc18)
                [!provide]                        PROVIDE (aes_unwrap = 0x4005ccf0)
                [!provide]                        PROVIDE (base64_decode = 0x4005ced8)
                [!provide]                        PROVIDE (base64_encode = 0x4005cdbc)
                [!provide]                        PROVIDE (ets_isr_mask = 0x400067fc)
                [!provide]                        PROVIDE (ets_isr_unmask = 0x40006808)
                [!provide]                        PROVIDE (ets_timer_arm = 0x40008368)
                [!provide]                        PROVIDE (ets_timer_arm_us = 0x400083ac)
                [!provide]                        PROVIDE (ets_timer_disarm = 0x400083ec)
                [!provide]                        PROVIDE (ets_timer_done = 0x40008428)
                [!provide]                        PROVIDE (ets_timer_init = 0x400084e8)
                [!provide]                        PROVIDE (ets_timer_handler_isr = 0x40008454)
                [!provide]                        PROVIDE (ets_timer_setfn = 0x40008350)
                [!provide]                        PROVIDE (hmac_md5 = 0x4005d264)
                [!provide]                        PROVIDE (hmac_md5_vector = 0x4005d17c)
                [!provide]                        PROVIDE (hmac_sha1 = 0x40060acc)
                [!provide]                        PROVIDE (hmac_sha1_vector = 0x400609e4)
                [!provide]                        PROVIDE (hmac_sha256 = 0x40060d58)
                [!provide]                        PROVIDE (hmac_sha256_vector = 0x40060c84)
                [!provide]                        PROVIDE (MD5Final = 0x4005db1c)
                [!provide]                        PROVIDE (MD5Init = 0x4005da7c)
                [!provide]                        PROVIDE (MD5Update = 0x4005da9c)
                [!provide]                        PROVIDE (md5_vector = 0x4005db80)
                [!provide]                        PROVIDE (pbkdf2_sha1 = 0x40060ba4)
                [!provide]                        PROVIDE (rc4_skip = 0x40060928)
                [!provide]                        PROVIDE (sha1_prf = 0x40060ae8)
                [!provide]                        PROVIDE (sha1_vector = 0x40060b64)
                [!provide]                        PROVIDE (sha256_prf = 0x40060d70)
                [!provide]                        PROVIDE (sha256_vector = 0x40060e08)
                [!provide]                        PROVIDE (uart_tx_wait_idle = 0x40009278)
                0x000000003ff40000                PROVIDE (UART0 = 0x3ff40000)
                [!provide]                        PROVIDE (SPI1 = 0x3ff42000)
                [!provide]                        PROVIDE (SPI0 = 0x3ff43000)
                0x000000003ff44000                PROVIDE (GPIO = 0x3ff44000)
                [!provide]                        PROVIDE (SIGMADELTA = 0x3ff44f00)
                [!provide]                        PROVIDE (RTCCNTL = 0x3ff48000)
                [!provide]                        PROVIDE (RTCIO = 0x3ff48400)
                [!provide]                        PROVIDE (SENS = 0x3ff48800)
                [!provide]                        PROVIDE (HINF = 0x3ff4b000)
                [!provide]                        PROVIDE (UHCI1 = 0x3ff4c000)
                [!provide]                        PROVIDE (I2S0 = 0x3ff4f000)
                0x000000003ff50000                PROVIDE (UART1 = 0x3ff50000)
                0x000000003ff53000                PROVIDE (I2C0 = 0x3ff53000)
                [!provide]                        PROVIDE (UHCI0 = 0x3ff54000)
                [!provide]                        PROVIDE (HOST = 0x3ff55000)
                [!provide]                        PROVIDE (RMT = 0x3ff56000)
                [!provide]                        PROVIDE (RMTMEM = 0x3ff56800)
                [!provide]                        PROVIDE (PCNT = 0x3ff57000)
                [!provide]                        PROVIDE (SLC = 0x3ff58000)
                [!provide]                        PROVIDE (LEDC = 0x3ff59000)
                [!provide]                        PROVIDE (MCPWM0 = 0x3ff5e000)
                [!provide]                        PROVIDE (TIMERG0 = 0x3ff5f000)
                [!provide]                        PROVIDE (TIMERG1 = 0x3ff60000)
                [!provide]                        PROVIDE (SPI2 = 0x3ff64000)
                [!provide]                        PROVIDE (SPI3 = 0x3ff65000)
                [!provide]                        PROVIDE (SYSCON = 0x3ff66000)
                [!provide]                        PROVIDE (I2C1 = 0x3ff67000)
                [!provide]                        PROVIDE (SDMMC = 0x3ff68000)
                [!provide]                        PROVIDE (EMAC_DMA = 0x3ff69000)
                [!provide]                        PROVIDE (EMAC_EXT = 0x3ff69800)
                [!provide]                        PROVIDE (EMAC_MAC = 0x3ff6a000)
                [!provide]                        PROVIDE (TWAI = 0x3ff6b000)
                [!provide]                        PROVIDE (CAN = 0x3ff6b000)
                [!provide]                        PROVIDE (MCPWM1 = 0x3ff6c000)
                [!provide]                        PROVIDE (I2S1 = 0x3ff6d000)
                [!provide]                        PROVIDE (UART2 = 0x3ff6e000)
OUTPUT(zephyr/zephyr_pre1.elf elf32-xtensa-le)
